
I2C_MPU6050.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006610  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000050c  080067b0  080067b0  000167b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006cbc  08006cbc  000201d8  2**0
                  CONTENTS
  4 .ARM          00000000  08006cbc  08006cbc  000201d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006cbc  08006cbc  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006cbc  08006cbc  00016cbc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006cc0  08006cc0  00016cc0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  08006cc4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000054  200001d8  08006e9c  000201d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000022c  08006e9c  0002022c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000024a5  00000000  00000000  00020208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000aa4  00000000  00000000  000226ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002b0  00000000  00000000  00023158  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000238  00000000  00000000  00023408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010069  00000000  00000000  00023640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000033d5  00000000  00000000  000336a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00056466  00000000  00000000  00036a7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0008cee4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001f04  00000000  00000000  0008cf34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d8 	.word	0x200001d8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006798 	.word	0x08006798

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001dc 	.word	0x200001dc
 80001dc:	08006798 	.word	0x08006798

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <LCD_Init>:
#define HD44780_1LINE               0x00
#define HD44780_5x10DOTS            0x04
#define HD44780_5x8DOTS             0x00

/***************************************************************/
void LCD_Init(uint8_t cols, uint8_t rows) {
 8000d04:	b580      	push	{r7, lr}
 8000d06:	b082      	sub	sp, #8
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	4603      	mov	r3, r0
 8000d0c:	460a      	mov	r2, r1
 8000d0e:	71fb      	strb	r3, [r7, #7]
 8000d10:	4613      	mov	r3, r2
 8000d12:	71bb      	strb	r3, [r7, #6]
	/* Init pinout */
#if USE_I2C_INTERFACE == 0
	LCD_InitPins();
#endif
	/* At least 40ms */
	LCD_Delay(45);
 8000d14:	202d      	movs	r0, #45	; 0x2d
 8000d16:	f000 fb7d 	bl	8001414 <delay_ms>

	/* Set LCD width and height */
	LCD_Opts.Rows = rows;
 8000d1a:	4a29      	ldr	r2, [pc, #164]	; (8000dc0 <LCD_Init+0xbc>)
 8000d1c:	79bb      	ldrb	r3, [r7, #6]
 8000d1e:	70d3      	strb	r3, [r2, #3]
	LCD_Opts.Cols = cols;
 8000d20:	4a27      	ldr	r2, [pc, #156]	; (8000dc0 <LCD_Init+0xbc>)
 8000d22:	79fb      	ldrb	r3, [r7, #7]
 8000d24:	7113      	strb	r3, [r2, #4]

	/* Set cursor pointer to beginning for LCD */
	LCD_Opts.currentX = 0;
 8000d26:	4b26      	ldr	r3, [pc, #152]	; (8000dc0 <LCD_Init+0xbc>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	715a      	strb	r2, [r3, #5]
	LCD_Opts.currentY = 0;
 8000d2c:	4b24      	ldr	r3, [pc, #144]	; (8000dc0 <LCD_Init+0xbc>)
 8000d2e:	2200      	movs	r2, #0
 8000d30:	719a      	strb	r2, [r3, #6]


	LCD_Opts.DisplayFunction = HD44780_4BITMODE | HD44780_5x8DOTS | HD44780_1LINE;
 8000d32:	4b23      	ldr	r3, [pc, #140]	; (8000dc0 <LCD_Init+0xbc>)
 8000d34:	2200      	movs	r2, #0
 8000d36:	705a      	strb	r2, [r3, #1]
	if (rows > 1) {
 8000d38:	79bb      	ldrb	r3, [r7, #6]
 8000d3a:	2b01      	cmp	r3, #1
 8000d3c:	d906      	bls.n	8000d4c <LCD_Init+0x48>
		LCD_Opts.DisplayFunction |= HD44780_2LINE;
 8000d3e:	4b20      	ldr	r3, [pc, #128]	; (8000dc0 <LCD_Init+0xbc>)
 8000d40:	785b      	ldrb	r3, [r3, #1]
 8000d42:	f043 0308 	orr.w	r3, r3, #8
 8000d46:	b2da      	uxtb	r2, r3
 8000d48:	4b1d      	ldr	r3, [pc, #116]	; (8000dc0 <LCD_Init+0xbc>)
 8000d4a:	705a      	strb	r2, [r3, #1]
	}

	/* Try to set 4bit mode */
#if USE_I2C_INTERFACE
	LCD_Cmd(0x30);
 8000d4c:	2030      	movs	r0, #48	; 0x30
 8000d4e:	f000 f8d9 	bl	8000f04 <LCD_Cmd>
#else
	LCD_nibble_write(0x03,0);
#endif
	LCD_Delay(45);
 8000d52:	202d      	movs	r0, #45	; 0x2d
 8000d54:	f000 fb5e 	bl	8001414 <delay_ms>

	/* Second try */
#if USE_I2C_INTERFACE
	LCD_Cmd(0x30);
 8000d58:	2030      	movs	r0, #48	; 0x30
 8000d5a:	f000 f8d3 	bl	8000f04 <LCD_Cmd>
#else
	LCD_nibble_write(0x03,0);
#endif
	LCD_Delay(45);
 8000d5e:	202d      	movs	r0, #45	; 0x2d
 8000d60:	f000 fb58 	bl	8001414 <delay_ms>

	/* Third goo! */
#if USE_I2C_INTERFACE
	LCD_Cmd(0x30);
 8000d64:	2030      	movs	r0, #48	; 0x30
 8000d66:	f000 f8cd 	bl	8000f04 <LCD_Cmd>
#else
	LCD_nibble_write(0x03,0);
#endif
	LCD_Delay(45);
 8000d6a:	202d      	movs	r0, #45	; 0x2d
 8000d6c:	f000 fb52 	bl	8001414 <delay_ms>

	/* Set 4-bit interface */
#if USE_I2C_INTERFACE
	LCD_Cmd(0x20);
 8000d70:	2020      	movs	r0, #32
 8000d72:	f000 f8c7 	bl	8000f04 <LCD_Cmd>
#else
	LCD_nibble_write(0x02,0);
#endif
	LCD_Delay(1);
 8000d76:	2001      	movs	r0, #1
 8000d78:	f000 fb4c 	bl	8001414 <delay_ms>

	/* Set # lines, font size, etc. */
	LCD_Cmd(HD44780_FUNCTIONSET | LCD_Opts.DisplayFunction);
 8000d7c:	4b10      	ldr	r3, [pc, #64]	; (8000dc0 <LCD_Init+0xbc>)
 8000d7e:	785b      	ldrb	r3, [r3, #1]
 8000d80:	f043 0320 	orr.w	r3, r3, #32
 8000d84:	b2db      	uxtb	r3, r3
 8000d86:	4618      	mov	r0, r3
 8000d88:	f000 f8bc 	bl	8000f04 <LCD_Cmd>

	/* Turn the display on with no cursor or blinking default */
	LCD_Opts.DisplayControl = HD44780_DISPLAYON;
 8000d8c:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <LCD_Init+0xbc>)
 8000d8e:	2204      	movs	r2, #4
 8000d90:	701a      	strb	r2, [r3, #0]
	LCD_DisplayOn();
 8000d92:	f000 f87f 	bl	8000e94 <LCD_DisplayOn>

	/* Clear lcd */
	LCD_Clear();
 8000d96:	f000 f815 	bl	8000dc4 <LCD_Clear>

	/* Default font directions */
	LCD_Opts.DisplayMode = HD44780_ENTRYLEFT | HD44780_ENTRYSHIFTDECREMENT;
 8000d9a:	4b09      	ldr	r3, [pc, #36]	; (8000dc0 <LCD_Init+0xbc>)
 8000d9c:	2202      	movs	r2, #2
 8000d9e:	709a      	strb	r2, [r3, #2]
	LCD_Cmd(HD44780_ENTRYMODESET | LCD_Opts.DisplayMode);
 8000da0:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <LCD_Init+0xbc>)
 8000da2:	789b      	ldrb	r3, [r3, #2]
 8000da4:	f043 0304 	orr.w	r3, r3, #4
 8000da8:	b2db      	uxtb	r3, r3
 8000daa:	4618      	mov	r0, r3
 8000dac:	f000 f8aa 	bl	8000f04 <LCD_Cmd>

	/* Delay */
	LCD_Delay(45);
 8000db0:	202d      	movs	r0, #45	; 0x2d
 8000db2:	f000 fb2f 	bl	8001414 <delay_ms>
	return;
 8000db6:	bf00      	nop
}
 8000db8:	3708      	adds	r7, #8
 8000dba:	46bd      	mov	sp, r7
 8000dbc:	bd80      	pop	{r7, pc}
 8000dbe:	bf00      	nop
 8000dc0:	200001f4 	.word	0x200001f4

08000dc4 <LCD_Clear>:


void LCD_Clear(void) {
 8000dc4:	b580      	push	{r7, lr}
 8000dc6:	af00      	add	r7, sp, #0
	LCD_Cmd(HD44780_CLEARDISPLAY);
 8000dc8:	2001      	movs	r0, #1
 8000dca:	f000 f89b 	bl	8000f04 <LCD_Cmd>
	LCD_Delay(3);
 8000dce:	2003      	movs	r0, #3
 8000dd0:	f000 fb20 	bl	8001414 <delay_ms>
}
 8000dd4:	bf00      	nop
 8000dd6:	bd80      	pop	{r7, pc}

08000dd8 <LCD_Puts>:
void LCD_Puts(uint8_t x, uint8_t y, char* str) {
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	b082      	sub	sp, #8
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	4603      	mov	r3, r0
 8000de0:	603a      	str	r2, [r7, #0]
 8000de2:	71fb      	strb	r3, [r7, #7]
 8000de4:	460b      	mov	r3, r1
 8000de6:	71bb      	strb	r3, [r7, #6]
	LCD_CursorSet(x, y);
 8000de8:	79ba      	ldrb	r2, [r7, #6]
 8000dea:	79fb      	ldrb	r3, [r7, #7]
 8000dec:	4611      	mov	r1, r2
 8000dee:	4618      	mov	r0, r3
 8000df0:	f000 f960 	bl	80010b4 <LCD_CursorSet>
	while (*str) {
 8000df4:	e042      	b.n	8000e7c <LCD_Puts+0xa4>
		if (LCD_Opts.currentX >= LCD_Opts.Cols) {
 8000df6:	4b26      	ldr	r3, [pc, #152]	; (8000e90 <LCD_Puts+0xb8>)
 8000df8:	795a      	ldrb	r2, [r3, #5]
 8000dfa:	4b25      	ldr	r3, [pc, #148]	; (8000e90 <LCD_Puts+0xb8>)
 8000dfc:	791b      	ldrb	r3, [r3, #4]
 8000dfe:	429a      	cmp	r2, r3
 8000e00:	d310      	bcc.n	8000e24 <LCD_Puts+0x4c>
			LCD_Opts.currentX = 0;
 8000e02:	4b23      	ldr	r3, [pc, #140]	; (8000e90 <LCD_Puts+0xb8>)
 8000e04:	2200      	movs	r2, #0
 8000e06:	715a      	strb	r2, [r3, #5]
			LCD_Opts.currentY++;
 8000e08:	4b21      	ldr	r3, [pc, #132]	; (8000e90 <LCD_Puts+0xb8>)
 8000e0a:	799b      	ldrb	r3, [r3, #6]
 8000e0c:	3301      	adds	r3, #1
 8000e0e:	b2da      	uxtb	r2, r3
 8000e10:	4b1f      	ldr	r3, [pc, #124]	; (8000e90 <LCD_Puts+0xb8>)
 8000e12:	719a      	strb	r2, [r3, #6]
			LCD_CursorSet(LCD_Opts.currentX, LCD_Opts.currentY);
 8000e14:	4b1e      	ldr	r3, [pc, #120]	; (8000e90 <LCD_Puts+0xb8>)
 8000e16:	795b      	ldrb	r3, [r3, #5]
 8000e18:	4a1d      	ldr	r2, [pc, #116]	; (8000e90 <LCD_Puts+0xb8>)
 8000e1a:	7992      	ldrb	r2, [r2, #6]
 8000e1c:	4611      	mov	r1, r2
 8000e1e:	4618      	mov	r0, r3
 8000e20:	f000 f948 	bl	80010b4 <LCD_CursorSet>
		}
		if (*str == '\n') {
 8000e24:	683b      	ldr	r3, [r7, #0]
 8000e26:	781b      	ldrb	r3, [r3, #0]
 8000e28:	2b0a      	cmp	r3, #10
 8000e2a:	d10e      	bne.n	8000e4a <LCD_Puts+0x72>
			LCD_Opts.currentY++;
 8000e2c:	4b18      	ldr	r3, [pc, #96]	; (8000e90 <LCD_Puts+0xb8>)
 8000e2e:	799b      	ldrb	r3, [r3, #6]
 8000e30:	3301      	adds	r3, #1
 8000e32:	b2da      	uxtb	r2, r3
 8000e34:	4b16      	ldr	r3, [pc, #88]	; (8000e90 <LCD_Puts+0xb8>)
 8000e36:	719a      	strb	r2, [r3, #6]
			LCD_CursorSet(LCD_Opts.currentX, LCD_Opts.currentY);
 8000e38:	4b15      	ldr	r3, [pc, #84]	; (8000e90 <LCD_Puts+0xb8>)
 8000e3a:	795b      	ldrb	r3, [r3, #5]
 8000e3c:	4a14      	ldr	r2, [pc, #80]	; (8000e90 <LCD_Puts+0xb8>)
 8000e3e:	7992      	ldrb	r2, [r2, #6]
 8000e40:	4611      	mov	r1, r2
 8000e42:	4618      	mov	r0, r3
 8000e44:	f000 f936 	bl	80010b4 <LCD_CursorSet>
 8000e48:	e015      	b.n	8000e76 <LCD_Puts+0x9e>
		} else if (*str == '\r') {
 8000e4a:	683b      	ldr	r3, [r7, #0]
 8000e4c:	781b      	ldrb	r3, [r3, #0]
 8000e4e:	2b0d      	cmp	r3, #13
 8000e50:	d106      	bne.n	8000e60 <LCD_Puts+0x88>
			LCD_CursorSet(0, LCD_Opts.currentY);
 8000e52:	4b0f      	ldr	r3, [pc, #60]	; (8000e90 <LCD_Puts+0xb8>)
 8000e54:	799b      	ldrb	r3, [r3, #6]
 8000e56:	4619      	mov	r1, r3
 8000e58:	2000      	movs	r0, #0
 8000e5a:	f000 f92b 	bl	80010b4 <LCD_CursorSet>
 8000e5e:	e00a      	b.n	8000e76 <LCD_Puts+0x9e>
		} else {
			LCD_Data(*str);
 8000e60:	683b      	ldr	r3, [r7, #0]
 8000e62:	781b      	ldrb	r3, [r3, #0]
 8000e64:	4618      	mov	r0, r3
 8000e66:	f000 f8bd 	bl	8000fe4 <LCD_Data>
			LCD_Opts.currentX++;
 8000e6a:	4b09      	ldr	r3, [pc, #36]	; (8000e90 <LCD_Puts+0xb8>)
 8000e6c:	795b      	ldrb	r3, [r3, #5]
 8000e6e:	3301      	adds	r3, #1
 8000e70:	b2da      	uxtb	r2, r3
 8000e72:	4b07      	ldr	r3, [pc, #28]	; (8000e90 <LCD_Puts+0xb8>)
 8000e74:	715a      	strb	r2, [r3, #5]
		}
		str++;
 8000e76:	683b      	ldr	r3, [r7, #0]
 8000e78:	3301      	adds	r3, #1
 8000e7a:	603b      	str	r3, [r7, #0]
	while (*str) {
 8000e7c:	683b      	ldr	r3, [r7, #0]
 8000e7e:	781b      	ldrb	r3, [r3, #0]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d1b8      	bne.n	8000df6 <LCD_Puts+0x1e>
	}
}
 8000e84:	bf00      	nop
 8000e86:	bf00      	nop
 8000e88:	3708      	adds	r7, #8
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bd80      	pop	{r7, pc}
 8000e8e:	bf00      	nop
 8000e90:	200001f4 	.word	0x200001f4

08000e94 <LCD_DisplayOn>:


void LCD_DisplayOn(void) {
 8000e94:	b580      	push	{r7, lr}
 8000e96:	af00      	add	r7, sp, #0
	LCD_Opts.DisplayControl |= HD44780_DISPLAYON;
 8000e98:	4b08      	ldr	r3, [pc, #32]	; (8000ebc <LCD_DisplayOn+0x28>)
 8000e9a:	781b      	ldrb	r3, [r3, #0]
 8000e9c:	f043 0304 	orr.w	r3, r3, #4
 8000ea0:	b2da      	uxtb	r2, r3
 8000ea2:	4b06      	ldr	r3, [pc, #24]	; (8000ebc <LCD_DisplayOn+0x28>)
 8000ea4:	701a      	strb	r2, [r3, #0]
	LCD_Cmd(HD44780_DISPLAYCONTROL | LCD_Opts.DisplayControl);
 8000ea6:	4b05      	ldr	r3, [pc, #20]	; (8000ebc <LCD_DisplayOn+0x28>)
 8000ea8:	781b      	ldrb	r3, [r3, #0]
 8000eaa:	f043 0308 	orr.w	r3, r3, #8
 8000eae:	b2db      	uxtb	r3, r3
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	f000 f827 	bl	8000f04 <LCD_Cmd>
}
 8000eb6:	bf00      	nop
 8000eb8:	bd80      	pop	{r7, pc}
 8000eba:	bf00      	nop
 8000ebc:	200001f4 	.word	0x200001f4

08000ec0 <LCD_Printf>:
	LCD_CursorSet(x, y);
	LCD_Data(location);
}


void LCD_Printf(uint8_t x, uint8_t y,char *format,...){
 8000ec0:	b40c      	push	{r2, r3}
 8000ec2:	b580      	push	{r7, lr}
 8000ec4:	b098      	sub	sp, #96	; 0x60
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	4603      	mov	r3, r0
 8000eca:	460a      	mov	r2, r1
 8000ecc:	71fb      	strb	r3, [r7, #7]
 8000ece:	4613      	mov	r3, r2
 8000ed0:	71bb      	strb	r3, [r7, #6]
	char str[80];

	/*Extract the the argument list using VA apis */
	va_list args;
	va_start(args, format);
 8000ed2:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000ed6:	60fb      	str	r3, [r7, #12]
	vsprintf(str, format,args);
 8000ed8:	f107 0310 	add.w	r3, r7, #16
 8000edc:	68fa      	ldr	r2, [r7, #12]
 8000ede:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	f002 fd2b 	bl	800393c <vsiprintf>
	LCD_Puts(x, y,str);
 8000ee6:	f107 0210 	add.w	r2, r7, #16
 8000eea:	79b9      	ldrb	r1, [r7, #6]
 8000eec:	79fb      	ldrb	r3, [r7, #7]
 8000eee:	4618      	mov	r0, r3
 8000ef0:	f7ff ff72 	bl	8000dd8 <LCD_Puts>
	va_end(args);
}
 8000ef4:	bf00      	nop
 8000ef6:	3760      	adds	r7, #96	; 0x60
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8000efe:	b002      	add	sp, #8
 8000f00:	4770      	bx	lr
	...

08000f04 <LCD_Cmd>:
	GPIOX_ODR(LCD_E) = 0;

}
#endif

static void LCD_Cmd(uint8_t cmd){
 8000f04:	b580      	push	{r7, lr}
 8000f06:	b086      	sub	sp, #24
 8000f08:	af00      	add	r7, sp, #0
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	71fb      	strb	r3, [r7, #7]
#if USE_I2C_INTERFACE
	uint32_t delay = 1;
 8000f0e:	2301      	movs	r3, #1
 8000f10:	617b      	str	r3, [r7, #20]
	uint8_t data_u, data_l;
	uint8_t data_t[4];

	data_u = (cmd & 0xF0);
 8000f12:	79fb      	ldrb	r3, [r7, #7]
 8000f14:	f023 030f 	bic.w	r3, r3, #15
 8000f18:	74fb      	strb	r3, [r7, #19]
	data_l = ((cmd<<4) & 0xF0);
 8000f1a:	79fb      	ldrb	r3, [r7, #7]
 8000f1c:	011b      	lsls	r3, r3, #4
 8000f1e:	74bb      	strb	r3, [r7, #18]
	data_t[0] = data_u | 0x0C;  //en=1, rs=0
 8000f20:	7cfb      	ldrb	r3, [r7, #19]
 8000f22:	f043 030c 	orr.w	r3, r3, #12
 8000f26:	b2db      	uxtb	r3, r3
 8000f28:	733b      	strb	r3, [r7, #12]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[0], 1);
 8000f2a:	f107 020c 	add.w	r2, r7, #12
 8000f2e:	2301      	movs	r3, #1
 8000f30:	213f      	movs	r1, #63	; 0x3f
 8000f32:	482b      	ldr	r0, [pc, #172]	; (8000fe0 <LCD_Cmd+0xdc>)
 8000f34:	f000 fd04 	bl	8001940 <I2C_MasterSendData>
	while(delay-->0);
 8000f38:	bf00      	nop
 8000f3a:	697b      	ldr	r3, [r7, #20]
 8000f3c:	1e5a      	subs	r2, r3, #1
 8000f3e:	617a      	str	r2, [r7, #20]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d1fa      	bne.n	8000f3a <LCD_Cmd+0x36>

	data_t[1] = data_u | 0x08;  //en=0, rs=0
 8000f44:	7cfb      	ldrb	r3, [r7, #19]
 8000f46:	f043 0308 	orr.w	r3, r3, #8
 8000f4a:	b2db      	uxtb	r3, r3
 8000f4c:	737b      	strb	r3, [r7, #13]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[1], 1);
 8000f4e:	f107 030c 	add.w	r3, r7, #12
 8000f52:	1c5a      	adds	r2, r3, #1
 8000f54:	2301      	movs	r3, #1
 8000f56:	213f      	movs	r1, #63	; 0x3f
 8000f58:	4821      	ldr	r0, [pc, #132]	; (8000fe0 <LCD_Cmd+0xdc>)
 8000f5a:	f000 fcf1 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 8000f5e:	2301      	movs	r3, #1
 8000f60:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 8000f62:	bf00      	nop
 8000f64:	697b      	ldr	r3, [r7, #20]
 8000f66:	1e5a      	subs	r2, r3, #1
 8000f68:	617a      	str	r2, [r7, #20]
 8000f6a:	2b00      	cmp	r3, #0
 8000f6c:	d1fa      	bne.n	8000f64 <LCD_Cmd+0x60>

	data_t[2] = data_l | 0x0C;  //en=1, rs=0
 8000f6e:	7cbb      	ldrb	r3, [r7, #18]
 8000f70:	f043 030c 	orr.w	r3, r3, #12
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	73bb      	strb	r3, [r7, #14]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[2], 1);
 8000f78:	f107 030c 	add.w	r3, r7, #12
 8000f7c:	1c9a      	adds	r2, r3, #2
 8000f7e:	2301      	movs	r3, #1
 8000f80:	213f      	movs	r1, #63	; 0x3f
 8000f82:	4817      	ldr	r0, [pc, #92]	; (8000fe0 <LCD_Cmd+0xdc>)
 8000f84:	f000 fcdc 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 8000f88:	2301      	movs	r3, #1
 8000f8a:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 8000f8c:	bf00      	nop
 8000f8e:	697b      	ldr	r3, [r7, #20]
 8000f90:	1e5a      	subs	r2, r3, #1
 8000f92:	617a      	str	r2, [r7, #20]
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d1fa      	bne.n	8000f8e <LCD_Cmd+0x8a>

	data_t[3] = data_l | 0x08;  //en=0, rs=
 8000f98:	7cbb      	ldrb	r3, [r7, #18]
 8000f9a:	f043 0308 	orr.w	r3, r3, #8
 8000f9e:	b2db      	uxtb	r3, r3
 8000fa0:	73fb      	strb	r3, [r7, #15]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[3], 1);
 8000fa2:	f107 030c 	add.w	r3, r7, #12
 8000fa6:	1cda      	adds	r2, r3, #3
 8000fa8:	2301      	movs	r3, #1
 8000faa:	213f      	movs	r1, #63	; 0x3f
 8000fac:	480c      	ldr	r0, [pc, #48]	; (8000fe0 <LCD_Cmd+0xdc>)
 8000fae:	f000 fcc7 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 8000fb2:	2301      	movs	r3, #1
 8000fb4:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 8000fb6:	bf00      	nop
 8000fb8:	697b      	ldr	r3, [r7, #20]
 8000fba:	1e5a      	subs	r2, r3, #1
 8000fbc:	617a      	str	r2, [r7, #20]
 8000fbe:	2b00      	cmp	r3, #0
 8000fc0:	d1fa      	bne.n	8000fb8 <LCD_Cmd+0xb4>
#else
	LCD_nibble_write((cmd>>4) & 0x0F,0);
	LCD_nibble_write(cmd & 0x0F,0);
#endif
	if(cmd < 4)
 8000fc2:	79fb      	ldrb	r3, [r7, #7]
 8000fc4:	2b03      	cmp	r3, #3
 8000fc6:	d803      	bhi.n	8000fd0 <LCD_Cmd+0xcc>
		LCD_Delay(3);
 8000fc8:	2003      	movs	r0, #3
 8000fca:	f000 fa23 	bl	8001414 <delay_ms>
	else
		LCD_Delay(2);
	return;
 8000fce:	e003      	b.n	8000fd8 <LCD_Cmd+0xd4>
		LCD_Delay(2);
 8000fd0:	2002      	movs	r0, #2
 8000fd2:	f000 fa1f 	bl	8001414 <delay_ms>
	return;
 8000fd6:	bf00      	nop
}
 8000fd8:	3718      	adds	r7, #24
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bd80      	pop	{r7, pc}
 8000fde:	bf00      	nop
 8000fe0:	40005400 	.word	0x40005400

08000fe4 <LCD_Data>:

static void LCD_Data(uint8_t data){
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	b086      	sub	sp, #24
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	4603      	mov	r3, r0
 8000fec:	71fb      	strb	r3, [r7, #7]

#if USE_I2C_INTERFACE
	uint32_t delay = 1;
 8000fee:	2301      	movs	r3, #1
 8000ff0:	617b      	str	r3, [r7, #20]
	uint8_t data_u, data_l;
	uint8_t data_t[4];
	data_u = (data & 0xf0);
 8000ff2:	79fb      	ldrb	r3, [r7, #7]
 8000ff4:	f023 030f 	bic.w	r3, r3, #15
 8000ff8:	74fb      	strb	r3, [r7, #19]
	data_l = ((data<<4) & 0xf0);
 8000ffa:	79fb      	ldrb	r3, [r7, #7]
 8000ffc:	011b      	lsls	r3, r3, #4
 8000ffe:	74bb      	strb	r3, [r7, #18]
	data_t[0] = data_u | 0x0D;  //en=1, rs=0
 8001000:	7cfb      	ldrb	r3, [r7, #19]
 8001002:	f043 030d 	orr.w	r3, r3, #13
 8001006:	b2db      	uxtb	r3, r3
 8001008:	733b      	strb	r3, [r7, #12]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[0], 1);
 800100a:	f107 020c 	add.w	r2, r7, #12
 800100e:	2301      	movs	r3, #1
 8001010:	213f      	movs	r1, #63	; 0x3f
 8001012:	4827      	ldr	r0, [pc, #156]	; (80010b0 <LCD_Data+0xcc>)
 8001014:	f000 fc94 	bl	8001940 <I2C_MasterSendData>
	while(delay-->0);
 8001018:	bf00      	nop
 800101a:	697b      	ldr	r3, [r7, #20]
 800101c:	1e5a      	subs	r2, r3, #1
 800101e:	617a      	str	r2, [r7, #20]
 8001020:	2b00      	cmp	r3, #0
 8001022:	d1fa      	bne.n	800101a <LCD_Data+0x36>

	data_t[1] = data_u | 0x09;  //en=0, rs=0
 8001024:	7cfb      	ldrb	r3, [r7, #19]
 8001026:	f043 0309 	orr.w	r3, r3, #9
 800102a:	b2db      	uxtb	r3, r3
 800102c:	737b      	strb	r3, [r7, #13]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[1], 1);
 800102e:	f107 030c 	add.w	r3, r7, #12
 8001032:	1c5a      	adds	r2, r3, #1
 8001034:	2301      	movs	r3, #1
 8001036:	213f      	movs	r1, #63	; 0x3f
 8001038:	481d      	ldr	r0, [pc, #116]	; (80010b0 <LCD_Data+0xcc>)
 800103a:	f000 fc81 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 800103e:	2301      	movs	r3, #1
 8001040:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 8001042:	bf00      	nop
 8001044:	697b      	ldr	r3, [r7, #20]
 8001046:	1e5a      	subs	r2, r3, #1
 8001048:	617a      	str	r2, [r7, #20]
 800104a:	2b00      	cmp	r3, #0
 800104c:	d1fa      	bne.n	8001044 <LCD_Data+0x60>

	data_t[2] = data_l | 0x0D;  //en=1, rs=0
 800104e:	7cbb      	ldrb	r3, [r7, #18]
 8001050:	f043 030d 	orr.w	r3, r3, #13
 8001054:	b2db      	uxtb	r3, r3
 8001056:	73bb      	strb	r3, [r7, #14]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[2], 1);
 8001058:	f107 030c 	add.w	r3, r7, #12
 800105c:	1c9a      	adds	r2, r3, #2
 800105e:	2301      	movs	r3, #1
 8001060:	213f      	movs	r1, #63	; 0x3f
 8001062:	4813      	ldr	r0, [pc, #76]	; (80010b0 <LCD_Data+0xcc>)
 8001064:	f000 fc6c 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 8001068:	2301      	movs	r3, #1
 800106a:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 800106c:	bf00      	nop
 800106e:	697b      	ldr	r3, [r7, #20]
 8001070:	1e5a      	subs	r2, r3, #1
 8001072:	617a      	str	r2, [r7, #20]
 8001074:	2b00      	cmp	r3, #0
 8001076:	d1fa      	bne.n	800106e <LCD_Data+0x8a>

	data_t[3] = data_l | 0x09;  //en=0, rs=0
 8001078:	7cbb      	ldrb	r3, [r7, #18]
 800107a:	f043 0309 	orr.w	r3, r3, #9
 800107e:	b2db      	uxtb	r3, r3
 8001080:	73fb      	strb	r3, [r7, #15]
	I2C_MasterSendData(LCD_I2C, SLAVE_ADDRESS_LCD, &data_t[3], 1);
 8001082:	f107 030c 	add.w	r3, r7, #12
 8001086:	1cda      	adds	r2, r3, #3
 8001088:	2301      	movs	r3, #1
 800108a:	213f      	movs	r1, #63	; 0x3f
 800108c:	4808      	ldr	r0, [pc, #32]	; (80010b0 <LCD_Data+0xcc>)
 800108e:	f000 fc57 	bl	8001940 <I2C_MasterSendData>
	delay = 1;
 8001092:	2301      	movs	r3, #1
 8001094:	617b      	str	r3, [r7, #20]
	while(delay-->0);
 8001096:	bf00      	nop
 8001098:	697b      	ldr	r3, [r7, #20]
 800109a:	1e5a      	subs	r2, r3, #1
 800109c:	617a      	str	r2, [r7, #20]
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d1fa      	bne.n	8001098 <LCD_Data+0xb4>
#else
	LCD_nibble_write((data>>4) & 0x0F,1);
	LCD_nibble_write(data & 0x0F,1);
#endif

	LCD_Delay(1);
 80010a2:	2001      	movs	r0, #1
 80010a4:	f000 f9b6 	bl	8001414 <delay_ms>
	return;
 80010a8:	bf00      	nop
}
 80010aa:	3718      	adds	r7, #24
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bd80      	pop	{r7, pc}
 80010b0:	40005400 	.word	0x40005400

080010b4 <LCD_CursorSet>:
static void LCD_CursorSet(uint8_t col, uint8_t row){
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b084      	sub	sp, #16
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	4603      	mov	r3, r0
 80010bc:	460a      	mov	r2, r1
 80010be:	71fb      	strb	r3, [r7, #7]
 80010c0:	4613      	mov	r3, r2
 80010c2:	71bb      	strb	r3, [r7, #6]
	uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 80010c4:	4b11      	ldr	r3, [pc, #68]	; (800110c <LCD_CursorSet+0x58>)
 80010c6:	60fb      	str	r3, [r7, #12]
	/* Go to beginning */
	if (row >= LCD_Opts.Rows) {
 80010c8:	4b11      	ldr	r3, [pc, #68]	; (8001110 <LCD_CursorSet+0x5c>)
 80010ca:	78db      	ldrb	r3, [r3, #3]
 80010cc:	79ba      	ldrb	r2, [r7, #6]
 80010ce:	429a      	cmp	r2, r3
 80010d0:	d301      	bcc.n	80010d6 <LCD_CursorSet+0x22>
		row = 0;
 80010d2:	2300      	movs	r3, #0
 80010d4:	71bb      	strb	r3, [r7, #6]
	}
	/* Set current column and row */
	LCD_Opts.currentX = col;
 80010d6:	4a0e      	ldr	r2, [pc, #56]	; (8001110 <LCD_CursorSet+0x5c>)
 80010d8:	79fb      	ldrb	r3, [r7, #7]
 80010da:	7153      	strb	r3, [r2, #5]
	LCD_Opts.currentY = row;
 80010dc:	4a0c      	ldr	r2, [pc, #48]	; (8001110 <LCD_CursorSet+0x5c>)
 80010de:	79bb      	ldrb	r3, [r7, #6]
 80010e0:	7193      	strb	r3, [r2, #6]

	/* Set location address */
	LCD_Cmd(HD44780_SETDDRAMADDR | (col + row_offsets[row]));
 80010e2:	79bb      	ldrb	r3, [r7, #6]
 80010e4:	3310      	adds	r3, #16
 80010e6:	443b      	add	r3, r7
 80010e8:	f813 2c04 	ldrb.w	r2, [r3, #-4]
 80010ec:	79fb      	ldrb	r3, [r7, #7]
 80010ee:	4413      	add	r3, r2
 80010f0:	b2db      	uxtb	r3, r3
 80010f2:	b25b      	sxtb	r3, r3
 80010f4:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80010f8:	b25b      	sxtb	r3, r3
 80010fa:	b2db      	uxtb	r3, r3
 80010fc:	4618      	mov	r0, r3
 80010fe:	f7ff ff01 	bl	8000f04 <LCD_Cmd>
}
 8001102:	bf00      	nop
 8001104:	3710      	adds	r7, #16
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	54144000 	.word	0x54144000
 8001110:	200001f4 	.word	0x200001f4

08001114 <MPU6050_Init>:
static void I2C_Write8(uint8_t slaveAddr, uint8_t ADDR, uint8_t data);

extern void I2C_MasterSendData(I2C_TypeDef *I2Cx, uint8_t SlaveAddr,uint8_t *pTxbuffer, uint32_t Len);
extern void I2C_MasterReceiveData(I2C_TypeDef *I2Cx,uint8_t SlaveAddr,uint8_t *pRxbuffer, uint32_t Len);

MPU6050_Result_t MPU6050_Init(MPU6050_t* DataStruct, MPU6050_Device_t DeviceNumber, MPU6050_Accelerometer_t AccelerometerSensitivity, MPU6050_Gyroscope_t GyroscopeSensitivity) {
 8001114:	b580      	push	{r7, lr}
 8001116:	b084      	sub	sp, #16
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
 800111c:	4608      	mov	r0, r1
 800111e:	4611      	mov	r1, r2
 8001120:	461a      	mov	r2, r3
 8001122:	4603      	mov	r3, r0
 8001124:	70fb      	strb	r3, [r7, #3]
 8001126:	460b      	mov	r3, r1
 8001128:	70bb      	strb	r3, [r7, #2]
 800112a:	4613      	mov	r3, r2
 800112c:	707b      	strb	r3, [r7, #1]
	uint8_t temp;

	/* Format I2C address */
	DataStruct->Address = MPU6050_I2C_ADDR | (uint8_t)DeviceNumber;
 800112e:	78fb      	ldrb	r3, [r7, #3]
 8001130:	f043 0368 	orr.w	r3, r3, #104	; 0x68
 8001134:	b2da      	uxtb	r2, r3
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	701a      	strb	r2, [r3, #0]
//		/* Return error */
//		return TM_MPU6050_Result_DeviceNotConnected;
//	}

	/* Check who am I */
	I2C_Read(DataStruct->Address, MPU6050_WHO_AM_I, &temp, 1);
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	7818      	ldrb	r0, [r3, #0]
 800113e:	f107 020f 	add.w	r2, r7, #15
 8001142:	2301      	movs	r3, #1
 8001144:	2175      	movs	r1, #117	; 0x75
 8001146:	f000 f92d 	bl	80013a4 <I2C_Read>
	if (temp != MPU6050_I_AM) {
 800114a:	7bfb      	ldrb	r3, [r7, #15]
 800114c:	2b68      	cmp	r3, #104	; 0x68
 800114e:	d001      	beq.n	8001154 <MPU6050_Init+0x40>
		/* Return error */
		return MPU6050_Result_DeviceInvalid;
 8001150:	2303      	movs	r3, #3
 8001152:	e015      	b.n	8001180 <MPU6050_Init+0x6c>
	}

	/* Wakeup MPU6050 */
	I2C_Write8(DataStruct->Address, MPU6050_PWR_MGMT_1, 0x00);
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	781b      	ldrb	r3, [r3, #0]
 8001158:	2200      	movs	r2, #0
 800115a:	216b      	movs	r1, #107	; 0x6b
 800115c:	4618      	mov	r0, r3
 800115e:	f000 f93f 	bl	80013e0 <I2C_Write8>


	/* Set sample rate to 1kHz */
	MPU6050_SetDataRate(DataStruct, MPU6050_DataRate_1KHz);
 8001162:	2107      	movs	r1, #7
 8001164:	6878      	ldr	r0, [r7, #4]
 8001166:	f000 f8a7 	bl	80012b8 <MPU6050_SetDataRate>

	/* Config accelerometer */
	MPU6050_SetAccelerometer(DataStruct, AccelerometerSensitivity);
 800116a:	78bb      	ldrb	r3, [r7, #2]
 800116c:	4619      	mov	r1, r3
 800116e:	6878      	ldr	r0, [r7, #4]
 8001170:	f000 f858 	bl	8001224 <MPU6050_SetAccelerometer>

	/* Config accelerometer */
	MPU6050_SetGyroscope(DataStruct, GyroscopeSensitivity);
 8001174:	787b      	ldrb	r3, [r7, #1]
 8001176:	4619      	mov	r1, r3
 8001178:	6878      	ldr	r0, [r7, #4]
 800117a:	f000 f805 	bl	8001188 <MPU6050_SetGyroscope>

	/* Return OK */
	return MPU6050_Result_Ok;
 800117e:	2300      	movs	r3, #0
}
 8001180:	4618      	mov	r0, r3
 8001182:	3710      	adds	r7, #16
 8001184:	46bd      	mov	sp, r7
 8001186:	bd80      	pop	{r7, pc}

08001188 <MPU6050_SetGyroscope>:

MPU6050_Result_t MPU6050_SetGyroscope(MPU6050_t* DataStruct, MPU6050_Gyroscope_t GyroscopeSensitivity) {
 8001188:	b580      	push	{r7, lr}
 800118a:	b084      	sub	sp, #16
 800118c:	af00      	add	r7, sp, #0
 800118e:	6078      	str	r0, [r7, #4]
 8001190:	460b      	mov	r3, r1
 8001192:	70fb      	strb	r3, [r7, #3]
	uint8_t temp;

	/* Config gyroscope */
	I2C_Read(DataStruct->Address, MPU6050_GYRO_CONFIG, &temp, 1);
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	7818      	ldrb	r0, [r3, #0]
 8001198:	f107 020f 	add.w	r2, r7, #15
 800119c:	2301      	movs	r3, #1
 800119e:	211b      	movs	r1, #27
 80011a0:	f000 f900 	bl	80013a4 <I2C_Read>

	temp = (temp & 0xE7) | (uint8_t)GyroscopeSensitivity << 3;
 80011a4:	7bfb      	ldrb	r3, [r7, #15]
 80011a6:	b25b      	sxtb	r3, r3
 80011a8:	f023 0318 	bic.w	r3, r3, #24
 80011ac:	b25a      	sxtb	r2, r3
 80011ae:	78fb      	ldrb	r3, [r7, #3]
 80011b0:	00db      	lsls	r3, r3, #3
 80011b2:	b25b      	sxtb	r3, r3
 80011b4:	4313      	orrs	r3, r2
 80011b6:	b25b      	sxtb	r3, r3
 80011b8:	b2db      	uxtb	r3, r3
 80011ba:	73fb      	strb	r3, [r7, #15]

	I2C_Write8(DataStruct->Address, MPU6050_GYRO_CONFIG, temp);
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	781b      	ldrb	r3, [r3, #0]
 80011c0:	7bfa      	ldrb	r2, [r7, #15]
 80011c2:	211b      	movs	r1, #27
 80011c4:	4618      	mov	r0, r3
 80011c6:	f000 f90b 	bl	80013e0 <I2C_Write8>


	switch (GyroscopeSensitivity) {
 80011ca:	78fb      	ldrb	r3, [r7, #3]
 80011cc:	2b03      	cmp	r3, #3
 80011ce:	d81a      	bhi.n	8001206 <MPU6050_SetGyroscope+0x7e>
 80011d0:	a201      	add	r2, pc, #4	; (adr r2, 80011d8 <MPU6050_SetGyroscope+0x50>)
 80011d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011d6:	bf00      	nop
 80011d8:	080011e9 	.word	0x080011e9
 80011dc:	080011f1 	.word	0x080011f1
 80011e0:	080011f9 	.word	0x080011f9
 80011e4:	08001201 	.word	0x08001201
		case MPU6050_Gyroscope_250s:
			DataStruct->Gyro_Mult = (float)1 / MPU6050_GYRO_SENS_250;
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	4a0a      	ldr	r2, [pc, #40]	; (8001214 <MPU6050_SetGyroscope+0x8c>)
 80011ec:	605a      	str	r2, [r3, #4]
			break;
 80011ee:	e00b      	b.n	8001208 <MPU6050_SetGyroscope+0x80>
		case MPU6050_Gyroscope_500s:
			DataStruct->Gyro_Mult = (float)1 / MPU6050_GYRO_SENS_500;
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	4a09      	ldr	r2, [pc, #36]	; (8001218 <MPU6050_SetGyroscope+0x90>)
 80011f4:	605a      	str	r2, [r3, #4]
			break;
 80011f6:	e007      	b.n	8001208 <MPU6050_SetGyroscope+0x80>
		case MPU6050_Gyroscope_1000s:
			DataStruct->Gyro_Mult = (float)1 / MPU6050_GYRO_SENS_1000;
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	4a08      	ldr	r2, [pc, #32]	; (800121c <MPU6050_SetGyroscope+0x94>)
 80011fc:	605a      	str	r2, [r3, #4]
			break;
 80011fe:	e003      	b.n	8001208 <MPU6050_SetGyroscope+0x80>
		case MPU6050_Gyroscope_2000s:
			DataStruct->Gyro_Mult = (float)1 / MPU6050_GYRO_SENS_2000;
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	4a07      	ldr	r2, [pc, #28]	; (8001220 <MPU6050_SetGyroscope+0x98>)
 8001204:	605a      	str	r2, [r3, #4]
		default:
			break;
 8001206:	bf00      	nop
	}

	/* Return OK */
	return MPU6050_Result_Ok;
 8001208:	2300      	movs	r3, #0
}
 800120a:	4618      	mov	r0, r3
 800120c:	3710      	adds	r7, #16
 800120e:	46bd      	mov	sp, r7
 8001210:	bd80      	pop	{r7, pc}
 8001212:	bf00      	nop
 8001214:	3bfa232d 	.word	0x3bfa232d
 8001218:	3c7a232d 	.word	0x3c7a232d
 800121c:	3cf9c190 	.word	0x3cf9c190
 8001220:	3d79c190 	.word	0x3d79c190

08001224 <MPU6050_SetAccelerometer>:

MPU6050_Result_t MPU6050_SetAccelerometer(MPU6050_t* DataStruct, MPU6050_Accelerometer_t AccelerometerSensitivity) {
 8001224:	b580      	push	{r7, lr}
 8001226:	b084      	sub	sp, #16
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
 800122c:	460b      	mov	r3, r1
 800122e:	70fb      	strb	r3, [r7, #3]
	uint8_t temp;

	/* Config accelerometer */
	I2C_Read(DataStruct->Address,  MPU6050_ACCEL_CONFIG, &temp, 1);
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	7818      	ldrb	r0, [r3, #0]
 8001234:	f107 020f 	add.w	r2, r7, #15
 8001238:	2301      	movs	r3, #1
 800123a:	211c      	movs	r1, #28
 800123c:	f000 f8b2 	bl	80013a4 <I2C_Read>
	temp = (temp & 0xE7) | (uint8_t)AccelerometerSensitivity << 3;
 8001240:	7bfb      	ldrb	r3, [r7, #15]
 8001242:	b25b      	sxtb	r3, r3
 8001244:	f023 0318 	bic.w	r3, r3, #24
 8001248:	b25a      	sxtb	r2, r3
 800124a:	78fb      	ldrb	r3, [r7, #3]
 800124c:	00db      	lsls	r3, r3, #3
 800124e:	b25b      	sxtb	r3, r3
 8001250:	4313      	orrs	r3, r2
 8001252:	b25b      	sxtb	r3, r3
 8001254:	b2db      	uxtb	r3, r3
 8001256:	73fb      	strb	r3, [r7, #15]

	I2C_Write8(DataStruct->Address, MPU6050_ACCEL_CONFIG, temp);
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	781b      	ldrb	r3, [r3, #0]
 800125c:	7bfa      	ldrb	r2, [r7, #15]
 800125e:	211c      	movs	r1, #28
 8001260:	4618      	mov	r0, r3
 8001262:	f000 f8bd 	bl	80013e0 <I2C_Write8>


	/* Set sensitivities for multiplying gyro and accelerometer data */
	switch (AccelerometerSensitivity) {
 8001266:	78fb      	ldrb	r3, [r7, #3]
 8001268:	2b03      	cmp	r3, #3
 800126a:	d81e      	bhi.n	80012aa <MPU6050_SetAccelerometer+0x86>
 800126c:	a201      	add	r2, pc, #4	; (adr r2, 8001274 <MPU6050_SetAccelerometer+0x50>)
 800126e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001272:	bf00      	nop
 8001274:	08001285 	.word	0x08001285
 8001278:	0800128f 	.word	0x0800128f
 800127c:	08001299 	.word	0x08001299
 8001280:	080012a3 	.word	0x080012a3
		case MPU6050_Accelerometer_2G:
			DataStruct->Acce_Mult = (float)1 / MPU6050_ACCE_SENS_2;
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	f04f 5262 	mov.w	r2, #947912704	; 0x38800000
 800128a:	609a      	str	r2, [r3, #8]
			break;
 800128c:	e00e      	b.n	80012ac <MPU6050_SetAccelerometer+0x88>
		case MPU6050_Accelerometer_4G:
			DataStruct->Acce_Mult = (float)1 / MPU6050_ACCE_SENS_4;
 800128e:	687b      	ldr	r3, [r7, #4]
 8001290:	f04f 5264 	mov.w	r2, #956301312	; 0x39000000
 8001294:	609a      	str	r2, [r3, #8]
			break;
 8001296:	e009      	b.n	80012ac <MPU6050_SetAccelerometer+0x88>
		case MPU6050_Accelerometer_8G:
			DataStruct->Acce_Mult = (float)1 / MPU6050_ACCE_SENS_8;
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	f04f 5266 	mov.w	r2, #964689920	; 0x39800000
 800129e:	609a      	str	r2, [r3, #8]
			break;
 80012a0:	e004      	b.n	80012ac <MPU6050_SetAccelerometer+0x88>
		case MPU6050_Accelerometer_16G:
			DataStruct->Acce_Mult = (float)1 / MPU6050_ACCE_SENS_16;
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	f04f 5268 	mov.w	r2, #973078528	; 0x3a000000
 80012a8:	609a      	str	r2, [r3, #8]
		default:
			break;
 80012aa:	bf00      	nop
	}

	/* Return OK */
	return MPU6050_Result_Ok;
 80012ac:	2300      	movs	r3, #0
}
 80012ae:	4618      	mov	r0, r3
 80012b0:	3710      	adds	r7, #16
 80012b2:	46bd      	mov	sp, r7
 80012b4:	bd80      	pop	{r7, pc}
 80012b6:	bf00      	nop

080012b8 <MPU6050_SetDataRate>:

MPU6050_Result_t MPU6050_SetDataRate(MPU6050_t* DataStruct, uint8_t rate) {
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b082      	sub	sp, #8
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
 80012c0:	460b      	mov	r3, r1
 80012c2:	70fb      	strb	r3, [r7, #3]
	/* Set data sample rate */

	I2C_Write8(DataStruct->Address, MPU6050_SMPLRT_DIV, rate);
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	781b      	ldrb	r3, [r3, #0]
 80012c8:	78fa      	ldrb	r2, [r7, #3]
 80012ca:	2119      	movs	r1, #25
 80012cc:	4618      	mov	r0, r3
 80012ce:	f000 f887 	bl	80013e0 <I2C_Write8>
//		/* Return error */
//		return TM_MPU6050_Result_Error;
//	}

	/* Return OK */
	return MPU6050_Result_Ok;
 80012d2:	2300      	movs	r3, #0
}
 80012d4:	4618      	mov	r0, r3
 80012d6:	3708      	adds	r7, #8
 80012d8:	46bd      	mov	sp, r7
 80012da:	bd80      	pop	{r7, pc}

080012dc <MPU6050_ReadAll>:

	/* Return OK */
	return MPU6050_Result_Ok;
}

MPU6050_Result_t MPU6050_ReadAll(MPU6050_t* DataStruct) {
 80012dc:	b580      	push	{r7, lr}
 80012de:	b086      	sub	sp, #24
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	6078      	str	r0, [r7, #4]
	uint8_t data[14];
	int16_t temp;

	/* Read full raw data, 14bytes */
	I2C_Read(DataStruct->Address,MPU6050_ACCEL_XOUT_H, data, 14);
 80012e4:	687b      	ldr	r3, [r7, #4]
 80012e6:	7818      	ldrb	r0, [r3, #0]
 80012e8:	f107 0208 	add.w	r2, r7, #8
 80012ec:	230e      	movs	r3, #14
 80012ee:	213b      	movs	r1, #59	; 0x3b
 80012f0:	f000 f858 	bl	80013a4 <I2C_Read>

	/* Format accelerometer data */
	DataStruct->Accelerometer_X = (int16_t)(data[0] << 8 | data[1]);
 80012f4:	7a3b      	ldrb	r3, [r7, #8]
 80012f6:	021b      	lsls	r3, r3, #8
 80012f8:	b21a      	sxth	r2, r3
 80012fa:	7a7b      	ldrb	r3, [r7, #9]
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	4313      	orrs	r3, r2
 8001300:	b21a      	sxth	r2, r3
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	819a      	strh	r2, [r3, #12]
	DataStruct->Accelerometer_Y = (int16_t)(data[2] << 8 | data[3]);
 8001306:	7abb      	ldrb	r3, [r7, #10]
 8001308:	021b      	lsls	r3, r3, #8
 800130a:	b21a      	sxth	r2, r3
 800130c:	7afb      	ldrb	r3, [r7, #11]
 800130e:	b21b      	sxth	r3, r3
 8001310:	4313      	orrs	r3, r2
 8001312:	b21a      	sxth	r2, r3
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	81da      	strh	r2, [r3, #14]
	DataStruct->Accelerometer_Z = (int16_t)(data[4] << 8 | data[5]);
 8001318:	7b3b      	ldrb	r3, [r7, #12]
 800131a:	021b      	lsls	r3, r3, #8
 800131c:	b21a      	sxth	r2, r3
 800131e:	7b7b      	ldrb	r3, [r7, #13]
 8001320:	b21b      	sxth	r3, r3
 8001322:	4313      	orrs	r3, r2
 8001324:	b21a      	sxth	r2, r3
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	821a      	strh	r2, [r3, #16]

	/* Format temperature */
	temp = (data[6] << 8 | data[7]);
 800132a:	7bbb      	ldrb	r3, [r7, #14]
 800132c:	021b      	lsls	r3, r3, #8
 800132e:	b21a      	sxth	r2, r3
 8001330:	7bfb      	ldrb	r3, [r7, #15]
 8001332:	b21b      	sxth	r3, r3
 8001334:	4313      	orrs	r3, r2
 8001336:	82fb      	strh	r3, [r7, #22]
	DataStruct->Temperature = (float)((float)((int16_t)temp) / (float)340.0 + (float)36.53);
 8001338:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800133c:	ee07 3a90 	vmov	s15, r3
 8001340:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001344:	eddf 6a15 	vldr	s13, [pc, #84]	; 800139c <MPU6050_ReadAll+0xc0>
 8001348:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800134c:	ed9f 7a14 	vldr	s14, [pc, #80]	; 80013a0 <MPU6050_ReadAll+0xc4>
 8001350:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	edc3 7a06 	vstr	s15, [r3, #24]

	/* Format gyroscope data */
	DataStruct->Gyroscope_X = (int16_t)(data[8] << 8 | data[9]);
 800135a:	7c3b      	ldrb	r3, [r7, #16]
 800135c:	021b      	lsls	r3, r3, #8
 800135e:	b21a      	sxth	r2, r3
 8001360:	7c7b      	ldrb	r3, [r7, #17]
 8001362:	b21b      	sxth	r3, r3
 8001364:	4313      	orrs	r3, r2
 8001366:	b21a      	sxth	r2, r3
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	825a      	strh	r2, [r3, #18]
	DataStruct->Gyroscope_Y = (int16_t)(data[10] << 8 | data[11]);
 800136c:	7cbb      	ldrb	r3, [r7, #18]
 800136e:	021b      	lsls	r3, r3, #8
 8001370:	b21a      	sxth	r2, r3
 8001372:	7cfb      	ldrb	r3, [r7, #19]
 8001374:	b21b      	sxth	r3, r3
 8001376:	4313      	orrs	r3, r2
 8001378:	b21a      	sxth	r2, r3
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	829a      	strh	r2, [r3, #20]
	DataStruct->Gyroscope_Z = (int16_t)(data[12] << 8 | data[13]);
 800137e:	7d3b      	ldrb	r3, [r7, #20]
 8001380:	021b      	lsls	r3, r3, #8
 8001382:	b21a      	sxth	r2, r3
 8001384:	7d7b      	ldrb	r3, [r7, #21]
 8001386:	b21b      	sxth	r3, r3
 8001388:	4313      	orrs	r3, r2
 800138a:	b21a      	sxth	r2, r3
 800138c:	687b      	ldr	r3, [r7, #4]
 800138e:	82da      	strh	r2, [r3, #22]

	/* Return OK */
	return MPU6050_Result_Ok;
 8001390:	2300      	movs	r3, #0
}
 8001392:	4618      	mov	r0, r3
 8001394:	3718      	adds	r7, #24
 8001396:	46bd      	mov	sp, r7
 8001398:	bd80      	pop	{r7, pc}
 800139a:	bf00      	nop
 800139c:	43aa0000 	.word	0x43aa0000
 80013a0:	42121eb8 	.word	0x42121eb8

080013a4 <I2C_Read>:



//2- i2c Read
void I2C_Read(uint8_t slaveAddr, uint8_t ADDR, uint8_t *i2cBif, uint8_t NofData)
{
 80013a4:	b580      	push	{r7, lr}
 80013a6:	b082      	sub	sp, #8
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	603a      	str	r2, [r7, #0]
 80013ac:	461a      	mov	r2, r3
 80013ae:	4603      	mov	r3, r0
 80013b0:	71fb      	strb	r3, [r7, #7]
 80013b2:	460b      	mov	r3, r1
 80013b4:	71bb      	strb	r3, [r7, #6]
 80013b6:	4613      	mov	r3, r2
 80013b8:	717b      	strb	r3, [r7, #5]
	I2C_MasterSendData(MPU6050_I2C, slaveAddr, &ADDR, 1);
 80013ba:	1dba      	adds	r2, r7, #6
 80013bc:	79f9      	ldrb	r1, [r7, #7]
 80013be:	2301      	movs	r3, #1
 80013c0:	4806      	ldr	r0, [pc, #24]	; (80013dc <I2C_Read+0x38>)
 80013c2:	f000 fabd 	bl	8001940 <I2C_MasterSendData>

	I2C_MasterReceiveData(MPU6050_I2C, slaveAddr,i2cBif,NofData);
 80013c6:	797b      	ldrb	r3, [r7, #5]
 80013c8:	79f9      	ldrb	r1, [r7, #7]
 80013ca:	683a      	ldr	r2, [r7, #0]
 80013cc:	4803      	ldr	r0, [pc, #12]	; (80013dc <I2C_Read+0x38>)
 80013ce:	f000 fb22 	bl	8001a16 <I2C_MasterReceiveData>
}
 80013d2:	bf00      	nop
 80013d4:	3708      	adds	r7, #8
 80013d6:	46bd      	mov	sp, r7
 80013d8:	bd80      	pop	{r7, pc}
 80013da:	bf00      	nop
 80013dc:	40005400 	.word	0x40005400

080013e0 <I2C_Write8>:

//3- i2c Write
void I2C_Write8(uint8_t slaveAddr, uint8_t ADDR, uint8_t data)
{
 80013e0:	b580      	push	{r7, lr}
 80013e2:	b084      	sub	sp, #16
 80013e4:	af00      	add	r7, sp, #0
 80013e6:	4603      	mov	r3, r0
 80013e8:	71fb      	strb	r3, [r7, #7]
 80013ea:	460b      	mov	r3, r1
 80013ec:	71bb      	strb	r3, [r7, #6]
 80013ee:	4613      	mov	r3, r2
 80013f0:	717b      	strb	r3, [r7, #5]
	uint8_t i2cData[2];
	i2cData[0] = ADDR;
 80013f2:	79bb      	ldrb	r3, [r7, #6]
 80013f4:	733b      	strb	r3, [r7, #12]
	i2cData[1] = data;
 80013f6:	797b      	ldrb	r3, [r7, #5]
 80013f8:	737b      	strb	r3, [r7, #13]

	I2C_MasterSendData(MPU6050_I2C, slaveAddr, i2cData, 2);
 80013fa:	f107 020c 	add.w	r2, r7, #12
 80013fe:	79f9      	ldrb	r1, [r7, #7]
 8001400:	2302      	movs	r3, #2
 8001402:	4803      	ldr	r0, [pc, #12]	; (8001410 <I2C_Write8+0x30>)
 8001404:	f000 fa9c 	bl	8001940 <I2C_MasterSendData>

}
 8001408:	bf00      	nop
 800140a:	3710      	adds	r7, #16
 800140c:	46bd      	mov	sp, r7
 800140e:	bd80      	pop	{r7, pc}
 8001410:	40005400 	.word	0x40005400

08001414 <delay_ms>:

#include "delay.h"
/**
 * @brief delay
 */
void delay_ms(uint32_t delay){
 8001414:	b480      	push	{r7}
 8001416:	b085      	sub	sp, #20
 8001418:	af00      	add	r7, sp, #0
 800141a:	6078      	str	r0, [r7, #4]
	SysTick->CTRL = 0;
 800141c:	4b14      	ldr	r3, [pc, #80]	; (8001470 <delay_ms+0x5c>)
 800141e:	2200      	movs	r2, #0
 8001420:	601a      	str	r2, [r3, #0]
	SysTick->LOAD = 84000-1;
 8001422:	4b13      	ldr	r3, [pc, #76]	; (8001470 <delay_ms+0x5c>)
 8001424:	4a13      	ldr	r2, [pc, #76]	; (8001474 <delay_ms+0x60>)
 8001426:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 8001428:	4b11      	ldr	r3, [pc, #68]	; (8001470 <delay_ms+0x5c>)
 800142a:	2200      	movs	r2, #0
 800142c:	609a      	str	r2, [r3, #8]
	SysTick->CTRL |= 1U<<2 | 1U;
 800142e:	4b10      	ldr	r3, [pc, #64]	; (8001470 <delay_ms+0x5c>)
 8001430:	681b      	ldr	r3, [r3, #0]
 8001432:	4a0f      	ldr	r2, [pc, #60]	; (8001470 <delay_ms+0x5c>)
 8001434:	f043 0305 	orr.w	r3, r3, #5
 8001438:	6013      	str	r3, [r2, #0]
	for(uint32_t i = 0;i<delay;i++){
 800143a:	2300      	movs	r3, #0
 800143c:	60fb      	str	r3, [r7, #12]
 800143e:	e009      	b.n	8001454 <delay_ms+0x40>
		while(!(SysTick->CTRL & 1u<<16));
 8001440:	bf00      	nop
 8001442:	4b0b      	ldr	r3, [pc, #44]	; (8001470 <delay_ms+0x5c>)
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800144a:	2b00      	cmp	r3, #0
 800144c:	d0f9      	beq.n	8001442 <delay_ms+0x2e>
	for(uint32_t i = 0;i<delay;i++){
 800144e:	68fb      	ldr	r3, [r7, #12]
 8001450:	3301      	adds	r3, #1
 8001452:	60fb      	str	r3, [r7, #12]
 8001454:	68fa      	ldr	r2, [r7, #12]
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	429a      	cmp	r2, r3
 800145a:	d3f1      	bcc.n	8001440 <delay_ms+0x2c>
	}
	SysTick->CTRL = 0;
 800145c:	4b04      	ldr	r3, [pc, #16]	; (8001470 <delay_ms+0x5c>)
 800145e:	2200      	movs	r2, #0
 8001460:	601a      	str	r2, [r3, #0]
	return;
 8001462:	bf00      	nop
}
 8001464:	3714      	adds	r7, #20
 8001466:	46bd      	mov	sp, r7
 8001468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146c:	4770      	bx	lr
 800146e:	bf00      	nop
 8001470:	e000e010 	.word	0xe000e010
 8001474:	0001481f 	.word	0x0001481f

08001478 <main>:
	*/
void MPU6050_Init_Config(void);


int main(void)
{
 8001478:	b590      	push	{r4, r7, lr}
 800147a:	b083      	sub	sp, #12
 800147c:	af02      	add	r7, sp, #8
	/*flash configuration*/
	flash_cofig();
 800147e:	f000 f939 	bl	80016f4 <flash_cofig>
	/*external clock configuration*/
	HSE_Config();
 8001482:	f000 f917 	bl	80016b4 <HSE_Config>
	/*pll configution*/
	PLL_Config();
 8001486:	f000 f8af 	bl	80015e8 <PLL_Config>

	RCC->AHB1ENR |= GPIOX_CLOCK(LED);
 800148a:	4b4d      	ldr	r3, [pc, #308]	; (80015c0 <main+0x148>)
 800148c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800148e:	4a4c      	ldr	r2, [pc, #304]	; (80015c0 <main+0x148>)
 8001490:	f043 0301 	orr.w	r3, r3, #1
 8001494:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_OUT, LED);
 8001496:	4b4b      	ldr	r3, [pc, #300]	; (80015c4 <main+0x14c>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800149e:	4a49      	ldr	r2, [pc, #292]	; (80015c4 <main+0x14c>)
 80014a0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80014a4:	6013      	str	r3, [r2, #0]
/******************************************************************/
	/*I2C INIT*/
	I2C1_GPIOInit();
 80014a6:	f000 f94d 	bl	8001744 <I2C1_GPIOInit>
	I2C_Init(I2C1, I2C_SCL_SPEED_FM4K);
 80014aa:	4947      	ldr	r1, [pc, #284]	; (80015c8 <main+0x150>)
 80014ac:	4847      	ldr	r0, [pc, #284]	; (80015cc <main+0x154>)
 80014ae:	f000 f9a3 	bl	80017f8 <I2C_Init>
    /* Loop forever */
/******************************************************************/
	LCD_Init(20, 4);
 80014b2:	2104      	movs	r1, #4
 80014b4:	2014      	movs	r0, #20
 80014b6:	f7ff fc25 	bl	8000d04 <LCD_Init>
/*****************************************************************/

	if (MPU6050_Init(&MPU6050_1, MPU6050_Device_0, MPU6050_Accelerometer_8G, MPU6050_Gyroscope_250s) == MPU6050_Result_Ok) {
 80014ba:	2300      	movs	r3, #0
 80014bc:	2202      	movs	r2, #2
 80014be:	2100      	movs	r1, #0
 80014c0:	4843      	ldr	r0, [pc, #268]	; (80015d0 <main+0x158>)
 80014c2:	f7ff fe27 	bl	8001114 <MPU6050_Init>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d107      	bne.n	80014dc <main+0x64>
			/* Green LED on */
		GPIOX_ODR(LED) = 1;
 80014cc:	4b41      	ldr	r3, [pc, #260]	; (80015d4 <main+0x15c>)
 80014ce:	2201      	movs	r2, #1
 80014d0:	601a      	str	r2, [r3, #0]
		LCD_Printf(0, 0, "MPU6050 Inicializado\r\nde forma correcta");
 80014d2:	4a41      	ldr	r2, [pc, #260]	; (80015d8 <main+0x160>)
 80014d4:	2100      	movs	r1, #0
 80014d6:	2000      	movs	r0, #0
 80014d8:	f7ff fcf2 	bl	8000ec0 <LCD_Printf>
	}

	/* Set new gyro sens for device 1 */
	MPU6050_SetGyroscope(&MPU6050_1, MPU6050_Gyroscope_1000s);
 80014dc:	2102      	movs	r1, #2
 80014de:	483c      	ldr	r0, [pc, #240]	; (80015d0 <main+0x158>)
 80014e0:	f7ff fe52 	bl	8001188 <MPU6050_SetGyroscope>

	delay_ms(2000);
 80014e4:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80014e8:	f7ff ff94 	bl	8001414 <delay_ms>

	for(;;){
		MPU6050_ReadAll(&MPU6050_1);
 80014ec:	4838      	ldr	r0, [pc, #224]	; (80015d0 <main+0x158>)
 80014ee:	f7ff fef5 	bl	80012dc <MPU6050_ReadAll>

		LCD_Clear();
 80014f2:	f7ff fc67 	bl	8000dc4 <LCD_Clear>
		LCD_Printf(0, 0, "x: %d  : %.3f",MPU6050_1.Accelerometer_X, MPU6050_1.Accelerometer_X * MPU6050_1.Acce_Mult);
 80014f6:	4b36      	ldr	r3, [pc, #216]	; (80015d0 <main+0x158>)
 80014f8:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80014fc:	461c      	mov	r4, r3
 80014fe:	4b34      	ldr	r3, [pc, #208]	; (80015d0 <main+0x158>)
 8001500:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001504:	ee07 3a90 	vmov	s15, r3
 8001508:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800150c:	4b30      	ldr	r3, [pc, #192]	; (80015d0 <main+0x158>)
 800150e:	edd3 7a02 	vldr	s15, [r3, #8]
 8001512:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001516:	ee17 0a90 	vmov	r0, s15
 800151a:	f7ff f81d 	bl	8000558 <__aeabi_f2d>
 800151e:	4602      	mov	r2, r0
 8001520:	460b      	mov	r3, r1
 8001522:	e9cd 2300 	strd	r2, r3, [sp]
 8001526:	4623      	mov	r3, r4
 8001528:	4a2c      	ldr	r2, [pc, #176]	; (80015dc <main+0x164>)
 800152a:	2100      	movs	r1, #0
 800152c:	2000      	movs	r0, #0
 800152e:	f7ff fcc7 	bl	8000ec0 <LCD_Printf>
		LCD_Printf(0, 1, "y: %d  : %.3f",MPU6050_1.Accelerometer_Y, MPU6050_1.Accelerometer_Y * MPU6050_1.Acce_Mult);
 8001532:	4b27      	ldr	r3, [pc, #156]	; (80015d0 <main+0x158>)
 8001534:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8001538:	461c      	mov	r4, r3
 800153a:	4b25      	ldr	r3, [pc, #148]	; (80015d0 <main+0x158>)
 800153c:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8001540:	ee07 3a90 	vmov	s15, r3
 8001544:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001548:	4b21      	ldr	r3, [pc, #132]	; (80015d0 <main+0x158>)
 800154a:	edd3 7a02 	vldr	s15, [r3, #8]
 800154e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001552:	ee17 0a90 	vmov	r0, s15
 8001556:	f7fe ffff 	bl	8000558 <__aeabi_f2d>
 800155a:	4602      	mov	r2, r0
 800155c:	460b      	mov	r3, r1
 800155e:	e9cd 2300 	strd	r2, r3, [sp]
 8001562:	4623      	mov	r3, r4
 8001564:	4a1e      	ldr	r2, [pc, #120]	; (80015e0 <main+0x168>)
 8001566:	2101      	movs	r1, #1
 8001568:	2000      	movs	r0, #0
 800156a:	f7ff fca9 	bl	8000ec0 <LCD_Printf>
		LCD_Printf(0, 2, "z: %d  : %.3f",MPU6050_1.Accelerometer_Z, MPU6050_1.Accelerometer_Z * MPU6050_1.Acce_Mult);
 800156e:	4b18      	ldr	r3, [pc, #96]	; (80015d0 <main+0x158>)
 8001570:	f9b3 3010 	ldrsh.w	r3, [r3, #16]
 8001574:	461c      	mov	r4, r3
 8001576:	4b16      	ldr	r3, [pc, #88]	; (80015d0 <main+0x158>)
 8001578:	f9b3 3010 	ldrsh.w	r3, [r3, #16]
 800157c:	ee07 3a90 	vmov	s15, r3
 8001580:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001584:	4b12      	ldr	r3, [pc, #72]	; (80015d0 <main+0x158>)
 8001586:	edd3 7a02 	vldr	s15, [r3, #8]
 800158a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800158e:	ee17 0a90 	vmov	r0, s15
 8001592:	f7fe ffe1 	bl	8000558 <__aeabi_f2d>
 8001596:	4602      	mov	r2, r0
 8001598:	460b      	mov	r3, r1
 800159a:	e9cd 2300 	strd	r2, r3, [sp]
 800159e:	4623      	mov	r3, r4
 80015a0:	4a10      	ldr	r2, [pc, #64]	; (80015e4 <main+0x16c>)
 80015a2:	2102      	movs	r1, #2
 80015a4:	2000      	movs	r0, #0
 80015a6:	f7ff fc8b 	bl	8000ec0 <LCD_Printf>
		delay_ms(500);
 80015aa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80015ae:	f7ff ff31 	bl	8001414 <delay_ms>
		GPIOX_ODR(LED) ^= 1;
 80015b2:	4b08      	ldr	r3, [pc, #32]	; (80015d4 <main+0x15c>)
 80015b4:	681b      	ldr	r3, [r3, #0]
 80015b6:	4a07      	ldr	r2, [pc, #28]	; (80015d4 <main+0x15c>)
 80015b8:	f083 0301 	eor.w	r3, r3, #1
 80015bc:	6013      	str	r3, [r2, #0]
		MPU6050_ReadAll(&MPU6050_1);
 80015be:	e795      	b.n	80014ec <main+0x74>
 80015c0:	40023800 	.word	0x40023800
 80015c4:	40020000 	.word	0x40020000
 80015c8:	00061a80 	.word	0x00061a80
 80015cc:	40005400 	.word	0x40005400
 80015d0:	200001fc 	.word	0x200001fc
 80015d4:	42400294 	.word	0x42400294
 80015d8:	080067b0 	.word	0x080067b0
 80015dc:	080067d8 	.word	0x080067d8
 80015e0:	080067e8 	.word	0x080067e8
 80015e4:	080067f8 	.word	0x080067f8

080015e8 <PLL_Config>:

/**
 * @brief PLL config
 * configura el PLL  a 84MHz
 */
void PLL_Config(void){
 80015e8:	b580      	push	{r7, lr}
 80015ea:	af00      	add	r7, sp, #0
	HSE_Config();
 80015ec:	f000 f862 	bl	80016b4 <HSE_Config>
	/*configure PLL before enabling it*/
	//1. PLL clock source
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSE;	//select HSE CLOCK SOURCE
 80015f0:	4b2e      	ldr	r3, [pc, #184]	; (80016ac <PLL_Config+0xc4>)
 80015f2:	685b      	ldr	r3, [r3, #4]
 80015f4:	4a2d      	ldr	r2, [pc, #180]	; (80016ac <PLL_Config+0xc4>)
 80015f6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80015fa:	6053      	str	r3, [r2, #4]
	/**
	 * 	f(VCO clock) = f(PLL clock input) × (PLLN / PLLM)	(192 and 432 MHz)
	 * 	f(PLL general clock output) = f(VCO clock) / PLLP  	<= 84MHz
	 */
	//M
	RCC->PLLCFGR &=~ RCC_PLLCFGR_PLLM;
 80015fc:	4b2b      	ldr	r3, [pc, #172]	; (80016ac <PLL_Config+0xc4>)
 80015fe:	685b      	ldr	r3, [r3, #4]
 8001600:	4a2a      	ldr	r2, [pc, #168]	; (80016ac <PLL_Config+0xc4>)
 8001602:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001606:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= 4U;							//VCO input frequency (1MHz to 2MHz)
 8001608:	4b28      	ldr	r3, [pc, #160]	; (80016ac <PLL_Config+0xc4>)
 800160a:	685b      	ldr	r3, [r3, #4]
 800160c:	4a27      	ldr	r2, [pc, #156]	; (80016ac <PLL_Config+0xc4>)
 800160e:	f043 0304 	orr.w	r3, r3, #4
 8001612:	6053      	str	r3, [r2, #4]
	//N
	RCC->PLLCFGR &=~ RCC_PLLCFGR_PLLN;
 8001614:	4b25      	ldr	r3, [pc, #148]	; (80016ac <PLL_Config+0xc4>)
 8001616:	685b      	ldr	r3, [r3, #4]
 8001618:	4a24      	ldr	r2, [pc, #144]	; (80016ac <PLL_Config+0xc4>)
 800161a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800161e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001622:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= 168U<<6;					//168MHZ
 8001624:	4b21      	ldr	r3, [pc, #132]	; (80016ac <PLL_Config+0xc4>)
 8001626:	685b      	ldr	r3, [r3, #4]
 8001628:	4a20      	ldr	r2, [pc, #128]	; (80016ac <PLL_Config+0xc4>)
 800162a:	f443 5328 	orr.w	r3, r3, #10752	; 0x2a00
 800162e:	6053      	str	r3, [r2, #4]
	//P
	RCC->PLLCFGR &=~ RCC_PLLCFGR_PLLP;
 8001630:	4b1e      	ldr	r3, [pc, #120]	; (80016ac <PLL_Config+0xc4>)
 8001632:	685b      	ldr	r3, [r3, #4]
 8001634:	4a1d      	ldr	r2, [pc, #116]	; (80016ac <PLL_Config+0xc4>)
 8001636:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800163a:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= 1U<<16;						//84MHz
 800163c:	4b1b      	ldr	r3, [pc, #108]	; (80016ac <PLL_Config+0xc4>)
 800163e:	685b      	ldr	r3, [r3, #4]
 8001640:	4a1a      	ldr	r2, [pc, #104]	; (80016ac <PLL_Config+0xc4>)
 8001642:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001646:	6053      	str	r3, [r2, #4]
	//3. enable PLL
	RCC->CR |= RCC_CR_PLLON;
 8001648:	4b18      	ldr	r3, [pc, #96]	; (80016ac <PLL_Config+0xc4>)
 800164a:	681b      	ldr	r3, [r3, #0]
 800164c:	4a17      	ldr	r2, [pc, #92]	; (80016ac <PLL_Config+0xc4>)
 800164e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001652:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY));			//Waint until
 8001654:	bf00      	nop
 8001656:	4b15      	ldr	r3, [pc, #84]	; (80016ac <PLL_Config+0xc4>)
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800165e:	2b00      	cmp	r3, #0
 8001660:	d0f9      	beq.n	8001656 <PLL_Config+0x6e>
	/*configure AHBx, APBx precaler*/
	RCC->CFGR = 0x00000000;						//reset
 8001662:	4b12      	ldr	r3, [pc, #72]	; (80016ac <PLL_Config+0xc4>)
 8001664:	2200      	movs	r2, #0
 8001666:	609a      	str	r2, [r3, #8]
	RCC->CFGR |= 0b100<<10;						//100: AHB clock divided by 2
 8001668:	4b10      	ldr	r3, [pc, #64]	; (80016ac <PLL_Config+0xc4>)
 800166a:	689b      	ldr	r3, [r3, #8]
 800166c:	4a0f      	ldr	r2, [pc, #60]	; (80016ac <PLL_Config+0xc4>)
 800166e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001672:	6093      	str	r3, [r2, #8]
	/*configure flash latency*/
	FLASH->ACR &=~ FLASH_ACR_LATENCY;
 8001674:	4b0e      	ldr	r3, [pc, #56]	; (80016b0 <PLL_Config+0xc8>)
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	4a0d      	ldr	r2, [pc, #52]	; (80016b0 <PLL_Config+0xc8>)
 800167a:	f023 0307 	bic.w	r3, r3, #7
 800167e:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= FLASH_ACR_LATENCY_2WS;
 8001680:	4b0b      	ldr	r3, [pc, #44]	; (80016b0 <PLL_Config+0xc8>)
 8001682:	681b      	ldr	r3, [r3, #0]
 8001684:	4a0a      	ldr	r2, [pc, #40]	; (80016b0 <PLL_Config+0xc8>)
 8001686:	f043 0302 	orr.w	r3, r3, #2
 800168a:	6013      	str	r3, [r2, #0]
	/*select system clock source*/
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 800168c:	4b07      	ldr	r3, [pc, #28]	; (80016ac <PLL_Config+0xc4>)
 800168e:	689b      	ldr	r3, [r3, #8]
 8001690:	4a06      	ldr	r2, [pc, #24]	; (80016ac <PLL_Config+0xc4>)
 8001692:	f043 0302 	orr.w	r3, r3, #2
 8001696:	6093      	str	r3, [r2, #8]
	while(!(RCC->CFGR & RCC_CFGR_SWS_PLL));		//wait PLL ready as system clock
 8001698:	bf00      	nop
 800169a:	4b04      	ldr	r3, [pc, #16]	; (80016ac <PLL_Config+0xc4>)
 800169c:	689b      	ldr	r3, [r3, #8]
 800169e:	f003 0308 	and.w	r3, r3, #8
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	d0f9      	beq.n	800169a <PLL_Config+0xb2>
	return;
 80016a6:	bf00      	nop
}
 80016a8:	bd80      	pop	{r7, pc}
 80016aa:	bf00      	nop
 80016ac:	40023800 	.word	0x40023800
 80016b0:	40023c00 	.word	0x40023c00

080016b4 <HSE_Config>:

void HSE_Config(void){
 80016b4:	b580      	push	{r7, lr}
 80016b6:	af00      	add	r7, sp, #0
	RCC->CR |= RCC_CR_HSEON | RCC_CR_HSEBYP;
 80016b8:	4b0d      	ldr	r3, [pc, #52]	; (80016f0 <HSE_Config+0x3c>)
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	4a0c      	ldr	r2, [pc, #48]	; (80016f0 <HSE_Config+0x3c>)
 80016be:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
 80016c2:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY));
 80016c4:	bf00      	nop
 80016c6:	4b0a      	ldr	r3, [pc, #40]	; (80016f0 <HSE_Config+0x3c>)
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d0f9      	beq.n	80016c6 <HSE_Config+0x12>
	RCC->CFGR = RCC_CFGR_SW_HSE;
 80016d2:	4b07      	ldr	r3, [pc, #28]	; (80016f0 <HSE_Config+0x3c>)
 80016d4:	2201      	movs	r2, #1
 80016d6:	609a      	str	r2, [r3, #8]
	while(!(RCC->CFGR & RCC_CFGR_SWS_HSE));
 80016d8:	bf00      	nop
 80016da:	4b05      	ldr	r3, [pc, #20]	; (80016f0 <HSE_Config+0x3c>)
 80016dc:	689b      	ldr	r3, [r3, #8]
 80016de:	f003 0304 	and.w	r3, r3, #4
 80016e2:	2b00      	cmp	r3, #0
 80016e4:	d0f9      	beq.n	80016da <HSE_Config+0x26>
	SystemCoreClockUpdate();
 80016e6:	f000 fae9 	bl	8001cbc <SystemCoreClockUpdate>

}
 80016ea:	bf00      	nop
 80016ec:	bd80      	pop	{r7, pc}
 80016ee:	bf00      	nop
 80016f0:	40023800 	.word	0x40023800

080016f4 <flash_cofig>:
void flash_cofig(void){
 80016f4:	b580      	push	{r7, lr}
 80016f6:	af00      	add	r7, sp, #0
	FLASH->ACR |= 1<<9;							//1: Instruction cache is enabled
 80016f8:	4b10      	ldr	r3, [pc, #64]	; (800173c <flash_cofig+0x48>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	4a0f      	ldr	r2, [pc, #60]	; (800173c <flash_cofig+0x48>)
 80016fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001702:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= 1<<10;						//1: Data cache is enabled
 8001704:	4b0d      	ldr	r3, [pc, #52]	; (800173c <flash_cofig+0x48>)
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	4a0c      	ldr	r2, [pc, #48]	; (800173c <flash_cofig+0x48>)
 800170a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800170e:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= 1<<8;							//1: Prefetch is enabled
 8001710:	4b0a      	ldr	r3, [pc, #40]	; (800173c <flash_cofig+0x48>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	4a09      	ldr	r2, [pc, #36]	; (800173c <flash_cofig+0x48>)
 8001716:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800171a:	6013      	str	r3, [r2, #0]
	//SE HABILITAN ALGUNOS CLOCK
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800171c:	4b08      	ldr	r3, [pc, #32]	; (8001740 <flash_cofig+0x4c>)
 800171e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001720:	4a07      	ldr	r2, [pc, #28]	; (8001740 <flash_cofig+0x4c>)
 8001722:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001726:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8001728:	4b05      	ldr	r3, [pc, #20]	; (8001740 <flash_cofig+0x4c>)
 800172a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800172c:	4a04      	ldr	r2, [pc, #16]	; (8001740 <flash_cofig+0x4c>)
 800172e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001732:	6413      	str	r3, [r2, #64]	; 0x40
	SystemCoreClockUpdate();
 8001734:	f000 fac2 	bl	8001cbc <SystemCoreClockUpdate>
}
 8001738:	bf00      	nop
 800173a:	bd80      	pop	{r7, pc}
 800173c:	40023c00 	.word	0x40023c00
 8001740:	40023800 	.word	0x40023800

08001744 <I2C1_GPIOInit>:


/**
 * @configuracion de pines del I2C
 */
void I2C1_GPIOInit(void){
 8001744:	b480      	push	{r7}
 8001746:	af00      	add	r7, sp, #0
	/*enable clock*/
	RCC->AHB1ENR |= GPIOX_CLOCK(I2C1_SCL) | GPIOX_CLOCK(I2C1_SDA);
 8001748:	4b29      	ldr	r3, [pc, #164]	; (80017f0 <I2C1_GPIOInit+0xac>)
 800174a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800174c:	4a28      	ldr	r2, [pc, #160]	; (80017f0 <I2C1_GPIOInit+0xac>)
 800174e:	f043 0302 	orr.w	r3, r3, #2
 8001752:	6313      	str	r3, [r2, #48]	; 0x30
	//PB9->I2C1_SDA, PB8->I2C1_SCL
	GPIOX_MODER(MODE_ALTER,I2C1_SCL);
 8001754:	4b27      	ldr	r3, [pc, #156]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800175c:	4a25      	ldr	r2, [pc, #148]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 800175e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001762:	6013      	str	r3, [r2, #0]
	GPIOX_MODER(MODE_ALTER,I2C1_SDA);
 8001764:	4b23      	ldr	r3, [pc, #140]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 800176c:	4a21      	ldr	r2, [pc, #132]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 800176e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001772:	6013      	str	r3, [r2, #0]
	GPIOX_OTYPER(MODE_OT_OD,I2C1_SCL);
 8001774:	4b1f      	ldr	r3, [pc, #124]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	4a1e      	ldr	r2, [pc, #120]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 800177a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800177e:	6053      	str	r3, [r2, #4]
	GPIOX_OTYPER(MODE_OT_OD,I2C1_SDA);
 8001780:	4b1c      	ldr	r3, [pc, #112]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001782:	685b      	ldr	r3, [r3, #4]
 8001784:	4a1b      	ldr	r2, [pc, #108]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001786:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800178a:	6053      	str	r3, [r2, #4]
	GPIOX_PUPDR(MODE_PU_UP,I2C1_SCL);
 800178c:	4b19      	ldr	r3, [pc, #100]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 800178e:	68db      	ldr	r3, [r3, #12]
 8001790:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001794:	4a17      	ldr	r2, [pc, #92]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 8001796:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800179a:	60d3      	str	r3, [r2, #12]
	GPIOX_PUPDR(MODE_PU_UP,I2C1_SDA);
 800179c:	4b15      	ldr	r3, [pc, #84]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 800179e:	68db      	ldr	r3, [r3, #12]
 80017a0:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 80017a4:	4a13      	ldr	r2, [pc, #76]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017a6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80017aa:	60d3      	str	r3, [r2, #12]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH,I2C1_SCL);
 80017ac:	4b11      	ldr	r3, [pc, #68]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017ae:	689b      	ldr	r3, [r3, #8]
 80017b0:	4a10      	ldr	r2, [pc, #64]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017b2:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 80017b6:	6093      	str	r3, [r2, #8]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH,I2C1_SDA);
 80017b8:	4b0e      	ldr	r3, [pc, #56]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017ba:	689b      	ldr	r3, [r3, #8]
 80017bc:	4a0d      	ldr	r2, [pc, #52]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017be:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 80017c2:	6093      	str	r3, [r2, #8]
	GPIOX_AFR(4,I2C1_SCL);
 80017c4:	4b0b      	ldr	r3, [pc, #44]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017c8:	f023 030f 	bic.w	r3, r3, #15
 80017cc:	4a09      	ldr	r2, [pc, #36]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017ce:	f043 0304 	orr.w	r3, r3, #4
 80017d2:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOX_AFR(4,I2C1_SDA);
 80017d4:	4b07      	ldr	r3, [pc, #28]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017d8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80017dc:	4a05      	ldr	r2, [pc, #20]	; (80017f4 <I2C1_GPIOInit+0xb0>)
 80017de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80017e2:	6253      	str	r3, [r2, #36]	; 0x24
	return;
 80017e4:	bf00      	nop
}
 80017e6:	46bd      	mov	sp, r7
 80017e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ec:	4770      	bx	lr
 80017ee:	bf00      	nop
 80017f0:	40023800 	.word	0x40023800
 80017f4:	40020400 	.word	0x40020400

080017f8 <I2C_Init>:

/**
 * void I2C init
 */
void I2C_Init(I2C_TypeDef *I2Cx, uint32_t mode){
 80017f8:	b580      	push	{r7, lr}
 80017fa:	b084      	sub	sp, #16
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
 8001800:	6039      	str	r1, [r7, #0]

	uint32_t tempreg = 0;
 8001802:	2300      	movs	r3, #0
 8001804:	60fb      	str	r3, [r7, #12]
	uint16_t ccr_value = 0;
 8001806:	2300      	movs	r3, #0
 8001808:	817b      	strh	r3, [r7, #10]


	if(I2Cx == I2C1)
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	4a48      	ldr	r2, [pc, #288]	; (8001930 <I2C_Init+0x138>)
 800180e:	4293      	cmp	r3, r2
 8001810:	d106      	bne.n	8001820 <I2C_Init+0x28>
		RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8001812:	4b48      	ldr	r3, [pc, #288]	; (8001934 <I2C_Init+0x13c>)
 8001814:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001816:	4a47      	ldr	r2, [pc, #284]	; (8001934 <I2C_Init+0x13c>)
 8001818:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800181c:	6413      	str	r3, [r2, #64]	; 0x40
 800181e:	e010      	b.n	8001842 <I2C_Init+0x4a>
	else if(I2Cx == I2C2)
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	4a45      	ldr	r2, [pc, #276]	; (8001938 <I2C_Init+0x140>)
 8001824:	4293      	cmp	r3, r2
 8001826:	d106      	bne.n	8001836 <I2C_Init+0x3e>
		RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 8001828:	4b42      	ldr	r3, [pc, #264]	; (8001934 <I2C_Init+0x13c>)
 800182a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800182c:	4a41      	ldr	r2, [pc, #260]	; (8001934 <I2C_Init+0x13c>)
 800182e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001832:	6413      	str	r3, [r2, #64]	; 0x40
 8001834:	e005      	b.n	8001842 <I2C_Init+0x4a>
	else
		RCC->APB1ENR |= RCC_APB1ENR_I2C3EN;
 8001836:	4b3f      	ldr	r3, [pc, #252]	; (8001934 <I2C_Init+0x13c>)
 8001838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800183a:	4a3e      	ldr	r2, [pc, #248]	; (8001934 <I2C_Init+0x13c>)
 800183c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001840:	6413      	str	r3, [r2, #64]	; 0x40

	/*Enter reset mode  */
	I2C1->CR1 |= (1U<<15);
 8001842:	4b3b      	ldr	r3, [pc, #236]	; (8001930 <I2C_Init+0x138>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	4a3a      	ldr	r2, [pc, #232]	; (8001930 <I2C_Init+0x138>)
 8001848:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800184c:	6013      	str	r3, [r2, #0]

	/*Come out of reset mode  */
	I2C1->CR1 &=~(1U<<15);
 800184e:	4b38      	ldr	r3, [pc, #224]	; (8001930 <I2C_Init+0x138>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	4a37      	ldr	r2, [pc, #220]	; (8001930 <I2C_Init+0x138>)
 8001854:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001858:	6013      	str	r3, [r2, #0]

	/*I2C param configuration*/
	//ack control bit
	I2Cx->CR1 = I2C_CR1_ACK;	//Confirmación devuelta después de recibir un byte (dirección o datos coincidentes)
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001860:	601a      	str	r2, [r3, #0]

	//configurar el campo FREQ de CR2
	tempreg = PCLK1 / 1000000U;
 8001862:	232a      	movs	r3, #42	; 0x2a
 8001864:	60fb      	str	r3, [r7, #12]
	I2Cx->CR2 = (tempreg & 0x3FU);
 8001866:	68fb      	ldr	r3, [r7, #12]
 8001868:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	605a      	str	r2, [r3, #4]

	//programar la propia dirección del dispositivo
	tempreg = 0;
 8001870:	2300      	movs	r3, #0
 8001872:	60fb      	str	r3, [r7, #12]
	tempreg |= SLAVE_ADDR<<1;
 8001874:	68fb      	ldr	r3, [r7, #12]
 8001876:	f043 03d2 	orr.w	r3, r3, #210	; 0xd2
 800187a:	60fb      	str	r3, [r7, #12]
	tempreg |= (1<<14);
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001882:	60fb      	str	r3, [r7, #12]
	I2Cx->OAR1 = tempreg;
 8001884:	687b      	ldr	r3, [r7, #4]
 8001886:	68fa      	ldr	r2, [r7, #12]
 8001888:	609a      	str	r2, [r3, #8]

	//cálculos de CCR
	tempreg = 0;
 800188a:	2300      	movs	r3, #0
 800188c:	60fb      	str	r3, [r7, #12]
	if(mode == I2C_SCL_SPEED_SM){  //standart mode
 800188e:	683b      	ldr	r3, [r7, #0]
 8001890:	4a2a      	ldr	r2, [pc, #168]	; (800193c <I2C_Init+0x144>)
 8001892:	4293      	cmp	r3, r2
 8001894:	d11a      	bne.n	80018cc <I2C_Init+0xd4>
		ccr_value = (PCLK1 / (2 * mode));
 8001896:	683b      	ldr	r3, [r7, #0]
 8001898:	005b      	lsls	r3, r3, #1
 800189a:	4618      	mov	r0, r3
 800189c:	f7fe fe3a 	bl	8000514 <__aeabi_ui2d>
 80018a0:	4602      	mov	r2, r0
 80018a2:	460b      	mov	r3, r1
 80018a4:	a120      	add	r1, pc, #128	; (adr r1, 8001928 <I2C_Init+0x130>)
 80018a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80018aa:	f7fe ffd7 	bl	800085c <__aeabi_ddiv>
 80018ae:	4602      	mov	r2, r0
 80018b0:	460b      	mov	r3, r1
 80018b2:	4610      	mov	r0, r2
 80018b4:	4619      	mov	r1, r3
 80018b6:	f7ff f97f 	bl	8000bb8 <__aeabi_d2uiz>
 80018ba:	4603      	mov	r3, r0
 80018bc:	817b      	strh	r3, [r7, #10]
		tempreg |= (ccr_value & 0xFFF);
 80018be:	897b      	ldrh	r3, [r7, #10]
 80018c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80018c4:	68fa      	ldr	r2, [r7, #12]
 80018c6:	4313      	orrs	r3, r2
 80018c8:	60fb      	str	r3, [r7, #12]
 80018ca:	e00f      	b.n	80018ec <I2C_Init+0xf4>
	}
	else{//fast mode
		tempreg |= I2C_CCR_FS;
 80018cc:	68fb      	ldr	r3, [r7, #12]
 80018ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80018d2:	60fb      	str	r3, [r7, #12]
#if 1				//duty_2
	tempreg &=~ I2C_CCR_DUTY;
 80018d4:	68fb      	ldr	r3, [r7, #12]
 80018d6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80018da:	60fb      	str	r3, [r7, #12]
	ccr_value = (PCLK1 / ( 3 * I2C_SCL_SPEED_FM4K));
 80018dc:	2323      	movs	r3, #35	; 0x23
 80018de:	817b      	strh	r3, [r7, #10]
#else 				//duty_16_9
	tempreg |= I2C_CCR_DUTY;
	ccr_value = (PCLK1 / (25 * I2C_SCL_SPEED_FM4K));
#endif
	tempreg |= (ccr_value & 0xFFF);
 80018e0:	897b      	ldrh	r3, [r7, #10]
 80018e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80018e6:	68fa      	ldr	r2, [r7, #12]
 80018e8:	4313      	orrs	r3, r2
 80018ea:	60fb      	str	r3, [r7, #12]
	}
	I2Cx->CCR = tempreg;
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	68fa      	ldr	r2, [r7, #12]
 80018f0:	61da      	str	r2, [r3, #28]
	//TRISE Configuration
	if(mode == I2C_SCL_SPEED_SM){
 80018f2:	683b      	ldr	r3, [r7, #0]
 80018f4:	4a11      	ldr	r2, [pc, #68]	; (800193c <I2C_Init+0x144>)
 80018f6:	4293      	cmp	r3, r2
 80018f8:	d102      	bne.n	8001900 <I2C_Init+0x108>
		tempreg = (PCLK1 / 1000000U) + 1;
 80018fa:	232b      	movs	r3, #43	; 0x2b
 80018fc:	60fb      	str	r3, [r7, #12]
 80018fe:	e001      	b.n	8001904 <I2C_Init+0x10c>
	}else{
		tempreg = ( (PCLK1 * 300) / 1000000000U ) + 1;
 8001900:	230d      	movs	r3, #13
 8001902:	60fb      	str	r3, [r7, #12]
	}
	I2Cx->TRISE = (tempreg & 0x3F);
 8001904:	68fb      	ldr	r3, [r7, #12]
 8001906:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	621a      	str	r2, [r3, #32]

	/*Habilitar el modulo i2c*/
	I2Cx->CR1 |= I2C_CR1_PE;
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	f043 0201 	orr.w	r2, r3, #1
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	601a      	str	r2, [r3, #0]

	return;
 800191a:	bf00      	nop
}
 800191c:	3710      	adds	r7, #16
 800191e:	46bd      	mov	sp, r7
 8001920:	bd80      	pop	{r7, pc}
 8001922:	bf00      	nop
 8001924:	f3af 8000 	nop.w
 8001928:	00000000 	.word	0x00000000
 800192c:	418406f4 	.word	0x418406f4
 8001930:	40005400 	.word	0x40005400
 8001934:	40023800 	.word	0x40023800
 8001938:	40005800 	.word	0x40005800
 800193c:	000186a0 	.word	0x000186a0

08001940 <I2C_MasterSendData>:

void I2C_MasterSendData(I2C_TypeDef *I2Cx, uint8_t SlaveAddr,uint8_t *pTxbuffer, uint32_t Len){
 8001940:	b480      	push	{r7}
 8001942:	b087      	sub	sp, #28
 8001944:	af00      	add	r7, sp, #0
 8001946:	60f8      	str	r0, [r7, #12]
 8001948:	607a      	str	r2, [r7, #4]
 800194a:	603b      	str	r3, [r7, #0]
 800194c:	460b      	mov	r3, r1
 800194e:	72fb      	strb	r3, [r7, #11]

	volatile int tmp;

	/*verificar los datos*/
	if(Len <= 0 || pTxbuffer == ((void *)0))
 8001950:	683b      	ldr	r3, [r7, #0]
 8001952:	2b00      	cmp	r3, #0
 8001954:	d059      	beq.n	8001a0a <I2C_MasterSendData+0xca>
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	2b00      	cmp	r3, #0
 800195a:	d056      	beq.n	8001a0a <I2C_MasterSendData+0xca>
		return;
	/*esperar que la linea esté libre*/
	while((I2Cx->SR2 & I2C_SR2_BUSY));
 800195c:	bf00      	nop
 800195e:	68fb      	ldr	r3, [r7, #12]
 8001960:	699b      	ldr	r3, [r3, #24]
 8001962:	f003 0302 	and.w	r3, r3, #2
 8001966:	2b00      	cmp	r3, #0
 8001968:	d1f9      	bne.n	800195e <I2C_MasterSendData+0x1e>

	//1. generar la condición de start
	I2Cx->CR1 |= I2C_CR1_START;
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001972:	68fb      	ldr	r3, [r7, #12]
 8001974:	601a      	str	r2, [r3, #0]
	//2. esperar que la condición de inicio se haya generado
	while(!(I2Cx->SR1 & I2C_SR1_SB));
 8001976:	bf00      	nop
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	695b      	ldr	r3, [r3, #20]
 800197c:	f003 0301 	and.w	r3, r3, #1
 8001980:	2b00      	cmp	r3, #0
 8001982:	d0f9      	beq.n	8001978 <I2C_MasterSendData+0x38>

	//3. enviar la direccion del esclavo con r/w bit
	SlaveAddr = SlaveAddr <<1 ;
 8001984:	7afb      	ldrb	r3, [r7, #11]
 8001986:	005b      	lsls	r3, r3, #1
 8001988:	72fb      	strb	r3, [r7, #11]
	SlaveAddr &=~(1U);						//write operation
 800198a:	7afb      	ldrb	r3, [r7, #11]
 800198c:	f023 0301 	bic.w	r3, r3, #1
 8001990:	72fb      	strb	r3, [r7, #11]
	I2Cx->DR = SlaveAddr;
 8001992:	7afa      	ldrb	r2, [r7, #11]
 8001994:	68fb      	ldr	r3, [r7, #12]
 8001996:	611a      	str	r2, [r3, #16]
	//4. verificar que la fase de direccion se completó
	while(!(I2Cx->SR1 & I2C_SR1_ADDR));
 8001998:	bf00      	nop
 800199a:	68fb      	ldr	r3, [r7, #12]
 800199c:	695b      	ldr	r3, [r3, #20]
 800199e:	f003 0302 	and.w	r3, r3, #2
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d0f9      	beq.n	800199a <I2C_MasterSendData+0x5a>
	//5. limpiar el flag
	tmp = I2Cx->SR1;
 80019a6:	68fb      	ldr	r3, [r7, #12]
 80019a8:	695b      	ldr	r3, [r3, #20]
 80019aa:	617b      	str	r3, [r7, #20]
	tmp = I2Cx->SR2;
 80019ac:	68fb      	ldr	r3, [r7, #12]
 80019ae:	699b      	ldr	r3, [r3, #24]
 80019b0:	617b      	str	r3, [r7, #20]
	(void)tmp;
 80019b2:	697b      	ldr	r3, [r7, #20]

	//6. enviar los datos
	while(Len > 0){
 80019b4:	e011      	b.n	80019da <I2C_MasterSendData+0x9a>

		while(!(I2Cx->SR1 & I2C_SR1_TXE));
 80019b6:	bf00      	nop
 80019b8:	68fb      	ldr	r3, [r7, #12]
 80019ba:	695b      	ldr	r3, [r3, #20]
 80019bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d0f9      	beq.n	80019b8 <I2C_MasterSendData+0x78>
		I2Cx->DR = *pTxbuffer;
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	781b      	ldrb	r3, [r3, #0]
 80019c8:	461a      	mov	r2, r3
 80019ca:	68fb      	ldr	r3, [r7, #12]
 80019cc:	611a      	str	r2, [r3, #16]
		pTxbuffer++;
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	3301      	adds	r3, #1
 80019d2:	607b      	str	r3, [r7, #4]
		Len--;
 80019d4:	683b      	ldr	r3, [r7, #0]
 80019d6:	3b01      	subs	r3, #1
 80019d8:	603b      	str	r3, [r7, #0]
	while(Len > 0){
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	2b00      	cmp	r3, #0
 80019de:	d1ea      	bne.n	80019b6 <I2C_MasterSendData+0x76>
	}
	//7. esperar hasta que la transmision se complete
	while(!(I2Cx->SR1 & I2C_SR1_TXE));
 80019e0:	bf00      	nop
 80019e2:	68fb      	ldr	r3, [r7, #12]
 80019e4:	695b      	ldr	r3, [r3, #20]
 80019e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	d0f9      	beq.n	80019e2 <I2C_MasterSendData+0xa2>
	while(!(I2Cx->SR1 & I2C_SR1_BTF));
 80019ee:	bf00      	nop
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	695b      	ldr	r3, [r3, #20]
 80019f4:	f003 0304 	and.w	r3, r3, #4
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d0f9      	beq.n	80019f0 <I2C_MasterSendData+0xb0>

	//8. generar la condición de stop
	I2Cx->CR1 |= I2C_CR1_STOP;
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001a04:	68fb      	ldr	r3, [r7, #12]
 8001a06:	601a      	str	r2, [r3, #0]

	return;
 8001a08:	e000      	b.n	8001a0c <I2C_MasterSendData+0xcc>
		return;
 8001a0a:	bf00      	nop
}
 8001a0c:	371c      	adds	r7, #28
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a14:	4770      	bx	lr

08001a16 <I2C_MasterReceiveData>:

void I2C_MasterReceiveData(I2C_TypeDef *I2Cx,uint8_t SlaveAddr,uint8_t *pRxbuffer, uint32_t Len){
 8001a16:	b480      	push	{r7}
 8001a18:	b087      	sub	sp, #28
 8001a1a:	af00      	add	r7, sp, #0
 8001a1c:	60f8      	str	r0, [r7, #12]
 8001a1e:	607a      	str	r2, [r7, #4]
 8001a20:	603b      	str	r3, [r7, #0]
 8001a22:	460b      	mov	r3, r1
 8001a24:	72fb      	strb	r3, [r7, #11]

	volatile int tmp;

	/*verificar los datos*/
	if(Len <= 0 || pRxbuffer == ((void *)0))
 8001a26:	683b      	ldr	r3, [r7, #0]
 8001a28:	2b00      	cmp	r3, #0
 8001a2a:	d06a      	beq.n	8001b02 <I2C_MasterReceiveData+0xec>
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d067      	beq.n	8001b02 <I2C_MasterReceiveData+0xec>
		return;
	/*esperar que la linea esté libre*/
	while((I2Cx->SR2 & I2C_SR2_BUSY));
 8001a32:	bf00      	nop
 8001a34:	68fb      	ldr	r3, [r7, #12]
 8001a36:	699b      	ldr	r3, [r3, #24]
 8001a38:	f003 0302 	and.w	r3, r3, #2
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d1f9      	bne.n	8001a34 <I2C_MasterReceiveData+0x1e>

	//1. generar la condición de start
	I2Cx->CR1 |= I2C_CR1_START;
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001a48:	68fb      	ldr	r3, [r7, #12]
 8001a4a:	601a      	str	r2, [r3, #0]
	//2. esperar que la condición de inicio se haya generado
	while(!(I2Cx->SR1 & I2C_SR1_SB));
 8001a4c:	bf00      	nop
 8001a4e:	68fb      	ldr	r3, [r7, #12]
 8001a50:	695b      	ldr	r3, [r3, #20]
 8001a52:	f003 0301 	and.w	r3, r3, #1
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d0f9      	beq.n	8001a4e <I2C_MasterReceiveData+0x38>

	//3. enviar la direccion del esclavo
	SlaveAddr = SlaveAddr << 1;
 8001a5a:	7afb      	ldrb	r3, [r7, #11]
 8001a5c:	005b      	lsls	r3, r3, #1
 8001a5e:	72fb      	strb	r3, [r7, #11]
	SlaveAddr |= 1U;			//read operation
 8001a60:	7afb      	ldrb	r3, [r7, #11]
 8001a62:	f043 0301 	orr.w	r3, r3, #1
 8001a66:	72fb      	strb	r3, [r7, #11]
	I2Cx->DR = SlaveAddr;
 8001a68:	7afa      	ldrb	r2, [r7, #11]
 8001a6a:	68fb      	ldr	r3, [r7, #12]
 8001a6c:	611a      	str	r2, [r3, #16]

	//4. verificar que la fase de direccion se completó
	while(!(I2Cx->SR1 & I2C_SR1_ADDR));
 8001a6e:	bf00      	nop
 8001a70:	68fb      	ldr	r3, [r7, #12]
 8001a72:	695b      	ldr	r3, [r3, #20]
 8001a74:	f003 0302 	and.w	r3, r3, #2
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d0f9      	beq.n	8001a70 <I2C_MasterReceiveData+0x5a>

	//5. limpiar el flag
	tmp = I2Cx->SR1;
 8001a7c:	68fb      	ldr	r3, [r7, #12]
 8001a7e:	695b      	ldr	r3, [r3, #20]
 8001a80:	617b      	str	r3, [r7, #20]
	tmp = I2Cx->SR2;
 8001a82:	68fb      	ldr	r3, [r7, #12]
 8001a84:	699b      	ldr	r3, [r3, #24]
 8001a86:	617b      	str	r3, [r7, #20]
	(void)tmp;
 8001a88:	697b      	ldr	r3, [r7, #20]

	/* Enable Acknowledge */
	I2Cx->CR1 |=  I2C_CR1_ACK;
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	601a      	str	r2, [r3, #0]

	while(Len>0U){
 8001a96:	e030      	b.n	8001afa <I2C_MasterReceiveData+0xe4>
		//si solo se va reducir un byte
		if(Len == 1U){
 8001a98:	683b      	ldr	r3, [r7, #0]
 8001a9a:	2b01      	cmp	r3, #1
 8001a9c:	d11b      	bne.n	8001ad6 <I2C_MasterReceiveData+0xc0>
			/* Disable Acknowledge */
			I2Cx->CR1 &=~ I2C_CR1_ACK;
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	601a      	str	r2, [r3, #0]
			//esperar hasta que RXNE se establesca
			while(!(I2Cx->SR1 & I2C_SR1_RXNE));
 8001aaa:	bf00      	nop
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	695b      	ldr	r3, [r3, #20]
 8001ab0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ab4:	2b00      	cmp	r3, #0
 8001ab6:	d0f9      	beq.n	8001aac <I2C_MasterReceiveData+0x96>
			//genera una condicion de parada
			I2Cx->CR1 |= I2C_CR1_STOP;
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001ac0:	68fb      	ldr	r3, [r7, #12]
 8001ac2:	601a      	str	r2, [r3, #0]
			//leer el dato
			*pRxbuffer = I2Cx->DR;
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	691b      	ldr	r3, [r3, #16]
 8001ac8:	b2da      	uxtb	r2, r3
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	701a      	strb	r2, [r3, #0]
			Len--;
 8001ace:	683b      	ldr	r3, [r7, #0]
 8001ad0:	3b01      	subs	r3, #1
 8001ad2:	603b      	str	r3, [r7, #0]
 8001ad4:	e011      	b.n	8001afa <I2C_MasterReceiveData+0xe4>
		}
		else{
			//esperar hasta que RXNE se establesca
			while(!(I2Cx->SR1 & I2C_SR1_RXNE));
 8001ad6:	bf00      	nop
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	695b      	ldr	r3, [r3, #20]
 8001adc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d0f9      	beq.n	8001ad8 <I2C_MasterReceiveData+0xc2>
			*pRxbuffer = I2Cx->DR;
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	691b      	ldr	r3, [r3, #16]
 8001ae8:	b2da      	uxtb	r2, r3
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	701a      	strb	r2, [r3, #0]
			pRxbuffer++;
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	3301      	adds	r3, #1
 8001af2:	607b      	str	r3, [r7, #4]
			Len--;
 8001af4:	683b      	ldr	r3, [r7, #0]
 8001af6:	3b01      	subs	r3, #1
 8001af8:	603b      	str	r3, [r7, #0]
	while(Len>0U){
 8001afa:	683b      	ldr	r3, [r7, #0]
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	d1cb      	bne.n	8001a98 <I2C_MasterReceiveData+0x82>
		}
	}
	return;
 8001b00:	e000      	b.n	8001b04 <I2C_MasterReceiveData+0xee>
		return;
 8001b02:	bf00      	nop
}
 8001b04:	371c      	adds	r7, #28
 8001b06:	46bd      	mov	sp, r7
 8001b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b0c:	4770      	bx	lr

08001b0e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001b0e:	b480      	push	{r7}
 8001b10:	af00      	add	r7, sp, #0
	return 1;
 8001b12:	2301      	movs	r3, #1
}
 8001b14:	4618      	mov	r0, r3
 8001b16:	46bd      	mov	sp, r7
 8001b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b1c:	4770      	bx	lr

08001b1e <_kill>:

int _kill(int pid, int sig)
{
 8001b1e:	b580      	push	{r7, lr}
 8001b20:	b082      	sub	sp, #8
 8001b22:	af00      	add	r7, sp, #0
 8001b24:	6078      	str	r0, [r7, #4]
 8001b26:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001b28:	f000 f972 	bl	8001e10 <__errno>
 8001b2c:	4603      	mov	r3, r0
 8001b2e:	2216      	movs	r2, #22
 8001b30:	601a      	str	r2, [r3, #0]
	return -1;
 8001b32:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001b36:	4618      	mov	r0, r3
 8001b38:	3708      	adds	r7, #8
 8001b3a:	46bd      	mov	sp, r7
 8001b3c:	bd80      	pop	{r7, pc}

08001b3e <_exit>:

void _exit (int status)
{
 8001b3e:	b580      	push	{r7, lr}
 8001b40:	b082      	sub	sp, #8
 8001b42:	af00      	add	r7, sp, #0
 8001b44:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001b46:	f04f 31ff 	mov.w	r1, #4294967295
 8001b4a:	6878      	ldr	r0, [r7, #4]
 8001b4c:	f7ff ffe7 	bl	8001b1e <_kill>
	while (1) {}		/* Make sure we hang here */
 8001b50:	e7fe      	b.n	8001b50 <_exit+0x12>

08001b52 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b52:	b580      	push	{r7, lr}
 8001b54:	b086      	sub	sp, #24
 8001b56:	af00      	add	r7, sp, #0
 8001b58:	60f8      	str	r0, [r7, #12]
 8001b5a:	60b9      	str	r1, [r7, #8]
 8001b5c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b5e:	2300      	movs	r3, #0
 8001b60:	617b      	str	r3, [r7, #20]
 8001b62:	e00a      	b.n	8001b7a <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001b64:	f3af 8000 	nop.w
 8001b68:	4601      	mov	r1, r0
 8001b6a:	68bb      	ldr	r3, [r7, #8]
 8001b6c:	1c5a      	adds	r2, r3, #1
 8001b6e:	60ba      	str	r2, [r7, #8]
 8001b70:	b2ca      	uxtb	r2, r1
 8001b72:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b74:	697b      	ldr	r3, [r7, #20]
 8001b76:	3301      	adds	r3, #1
 8001b78:	617b      	str	r3, [r7, #20]
 8001b7a:	697a      	ldr	r2, [r7, #20]
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	429a      	cmp	r2, r3
 8001b80:	dbf0      	blt.n	8001b64 <_read+0x12>
	}

return len;
 8001b82:	687b      	ldr	r3, [r7, #4]
}
 8001b84:	4618      	mov	r0, r3
 8001b86:	3718      	adds	r7, #24
 8001b88:	46bd      	mov	sp, r7
 8001b8a:	bd80      	pop	{r7, pc}

08001b8c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b086      	sub	sp, #24
 8001b90:	af00      	add	r7, sp, #0
 8001b92:	60f8      	str	r0, [r7, #12]
 8001b94:	60b9      	str	r1, [r7, #8]
 8001b96:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b98:	2300      	movs	r3, #0
 8001b9a:	617b      	str	r3, [r7, #20]
 8001b9c:	e009      	b.n	8001bb2 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001b9e:	68bb      	ldr	r3, [r7, #8]
 8001ba0:	1c5a      	adds	r2, r3, #1
 8001ba2:	60ba      	str	r2, [r7, #8]
 8001ba4:	781b      	ldrb	r3, [r3, #0]
 8001ba6:	4618      	mov	r0, r3
 8001ba8:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bac:	697b      	ldr	r3, [r7, #20]
 8001bae:	3301      	adds	r3, #1
 8001bb0:	617b      	str	r3, [r7, #20]
 8001bb2:	697a      	ldr	r2, [r7, #20]
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	429a      	cmp	r2, r3
 8001bb8:	dbf1      	blt.n	8001b9e <_write+0x12>
	}
	return len;
 8001bba:	687b      	ldr	r3, [r7, #4]
}
 8001bbc:	4618      	mov	r0, r3
 8001bbe:	3718      	adds	r7, #24
 8001bc0:	46bd      	mov	sp, r7
 8001bc2:	bd80      	pop	{r7, pc}

08001bc4 <_close>:

int _close(int file)
{
 8001bc4:	b480      	push	{r7}
 8001bc6:	b083      	sub	sp, #12
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
	return -1;
 8001bcc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001bd0:	4618      	mov	r0, r3
 8001bd2:	370c      	adds	r7, #12
 8001bd4:	46bd      	mov	sp, r7
 8001bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bda:	4770      	bx	lr

08001bdc <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001bdc:	b480      	push	{r7}
 8001bde:	b083      	sub	sp, #12
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
 8001be4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001be6:	683b      	ldr	r3, [r7, #0]
 8001be8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001bec:	605a      	str	r2, [r3, #4]
	return 0;
 8001bee:	2300      	movs	r3, #0
}
 8001bf0:	4618      	mov	r0, r3
 8001bf2:	370c      	adds	r7, #12
 8001bf4:	46bd      	mov	sp, r7
 8001bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bfa:	4770      	bx	lr

08001bfc <_isatty>:

int _isatty(int file)
{
 8001bfc:	b480      	push	{r7}
 8001bfe:	b083      	sub	sp, #12
 8001c00:	af00      	add	r7, sp, #0
 8001c02:	6078      	str	r0, [r7, #4]
	return 1;
 8001c04:	2301      	movs	r3, #1
}
 8001c06:	4618      	mov	r0, r3
 8001c08:	370c      	adds	r7, #12
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c10:	4770      	bx	lr

08001c12 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001c12:	b480      	push	{r7}
 8001c14:	b085      	sub	sp, #20
 8001c16:	af00      	add	r7, sp, #0
 8001c18:	60f8      	str	r0, [r7, #12]
 8001c1a:	60b9      	str	r1, [r7, #8]
 8001c1c:	607a      	str	r2, [r7, #4]
	return 0;
 8001c1e:	2300      	movs	r3, #0
}
 8001c20:	4618      	mov	r0, r3
 8001c22:	3714      	adds	r7, #20
 8001c24:	46bd      	mov	sp, r7
 8001c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c2a:	4770      	bx	lr

08001c2c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b086      	sub	sp, #24
 8001c30:	af00      	add	r7, sp, #0
 8001c32:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001c34:	4a14      	ldr	r2, [pc, #80]	; (8001c88 <_sbrk+0x5c>)
 8001c36:	4b15      	ldr	r3, [pc, #84]	; (8001c8c <_sbrk+0x60>)
 8001c38:	1ad3      	subs	r3, r2, r3
 8001c3a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001c3c:	697b      	ldr	r3, [r7, #20]
 8001c3e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001c40:	4b13      	ldr	r3, [pc, #76]	; (8001c90 <_sbrk+0x64>)
 8001c42:	681b      	ldr	r3, [r3, #0]
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d102      	bne.n	8001c4e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001c48:	4b11      	ldr	r3, [pc, #68]	; (8001c90 <_sbrk+0x64>)
 8001c4a:	4a12      	ldr	r2, [pc, #72]	; (8001c94 <_sbrk+0x68>)
 8001c4c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001c4e:	4b10      	ldr	r3, [pc, #64]	; (8001c90 <_sbrk+0x64>)
 8001c50:	681a      	ldr	r2, [r3, #0]
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	4413      	add	r3, r2
 8001c56:	693a      	ldr	r2, [r7, #16]
 8001c58:	429a      	cmp	r2, r3
 8001c5a:	d207      	bcs.n	8001c6c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001c5c:	f000 f8d8 	bl	8001e10 <__errno>
 8001c60:	4603      	mov	r3, r0
 8001c62:	220c      	movs	r2, #12
 8001c64:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001c66:	f04f 33ff 	mov.w	r3, #4294967295
 8001c6a:	e009      	b.n	8001c80 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001c6c:	4b08      	ldr	r3, [pc, #32]	; (8001c90 <_sbrk+0x64>)
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001c72:	4b07      	ldr	r3, [pc, #28]	; (8001c90 <_sbrk+0x64>)
 8001c74:	681a      	ldr	r2, [r3, #0]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	4413      	add	r3, r2
 8001c7a:	4a05      	ldr	r2, [pc, #20]	; (8001c90 <_sbrk+0x64>)
 8001c7c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001c7e:	68fb      	ldr	r3, [r7, #12]
}
 8001c80:	4618      	mov	r0, r3
 8001c82:	3718      	adds	r7, #24
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bd80      	pop	{r7, pc}
 8001c88:	20018000 	.word	0x20018000
 8001c8c:	00000400 	.word	0x00000400
 8001c90:	20000218 	.word	0x20000218
 8001c94:	20000230 	.word	0x20000230

08001c98 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001c98:	b480      	push	{r7}
 8001c9a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001c9c:	4b06      	ldr	r3, [pc, #24]	; (8001cb8 <SystemInit+0x20>)
 8001c9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001ca2:	4a05      	ldr	r2, [pc, #20]	; (8001cb8 <SystemInit+0x20>)
 8001ca4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001ca8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001cac:	bf00      	nop
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb4:	4770      	bx	lr
 8001cb6:	bf00      	nop
 8001cb8:	e000ed00 	.word	0xe000ed00

08001cbc <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8001cbc:	b480      	push	{r7}
 8001cbe:	b087      	sub	sp, #28
 8001cc0:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	613b      	str	r3, [r7, #16]
 8001cc6:	2300      	movs	r3, #0
 8001cc8:	617b      	str	r3, [r7, #20]
 8001cca:	2302      	movs	r3, #2
 8001ccc:	60fb      	str	r3, [r7, #12]
 8001cce:	2300      	movs	r3, #0
 8001cd0:	60bb      	str	r3, [r7, #8]
 8001cd2:	2302      	movs	r3, #2
 8001cd4:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001cd6:	4b34      	ldr	r3, [pc, #208]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001cd8:	689b      	ldr	r3, [r3, #8]
 8001cda:	f003 030c 	and.w	r3, r3, #12
 8001cde:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001ce0:	693b      	ldr	r3, [r7, #16]
 8001ce2:	2b08      	cmp	r3, #8
 8001ce4:	d011      	beq.n	8001d0a <SystemCoreClockUpdate+0x4e>
 8001ce6:	693b      	ldr	r3, [r7, #16]
 8001ce8:	2b08      	cmp	r3, #8
 8001cea:	d844      	bhi.n	8001d76 <SystemCoreClockUpdate+0xba>
 8001cec:	693b      	ldr	r3, [r7, #16]
 8001cee:	2b00      	cmp	r3, #0
 8001cf0:	d003      	beq.n	8001cfa <SystemCoreClockUpdate+0x3e>
 8001cf2:	693b      	ldr	r3, [r7, #16]
 8001cf4:	2b04      	cmp	r3, #4
 8001cf6:	d004      	beq.n	8001d02 <SystemCoreClockUpdate+0x46>
 8001cf8:	e03d      	b.n	8001d76 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8001cfa:	4b2c      	ldr	r3, [pc, #176]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001cfc:	4a2c      	ldr	r2, [pc, #176]	; (8001db0 <SystemCoreClockUpdate+0xf4>)
 8001cfe:	601a      	str	r2, [r3, #0]
      break;
 8001d00:	e03d      	b.n	8001d7e <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8001d02:	4b2a      	ldr	r3, [pc, #168]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001d04:	4a2b      	ldr	r2, [pc, #172]	; (8001db4 <SystemCoreClockUpdate+0xf8>)
 8001d06:	601a      	str	r2, [r3, #0]
      break;
 8001d08:	e039      	b.n	8001d7e <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8001d0a:	4b27      	ldr	r3, [pc, #156]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d0c:	685b      	ldr	r3, [r3, #4]
 8001d0e:	0d9b      	lsrs	r3, r3, #22
 8001d10:	f003 0301 	and.w	r3, r3, #1
 8001d14:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001d16:	4b24      	ldr	r3, [pc, #144]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d18:	685b      	ldr	r3, [r3, #4]
 8001d1a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001d1e:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8001d20:	68bb      	ldr	r3, [r7, #8]
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	d00c      	beq.n	8001d40 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001d26:	4a23      	ldr	r2, [pc, #140]	; (8001db4 <SystemCoreClockUpdate+0xf8>)
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d2e:	4a1e      	ldr	r2, [pc, #120]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d30:	6852      	ldr	r2, [r2, #4]
 8001d32:	0992      	lsrs	r2, r2, #6
 8001d34:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001d38:	fb02 f303 	mul.w	r3, r2, r3
 8001d3c:	617b      	str	r3, [r7, #20]
 8001d3e:	e00b      	b.n	8001d58 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001d40:	4a1b      	ldr	r2, [pc, #108]	; (8001db0 <SystemCoreClockUpdate+0xf4>)
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d48:	4a17      	ldr	r2, [pc, #92]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d4a:	6852      	ldr	r2, [r2, #4]
 8001d4c:	0992      	lsrs	r2, r2, #6
 8001d4e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001d52:	fb02 f303 	mul.w	r3, r2, r3
 8001d56:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8001d58:	4b13      	ldr	r3, [pc, #76]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d5a:	685b      	ldr	r3, [r3, #4]
 8001d5c:	0c1b      	lsrs	r3, r3, #16
 8001d5e:	f003 0303 	and.w	r3, r3, #3
 8001d62:	3301      	adds	r3, #1
 8001d64:	005b      	lsls	r3, r3, #1
 8001d66:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8001d68:	697a      	ldr	r2, [r7, #20]
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d70:	4a0e      	ldr	r2, [pc, #56]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001d72:	6013      	str	r3, [r2, #0]
      break;
 8001d74:	e003      	b.n	8001d7e <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 8001d76:	4b0d      	ldr	r3, [pc, #52]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001d78:	4a0d      	ldr	r2, [pc, #52]	; (8001db0 <SystemCoreClockUpdate+0xf4>)
 8001d7a:	601a      	str	r2, [r3, #0]
      break;
 8001d7c:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8001d7e:	4b0a      	ldr	r3, [pc, #40]	; (8001da8 <SystemCoreClockUpdate+0xec>)
 8001d80:	689b      	ldr	r3, [r3, #8]
 8001d82:	091b      	lsrs	r3, r3, #4
 8001d84:	f003 030f 	and.w	r3, r3, #15
 8001d88:	4a0b      	ldr	r2, [pc, #44]	; (8001db8 <SystemCoreClockUpdate+0xfc>)
 8001d8a:	5cd3      	ldrb	r3, [r2, r3]
 8001d8c:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8001d8e:	4b07      	ldr	r3, [pc, #28]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001d90:	681a      	ldr	r2, [r3, #0]
 8001d92:	693b      	ldr	r3, [r7, #16]
 8001d94:	fa22 f303 	lsr.w	r3, r2, r3
 8001d98:	4a04      	ldr	r2, [pc, #16]	; (8001dac <SystemCoreClockUpdate+0xf0>)
 8001d9a:	6013      	str	r3, [r2, #0]
}
 8001d9c:	bf00      	nop
 8001d9e:	371c      	adds	r7, #28
 8001da0:	46bd      	mov	sp, r7
 8001da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da6:	4770      	bx	lr
 8001da8:	40023800 	.word	0x40023800
 8001dac:	20000000 	.word	0x20000000
 8001db0:	00f42400 	.word	0x00f42400
 8001db4:	007a1200 	.word	0x007a1200
 8001db8:	08006808 	.word	0x08006808

08001dbc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001dbc:	480d      	ldr	r0, [pc, #52]	; (8001df4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001dbe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001dc0:	f7ff ff6a 	bl	8001c98 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001dc4:	480c      	ldr	r0, [pc, #48]	; (8001df8 <LoopForever+0x6>)
  ldr r1, =_edata
 8001dc6:	490d      	ldr	r1, [pc, #52]	; (8001dfc <LoopForever+0xa>)
  ldr r2, =_sidata
 8001dc8:	4a0d      	ldr	r2, [pc, #52]	; (8001e00 <LoopForever+0xe>)
  movs r3, #0
 8001dca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001dcc:	e002      	b.n	8001dd4 <LoopCopyDataInit>

08001dce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001dce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001dd0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001dd2:	3304      	adds	r3, #4

08001dd4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001dd4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001dd6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001dd8:	d3f9      	bcc.n	8001dce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001dda:	4a0a      	ldr	r2, [pc, #40]	; (8001e04 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001ddc:	4c0a      	ldr	r4, [pc, #40]	; (8001e08 <LoopForever+0x16>)
  movs r3, #0
 8001dde:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001de0:	e001      	b.n	8001de6 <LoopFillZerobss>

08001de2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001de2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001de4:	3204      	adds	r2, #4

08001de6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001de6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001de8:	d3fb      	bcc.n	8001de2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001dea:	f000 f817 	bl	8001e1c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001dee:	f7ff fb43 	bl	8001478 <main>

08001df2 <LoopForever>:

LoopForever:
    b LoopForever
 8001df2:	e7fe      	b.n	8001df2 <LoopForever>
  ldr   r0, =_estack
 8001df4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001df8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001dfc:	200001d8 	.word	0x200001d8
  ldr r2, =_sidata
 8001e00:	08006cc4 	.word	0x08006cc4
  ldr r2, =_sbss
 8001e04:	200001d8 	.word	0x200001d8
  ldr r4, =_ebss
 8001e08:	2000022c 	.word	0x2000022c

08001e0c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e0c:	e7fe      	b.n	8001e0c <ADC_IRQHandler>
	...

08001e10 <__errno>:
 8001e10:	4b01      	ldr	r3, [pc, #4]	; (8001e18 <__errno+0x8>)
 8001e12:	6818      	ldr	r0, [r3, #0]
 8001e14:	4770      	bx	lr
 8001e16:	bf00      	nop
 8001e18:	20000004 	.word	0x20000004

08001e1c <__libc_init_array>:
 8001e1c:	b570      	push	{r4, r5, r6, lr}
 8001e1e:	4d0d      	ldr	r5, [pc, #52]	; (8001e54 <__libc_init_array+0x38>)
 8001e20:	4c0d      	ldr	r4, [pc, #52]	; (8001e58 <__libc_init_array+0x3c>)
 8001e22:	1b64      	subs	r4, r4, r5
 8001e24:	10a4      	asrs	r4, r4, #2
 8001e26:	2600      	movs	r6, #0
 8001e28:	42a6      	cmp	r6, r4
 8001e2a:	d109      	bne.n	8001e40 <__libc_init_array+0x24>
 8001e2c:	4d0b      	ldr	r5, [pc, #44]	; (8001e5c <__libc_init_array+0x40>)
 8001e2e:	4c0c      	ldr	r4, [pc, #48]	; (8001e60 <__libc_init_array+0x44>)
 8001e30:	f004 fcb2 	bl	8006798 <_init>
 8001e34:	1b64      	subs	r4, r4, r5
 8001e36:	10a4      	asrs	r4, r4, #2
 8001e38:	2600      	movs	r6, #0
 8001e3a:	42a6      	cmp	r6, r4
 8001e3c:	d105      	bne.n	8001e4a <__libc_init_array+0x2e>
 8001e3e:	bd70      	pop	{r4, r5, r6, pc}
 8001e40:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e44:	4798      	blx	r3
 8001e46:	3601      	adds	r6, #1
 8001e48:	e7ee      	b.n	8001e28 <__libc_init_array+0xc>
 8001e4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8001e4e:	4798      	blx	r3
 8001e50:	3601      	adds	r6, #1
 8001e52:	e7f2      	b.n	8001e3a <__libc_init_array+0x1e>
 8001e54:	08006cbc 	.word	0x08006cbc
 8001e58:	08006cbc 	.word	0x08006cbc
 8001e5c:	08006cbc 	.word	0x08006cbc
 8001e60:	08006cc0 	.word	0x08006cc0

08001e64 <memset>:
 8001e64:	4402      	add	r2, r0
 8001e66:	4603      	mov	r3, r0
 8001e68:	4293      	cmp	r3, r2
 8001e6a:	d100      	bne.n	8001e6e <memset+0xa>
 8001e6c:	4770      	bx	lr
 8001e6e:	f803 1b01 	strb.w	r1, [r3], #1
 8001e72:	e7f9      	b.n	8001e68 <memset+0x4>

08001e74 <__cvt>:
 8001e74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e78:	ec55 4b10 	vmov	r4, r5, d0
 8001e7c:	2d00      	cmp	r5, #0
 8001e7e:	460e      	mov	r6, r1
 8001e80:	4619      	mov	r1, r3
 8001e82:	462b      	mov	r3, r5
 8001e84:	bfbb      	ittet	lt
 8001e86:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001e8a:	461d      	movlt	r5, r3
 8001e8c:	2300      	movge	r3, #0
 8001e8e:	232d      	movlt	r3, #45	; 0x2d
 8001e90:	700b      	strb	r3, [r1, #0]
 8001e92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001e94:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001e98:	4691      	mov	r9, r2
 8001e9a:	f023 0820 	bic.w	r8, r3, #32
 8001e9e:	bfbc      	itt	lt
 8001ea0:	4622      	movlt	r2, r4
 8001ea2:	4614      	movlt	r4, r2
 8001ea4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001ea8:	d005      	beq.n	8001eb6 <__cvt+0x42>
 8001eaa:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001eae:	d100      	bne.n	8001eb2 <__cvt+0x3e>
 8001eb0:	3601      	adds	r6, #1
 8001eb2:	2102      	movs	r1, #2
 8001eb4:	e000      	b.n	8001eb8 <__cvt+0x44>
 8001eb6:	2103      	movs	r1, #3
 8001eb8:	ab03      	add	r3, sp, #12
 8001eba:	9301      	str	r3, [sp, #4]
 8001ebc:	ab02      	add	r3, sp, #8
 8001ebe:	9300      	str	r3, [sp, #0]
 8001ec0:	ec45 4b10 	vmov	d0, r4, r5
 8001ec4:	4653      	mov	r3, sl
 8001ec6:	4632      	mov	r2, r6
 8001ec8:	f001 fdce 	bl	8003a68 <_dtoa_r>
 8001ecc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001ed0:	4607      	mov	r7, r0
 8001ed2:	d102      	bne.n	8001eda <__cvt+0x66>
 8001ed4:	f019 0f01 	tst.w	r9, #1
 8001ed8:	d022      	beq.n	8001f20 <__cvt+0xac>
 8001eda:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001ede:	eb07 0906 	add.w	r9, r7, r6
 8001ee2:	d110      	bne.n	8001f06 <__cvt+0x92>
 8001ee4:	783b      	ldrb	r3, [r7, #0]
 8001ee6:	2b30      	cmp	r3, #48	; 0x30
 8001ee8:	d10a      	bne.n	8001f00 <__cvt+0x8c>
 8001eea:	2200      	movs	r2, #0
 8001eec:	2300      	movs	r3, #0
 8001eee:	4620      	mov	r0, r4
 8001ef0:	4629      	mov	r1, r5
 8001ef2:	f7fe fdf1 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ef6:	b918      	cbnz	r0, 8001f00 <__cvt+0x8c>
 8001ef8:	f1c6 0601 	rsb	r6, r6, #1
 8001efc:	f8ca 6000 	str.w	r6, [sl]
 8001f00:	f8da 3000 	ldr.w	r3, [sl]
 8001f04:	4499      	add	r9, r3
 8001f06:	2200      	movs	r2, #0
 8001f08:	2300      	movs	r3, #0
 8001f0a:	4620      	mov	r0, r4
 8001f0c:	4629      	mov	r1, r5
 8001f0e:	f7fe fde3 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f12:	b108      	cbz	r0, 8001f18 <__cvt+0xa4>
 8001f14:	f8cd 900c 	str.w	r9, [sp, #12]
 8001f18:	2230      	movs	r2, #48	; 0x30
 8001f1a:	9b03      	ldr	r3, [sp, #12]
 8001f1c:	454b      	cmp	r3, r9
 8001f1e:	d307      	bcc.n	8001f30 <__cvt+0xbc>
 8001f20:	9b03      	ldr	r3, [sp, #12]
 8001f22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f24:	1bdb      	subs	r3, r3, r7
 8001f26:	4638      	mov	r0, r7
 8001f28:	6013      	str	r3, [r2, #0]
 8001f2a:	b004      	add	sp, #16
 8001f2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f30:	1c59      	adds	r1, r3, #1
 8001f32:	9103      	str	r1, [sp, #12]
 8001f34:	701a      	strb	r2, [r3, #0]
 8001f36:	e7f0      	b.n	8001f1a <__cvt+0xa6>

08001f38 <__exponent>:
 8001f38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f3a:	4603      	mov	r3, r0
 8001f3c:	2900      	cmp	r1, #0
 8001f3e:	bfb8      	it	lt
 8001f40:	4249      	neglt	r1, r1
 8001f42:	f803 2b02 	strb.w	r2, [r3], #2
 8001f46:	bfb4      	ite	lt
 8001f48:	222d      	movlt	r2, #45	; 0x2d
 8001f4a:	222b      	movge	r2, #43	; 0x2b
 8001f4c:	2909      	cmp	r1, #9
 8001f4e:	7042      	strb	r2, [r0, #1]
 8001f50:	dd2a      	ble.n	8001fa8 <__exponent+0x70>
 8001f52:	f10d 0407 	add.w	r4, sp, #7
 8001f56:	46a4      	mov	ip, r4
 8001f58:	270a      	movs	r7, #10
 8001f5a:	46a6      	mov	lr, r4
 8001f5c:	460a      	mov	r2, r1
 8001f5e:	fb91 f6f7 	sdiv	r6, r1, r7
 8001f62:	fb07 1516 	mls	r5, r7, r6, r1
 8001f66:	3530      	adds	r5, #48	; 0x30
 8001f68:	2a63      	cmp	r2, #99	; 0x63
 8001f6a:	f104 34ff 	add.w	r4, r4, #4294967295
 8001f6e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8001f72:	4631      	mov	r1, r6
 8001f74:	dcf1      	bgt.n	8001f5a <__exponent+0x22>
 8001f76:	3130      	adds	r1, #48	; 0x30
 8001f78:	f1ae 0502 	sub.w	r5, lr, #2
 8001f7c:	f804 1c01 	strb.w	r1, [r4, #-1]
 8001f80:	1c44      	adds	r4, r0, #1
 8001f82:	4629      	mov	r1, r5
 8001f84:	4561      	cmp	r1, ip
 8001f86:	d30a      	bcc.n	8001f9e <__exponent+0x66>
 8001f88:	f10d 0209 	add.w	r2, sp, #9
 8001f8c:	eba2 020e 	sub.w	r2, r2, lr
 8001f90:	4565      	cmp	r5, ip
 8001f92:	bf88      	it	hi
 8001f94:	2200      	movhi	r2, #0
 8001f96:	4413      	add	r3, r2
 8001f98:	1a18      	subs	r0, r3, r0
 8001f9a:	b003      	add	sp, #12
 8001f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f9e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8001fa2:	f804 2f01 	strb.w	r2, [r4, #1]!
 8001fa6:	e7ed      	b.n	8001f84 <__exponent+0x4c>
 8001fa8:	2330      	movs	r3, #48	; 0x30
 8001faa:	3130      	adds	r1, #48	; 0x30
 8001fac:	7083      	strb	r3, [r0, #2]
 8001fae:	70c1      	strb	r1, [r0, #3]
 8001fb0:	1d03      	adds	r3, r0, #4
 8001fb2:	e7f1      	b.n	8001f98 <__exponent+0x60>

08001fb4 <_printf_float>:
 8001fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fb8:	ed2d 8b02 	vpush	{d8}
 8001fbc:	b08d      	sub	sp, #52	; 0x34
 8001fbe:	460c      	mov	r4, r1
 8001fc0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001fc4:	4616      	mov	r6, r2
 8001fc6:	461f      	mov	r7, r3
 8001fc8:	4605      	mov	r5, r0
 8001fca:	f002 feab 	bl	8004d24 <_localeconv_r>
 8001fce:	f8d0 a000 	ldr.w	sl, [r0]
 8001fd2:	4650      	mov	r0, sl
 8001fd4:	f7fe f904 	bl	80001e0 <strlen>
 8001fd8:	2300      	movs	r3, #0
 8001fda:	930a      	str	r3, [sp, #40]	; 0x28
 8001fdc:	6823      	ldr	r3, [r4, #0]
 8001fde:	9305      	str	r3, [sp, #20]
 8001fe0:	f8d8 3000 	ldr.w	r3, [r8]
 8001fe4:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001fe8:	3307      	adds	r3, #7
 8001fea:	f023 0307 	bic.w	r3, r3, #7
 8001fee:	f103 0208 	add.w	r2, r3, #8
 8001ff2:	f8c8 2000 	str.w	r2, [r8]
 8001ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ffa:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001ffe:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8002002:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002006:	9307      	str	r3, [sp, #28]
 8002008:	f8cd 8018 	str.w	r8, [sp, #24]
 800200c:	ee08 0a10 	vmov	s16, r0
 8002010:	4b9f      	ldr	r3, [pc, #636]	; (8002290 <_printf_float+0x2dc>)
 8002012:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002016:	f04f 32ff 	mov.w	r2, #4294967295
 800201a:	f7fe fd8f 	bl	8000b3c <__aeabi_dcmpun>
 800201e:	bb88      	cbnz	r0, 8002084 <_printf_float+0xd0>
 8002020:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002024:	4b9a      	ldr	r3, [pc, #616]	; (8002290 <_printf_float+0x2dc>)
 8002026:	f04f 32ff 	mov.w	r2, #4294967295
 800202a:	f7fe fd69 	bl	8000b00 <__aeabi_dcmple>
 800202e:	bb48      	cbnz	r0, 8002084 <_printf_float+0xd0>
 8002030:	2200      	movs	r2, #0
 8002032:	2300      	movs	r3, #0
 8002034:	4640      	mov	r0, r8
 8002036:	4649      	mov	r1, r9
 8002038:	f7fe fd58 	bl	8000aec <__aeabi_dcmplt>
 800203c:	b110      	cbz	r0, 8002044 <_printf_float+0x90>
 800203e:	232d      	movs	r3, #45	; 0x2d
 8002040:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002044:	4b93      	ldr	r3, [pc, #588]	; (8002294 <_printf_float+0x2e0>)
 8002046:	4894      	ldr	r0, [pc, #592]	; (8002298 <_printf_float+0x2e4>)
 8002048:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800204c:	bf94      	ite	ls
 800204e:	4698      	movls	r8, r3
 8002050:	4680      	movhi	r8, r0
 8002052:	2303      	movs	r3, #3
 8002054:	6123      	str	r3, [r4, #16]
 8002056:	9b05      	ldr	r3, [sp, #20]
 8002058:	f023 0204 	bic.w	r2, r3, #4
 800205c:	6022      	str	r2, [r4, #0]
 800205e:	f04f 0900 	mov.w	r9, #0
 8002062:	9700      	str	r7, [sp, #0]
 8002064:	4633      	mov	r3, r6
 8002066:	aa0b      	add	r2, sp, #44	; 0x2c
 8002068:	4621      	mov	r1, r4
 800206a:	4628      	mov	r0, r5
 800206c:	f000 f9d8 	bl	8002420 <_printf_common>
 8002070:	3001      	adds	r0, #1
 8002072:	f040 8090 	bne.w	8002196 <_printf_float+0x1e2>
 8002076:	f04f 30ff 	mov.w	r0, #4294967295
 800207a:	b00d      	add	sp, #52	; 0x34
 800207c:	ecbd 8b02 	vpop	{d8}
 8002080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002084:	4642      	mov	r2, r8
 8002086:	464b      	mov	r3, r9
 8002088:	4640      	mov	r0, r8
 800208a:	4649      	mov	r1, r9
 800208c:	f7fe fd56 	bl	8000b3c <__aeabi_dcmpun>
 8002090:	b140      	cbz	r0, 80020a4 <_printf_float+0xf0>
 8002092:	464b      	mov	r3, r9
 8002094:	2b00      	cmp	r3, #0
 8002096:	bfbc      	itt	lt
 8002098:	232d      	movlt	r3, #45	; 0x2d
 800209a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800209e:	487f      	ldr	r0, [pc, #508]	; (800229c <_printf_float+0x2e8>)
 80020a0:	4b7f      	ldr	r3, [pc, #508]	; (80022a0 <_printf_float+0x2ec>)
 80020a2:	e7d1      	b.n	8002048 <_printf_float+0x94>
 80020a4:	6863      	ldr	r3, [r4, #4]
 80020a6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80020aa:	9206      	str	r2, [sp, #24]
 80020ac:	1c5a      	adds	r2, r3, #1
 80020ae:	d13f      	bne.n	8002130 <_printf_float+0x17c>
 80020b0:	2306      	movs	r3, #6
 80020b2:	6063      	str	r3, [r4, #4]
 80020b4:	9b05      	ldr	r3, [sp, #20]
 80020b6:	6861      	ldr	r1, [r4, #4]
 80020b8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80020bc:	2300      	movs	r3, #0
 80020be:	9303      	str	r3, [sp, #12]
 80020c0:	ab0a      	add	r3, sp, #40	; 0x28
 80020c2:	e9cd b301 	strd	fp, r3, [sp, #4]
 80020c6:	ab09      	add	r3, sp, #36	; 0x24
 80020c8:	ec49 8b10 	vmov	d0, r8, r9
 80020cc:	9300      	str	r3, [sp, #0]
 80020ce:	6022      	str	r2, [r4, #0]
 80020d0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80020d4:	4628      	mov	r0, r5
 80020d6:	f7ff fecd 	bl	8001e74 <__cvt>
 80020da:	9b06      	ldr	r3, [sp, #24]
 80020dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80020de:	2b47      	cmp	r3, #71	; 0x47
 80020e0:	4680      	mov	r8, r0
 80020e2:	d108      	bne.n	80020f6 <_printf_float+0x142>
 80020e4:	1cc8      	adds	r0, r1, #3
 80020e6:	db02      	blt.n	80020ee <_printf_float+0x13a>
 80020e8:	6863      	ldr	r3, [r4, #4]
 80020ea:	4299      	cmp	r1, r3
 80020ec:	dd41      	ble.n	8002172 <_printf_float+0x1be>
 80020ee:	f1ab 0b02 	sub.w	fp, fp, #2
 80020f2:	fa5f fb8b 	uxtb.w	fp, fp
 80020f6:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80020fa:	d820      	bhi.n	800213e <_printf_float+0x18a>
 80020fc:	3901      	subs	r1, #1
 80020fe:	465a      	mov	r2, fp
 8002100:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002104:	9109      	str	r1, [sp, #36]	; 0x24
 8002106:	f7ff ff17 	bl	8001f38 <__exponent>
 800210a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800210c:	1813      	adds	r3, r2, r0
 800210e:	2a01      	cmp	r2, #1
 8002110:	4681      	mov	r9, r0
 8002112:	6123      	str	r3, [r4, #16]
 8002114:	dc02      	bgt.n	800211c <_printf_float+0x168>
 8002116:	6822      	ldr	r2, [r4, #0]
 8002118:	07d2      	lsls	r2, r2, #31
 800211a:	d501      	bpl.n	8002120 <_printf_float+0x16c>
 800211c:	3301      	adds	r3, #1
 800211e:	6123      	str	r3, [r4, #16]
 8002120:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002124:	2b00      	cmp	r3, #0
 8002126:	d09c      	beq.n	8002062 <_printf_float+0xae>
 8002128:	232d      	movs	r3, #45	; 0x2d
 800212a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800212e:	e798      	b.n	8002062 <_printf_float+0xae>
 8002130:	9a06      	ldr	r2, [sp, #24]
 8002132:	2a47      	cmp	r2, #71	; 0x47
 8002134:	d1be      	bne.n	80020b4 <_printf_float+0x100>
 8002136:	2b00      	cmp	r3, #0
 8002138:	d1bc      	bne.n	80020b4 <_printf_float+0x100>
 800213a:	2301      	movs	r3, #1
 800213c:	e7b9      	b.n	80020b2 <_printf_float+0xfe>
 800213e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8002142:	d118      	bne.n	8002176 <_printf_float+0x1c2>
 8002144:	2900      	cmp	r1, #0
 8002146:	6863      	ldr	r3, [r4, #4]
 8002148:	dd0b      	ble.n	8002162 <_printf_float+0x1ae>
 800214a:	6121      	str	r1, [r4, #16]
 800214c:	b913      	cbnz	r3, 8002154 <_printf_float+0x1a0>
 800214e:	6822      	ldr	r2, [r4, #0]
 8002150:	07d0      	lsls	r0, r2, #31
 8002152:	d502      	bpl.n	800215a <_printf_float+0x1a6>
 8002154:	3301      	adds	r3, #1
 8002156:	440b      	add	r3, r1
 8002158:	6123      	str	r3, [r4, #16]
 800215a:	65a1      	str	r1, [r4, #88]	; 0x58
 800215c:	f04f 0900 	mov.w	r9, #0
 8002160:	e7de      	b.n	8002120 <_printf_float+0x16c>
 8002162:	b913      	cbnz	r3, 800216a <_printf_float+0x1b6>
 8002164:	6822      	ldr	r2, [r4, #0]
 8002166:	07d2      	lsls	r2, r2, #31
 8002168:	d501      	bpl.n	800216e <_printf_float+0x1ba>
 800216a:	3302      	adds	r3, #2
 800216c:	e7f4      	b.n	8002158 <_printf_float+0x1a4>
 800216e:	2301      	movs	r3, #1
 8002170:	e7f2      	b.n	8002158 <_printf_float+0x1a4>
 8002172:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8002176:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002178:	4299      	cmp	r1, r3
 800217a:	db05      	blt.n	8002188 <_printf_float+0x1d4>
 800217c:	6823      	ldr	r3, [r4, #0]
 800217e:	6121      	str	r1, [r4, #16]
 8002180:	07d8      	lsls	r0, r3, #31
 8002182:	d5ea      	bpl.n	800215a <_printf_float+0x1a6>
 8002184:	1c4b      	adds	r3, r1, #1
 8002186:	e7e7      	b.n	8002158 <_printf_float+0x1a4>
 8002188:	2900      	cmp	r1, #0
 800218a:	bfd4      	ite	le
 800218c:	f1c1 0202 	rsble	r2, r1, #2
 8002190:	2201      	movgt	r2, #1
 8002192:	4413      	add	r3, r2
 8002194:	e7e0      	b.n	8002158 <_printf_float+0x1a4>
 8002196:	6823      	ldr	r3, [r4, #0]
 8002198:	055a      	lsls	r2, r3, #21
 800219a:	d407      	bmi.n	80021ac <_printf_float+0x1f8>
 800219c:	6923      	ldr	r3, [r4, #16]
 800219e:	4642      	mov	r2, r8
 80021a0:	4631      	mov	r1, r6
 80021a2:	4628      	mov	r0, r5
 80021a4:	47b8      	blx	r7
 80021a6:	3001      	adds	r0, #1
 80021a8:	d12c      	bne.n	8002204 <_printf_float+0x250>
 80021aa:	e764      	b.n	8002076 <_printf_float+0xc2>
 80021ac:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80021b0:	f240 80e0 	bls.w	8002374 <_printf_float+0x3c0>
 80021b4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80021b8:	2200      	movs	r2, #0
 80021ba:	2300      	movs	r3, #0
 80021bc:	f7fe fc8c 	bl	8000ad8 <__aeabi_dcmpeq>
 80021c0:	2800      	cmp	r0, #0
 80021c2:	d034      	beq.n	800222e <_printf_float+0x27a>
 80021c4:	4a37      	ldr	r2, [pc, #220]	; (80022a4 <_printf_float+0x2f0>)
 80021c6:	2301      	movs	r3, #1
 80021c8:	4631      	mov	r1, r6
 80021ca:	4628      	mov	r0, r5
 80021cc:	47b8      	blx	r7
 80021ce:	3001      	adds	r0, #1
 80021d0:	f43f af51 	beq.w	8002076 <_printf_float+0xc2>
 80021d4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80021d8:	429a      	cmp	r2, r3
 80021da:	db02      	blt.n	80021e2 <_printf_float+0x22e>
 80021dc:	6823      	ldr	r3, [r4, #0]
 80021de:	07d8      	lsls	r0, r3, #31
 80021e0:	d510      	bpl.n	8002204 <_printf_float+0x250>
 80021e2:	ee18 3a10 	vmov	r3, s16
 80021e6:	4652      	mov	r2, sl
 80021e8:	4631      	mov	r1, r6
 80021ea:	4628      	mov	r0, r5
 80021ec:	47b8      	blx	r7
 80021ee:	3001      	adds	r0, #1
 80021f0:	f43f af41 	beq.w	8002076 <_printf_float+0xc2>
 80021f4:	f04f 0800 	mov.w	r8, #0
 80021f8:	f104 091a 	add.w	r9, r4, #26
 80021fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80021fe:	3b01      	subs	r3, #1
 8002200:	4543      	cmp	r3, r8
 8002202:	dc09      	bgt.n	8002218 <_printf_float+0x264>
 8002204:	6823      	ldr	r3, [r4, #0]
 8002206:	079b      	lsls	r3, r3, #30
 8002208:	f100 8105 	bmi.w	8002416 <_printf_float+0x462>
 800220c:	68e0      	ldr	r0, [r4, #12]
 800220e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002210:	4298      	cmp	r0, r3
 8002212:	bfb8      	it	lt
 8002214:	4618      	movlt	r0, r3
 8002216:	e730      	b.n	800207a <_printf_float+0xc6>
 8002218:	2301      	movs	r3, #1
 800221a:	464a      	mov	r2, r9
 800221c:	4631      	mov	r1, r6
 800221e:	4628      	mov	r0, r5
 8002220:	47b8      	blx	r7
 8002222:	3001      	adds	r0, #1
 8002224:	f43f af27 	beq.w	8002076 <_printf_float+0xc2>
 8002228:	f108 0801 	add.w	r8, r8, #1
 800222c:	e7e6      	b.n	80021fc <_printf_float+0x248>
 800222e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002230:	2b00      	cmp	r3, #0
 8002232:	dc39      	bgt.n	80022a8 <_printf_float+0x2f4>
 8002234:	4a1b      	ldr	r2, [pc, #108]	; (80022a4 <_printf_float+0x2f0>)
 8002236:	2301      	movs	r3, #1
 8002238:	4631      	mov	r1, r6
 800223a:	4628      	mov	r0, r5
 800223c:	47b8      	blx	r7
 800223e:	3001      	adds	r0, #1
 8002240:	f43f af19 	beq.w	8002076 <_printf_float+0xc2>
 8002244:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002248:	4313      	orrs	r3, r2
 800224a:	d102      	bne.n	8002252 <_printf_float+0x29e>
 800224c:	6823      	ldr	r3, [r4, #0]
 800224e:	07d9      	lsls	r1, r3, #31
 8002250:	d5d8      	bpl.n	8002204 <_printf_float+0x250>
 8002252:	ee18 3a10 	vmov	r3, s16
 8002256:	4652      	mov	r2, sl
 8002258:	4631      	mov	r1, r6
 800225a:	4628      	mov	r0, r5
 800225c:	47b8      	blx	r7
 800225e:	3001      	adds	r0, #1
 8002260:	f43f af09 	beq.w	8002076 <_printf_float+0xc2>
 8002264:	f04f 0900 	mov.w	r9, #0
 8002268:	f104 0a1a 	add.w	sl, r4, #26
 800226c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800226e:	425b      	negs	r3, r3
 8002270:	454b      	cmp	r3, r9
 8002272:	dc01      	bgt.n	8002278 <_printf_float+0x2c4>
 8002274:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002276:	e792      	b.n	800219e <_printf_float+0x1ea>
 8002278:	2301      	movs	r3, #1
 800227a:	4652      	mov	r2, sl
 800227c:	4631      	mov	r1, r6
 800227e:	4628      	mov	r0, r5
 8002280:	47b8      	blx	r7
 8002282:	3001      	adds	r0, #1
 8002284:	f43f aef7 	beq.w	8002076 <_printf_float+0xc2>
 8002288:	f109 0901 	add.w	r9, r9, #1
 800228c:	e7ee      	b.n	800226c <_printf_float+0x2b8>
 800228e:	bf00      	nop
 8002290:	7fefffff 	.word	0x7fefffff
 8002294:	0800681c 	.word	0x0800681c
 8002298:	08006820 	.word	0x08006820
 800229c:	08006828 	.word	0x08006828
 80022a0:	08006824 	.word	0x08006824
 80022a4:	0800682c 	.word	0x0800682c
 80022a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80022aa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80022ac:	429a      	cmp	r2, r3
 80022ae:	bfa8      	it	ge
 80022b0:	461a      	movge	r2, r3
 80022b2:	2a00      	cmp	r2, #0
 80022b4:	4691      	mov	r9, r2
 80022b6:	dc37      	bgt.n	8002328 <_printf_float+0x374>
 80022b8:	f04f 0b00 	mov.w	fp, #0
 80022bc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022c0:	f104 021a 	add.w	r2, r4, #26
 80022c4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80022c6:	9305      	str	r3, [sp, #20]
 80022c8:	eba3 0309 	sub.w	r3, r3, r9
 80022cc:	455b      	cmp	r3, fp
 80022ce:	dc33      	bgt.n	8002338 <_printf_float+0x384>
 80022d0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022d4:	429a      	cmp	r2, r3
 80022d6:	db3b      	blt.n	8002350 <_printf_float+0x39c>
 80022d8:	6823      	ldr	r3, [r4, #0]
 80022da:	07da      	lsls	r2, r3, #31
 80022dc:	d438      	bmi.n	8002350 <_printf_float+0x39c>
 80022de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80022e0:	9a05      	ldr	r2, [sp, #20]
 80022e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80022e4:	1a9a      	subs	r2, r3, r2
 80022e6:	eba3 0901 	sub.w	r9, r3, r1
 80022ea:	4591      	cmp	r9, r2
 80022ec:	bfa8      	it	ge
 80022ee:	4691      	movge	r9, r2
 80022f0:	f1b9 0f00 	cmp.w	r9, #0
 80022f4:	dc35      	bgt.n	8002362 <_printf_float+0x3ae>
 80022f6:	f04f 0800 	mov.w	r8, #0
 80022fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022fe:	f104 0a1a 	add.w	sl, r4, #26
 8002302:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002306:	1a9b      	subs	r3, r3, r2
 8002308:	eba3 0309 	sub.w	r3, r3, r9
 800230c:	4543      	cmp	r3, r8
 800230e:	f77f af79 	ble.w	8002204 <_printf_float+0x250>
 8002312:	2301      	movs	r3, #1
 8002314:	4652      	mov	r2, sl
 8002316:	4631      	mov	r1, r6
 8002318:	4628      	mov	r0, r5
 800231a:	47b8      	blx	r7
 800231c:	3001      	adds	r0, #1
 800231e:	f43f aeaa 	beq.w	8002076 <_printf_float+0xc2>
 8002322:	f108 0801 	add.w	r8, r8, #1
 8002326:	e7ec      	b.n	8002302 <_printf_float+0x34e>
 8002328:	4613      	mov	r3, r2
 800232a:	4631      	mov	r1, r6
 800232c:	4642      	mov	r2, r8
 800232e:	4628      	mov	r0, r5
 8002330:	47b8      	blx	r7
 8002332:	3001      	adds	r0, #1
 8002334:	d1c0      	bne.n	80022b8 <_printf_float+0x304>
 8002336:	e69e      	b.n	8002076 <_printf_float+0xc2>
 8002338:	2301      	movs	r3, #1
 800233a:	4631      	mov	r1, r6
 800233c:	4628      	mov	r0, r5
 800233e:	9205      	str	r2, [sp, #20]
 8002340:	47b8      	blx	r7
 8002342:	3001      	adds	r0, #1
 8002344:	f43f ae97 	beq.w	8002076 <_printf_float+0xc2>
 8002348:	9a05      	ldr	r2, [sp, #20]
 800234a:	f10b 0b01 	add.w	fp, fp, #1
 800234e:	e7b9      	b.n	80022c4 <_printf_float+0x310>
 8002350:	ee18 3a10 	vmov	r3, s16
 8002354:	4652      	mov	r2, sl
 8002356:	4631      	mov	r1, r6
 8002358:	4628      	mov	r0, r5
 800235a:	47b8      	blx	r7
 800235c:	3001      	adds	r0, #1
 800235e:	d1be      	bne.n	80022de <_printf_float+0x32a>
 8002360:	e689      	b.n	8002076 <_printf_float+0xc2>
 8002362:	9a05      	ldr	r2, [sp, #20]
 8002364:	464b      	mov	r3, r9
 8002366:	4442      	add	r2, r8
 8002368:	4631      	mov	r1, r6
 800236a:	4628      	mov	r0, r5
 800236c:	47b8      	blx	r7
 800236e:	3001      	adds	r0, #1
 8002370:	d1c1      	bne.n	80022f6 <_printf_float+0x342>
 8002372:	e680      	b.n	8002076 <_printf_float+0xc2>
 8002374:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002376:	2a01      	cmp	r2, #1
 8002378:	dc01      	bgt.n	800237e <_printf_float+0x3ca>
 800237a:	07db      	lsls	r3, r3, #31
 800237c:	d538      	bpl.n	80023f0 <_printf_float+0x43c>
 800237e:	2301      	movs	r3, #1
 8002380:	4642      	mov	r2, r8
 8002382:	4631      	mov	r1, r6
 8002384:	4628      	mov	r0, r5
 8002386:	47b8      	blx	r7
 8002388:	3001      	adds	r0, #1
 800238a:	f43f ae74 	beq.w	8002076 <_printf_float+0xc2>
 800238e:	ee18 3a10 	vmov	r3, s16
 8002392:	4652      	mov	r2, sl
 8002394:	4631      	mov	r1, r6
 8002396:	4628      	mov	r0, r5
 8002398:	47b8      	blx	r7
 800239a:	3001      	adds	r0, #1
 800239c:	f43f ae6b 	beq.w	8002076 <_printf_float+0xc2>
 80023a0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80023a4:	2200      	movs	r2, #0
 80023a6:	2300      	movs	r3, #0
 80023a8:	f7fe fb96 	bl	8000ad8 <__aeabi_dcmpeq>
 80023ac:	b9d8      	cbnz	r0, 80023e6 <_printf_float+0x432>
 80023ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80023b0:	f108 0201 	add.w	r2, r8, #1
 80023b4:	3b01      	subs	r3, #1
 80023b6:	4631      	mov	r1, r6
 80023b8:	4628      	mov	r0, r5
 80023ba:	47b8      	blx	r7
 80023bc:	3001      	adds	r0, #1
 80023be:	d10e      	bne.n	80023de <_printf_float+0x42a>
 80023c0:	e659      	b.n	8002076 <_printf_float+0xc2>
 80023c2:	2301      	movs	r3, #1
 80023c4:	4652      	mov	r2, sl
 80023c6:	4631      	mov	r1, r6
 80023c8:	4628      	mov	r0, r5
 80023ca:	47b8      	blx	r7
 80023cc:	3001      	adds	r0, #1
 80023ce:	f43f ae52 	beq.w	8002076 <_printf_float+0xc2>
 80023d2:	f108 0801 	add.w	r8, r8, #1
 80023d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80023d8:	3b01      	subs	r3, #1
 80023da:	4543      	cmp	r3, r8
 80023dc:	dcf1      	bgt.n	80023c2 <_printf_float+0x40e>
 80023de:	464b      	mov	r3, r9
 80023e0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80023e4:	e6dc      	b.n	80021a0 <_printf_float+0x1ec>
 80023e6:	f04f 0800 	mov.w	r8, #0
 80023ea:	f104 0a1a 	add.w	sl, r4, #26
 80023ee:	e7f2      	b.n	80023d6 <_printf_float+0x422>
 80023f0:	2301      	movs	r3, #1
 80023f2:	4642      	mov	r2, r8
 80023f4:	e7df      	b.n	80023b6 <_printf_float+0x402>
 80023f6:	2301      	movs	r3, #1
 80023f8:	464a      	mov	r2, r9
 80023fa:	4631      	mov	r1, r6
 80023fc:	4628      	mov	r0, r5
 80023fe:	47b8      	blx	r7
 8002400:	3001      	adds	r0, #1
 8002402:	f43f ae38 	beq.w	8002076 <_printf_float+0xc2>
 8002406:	f108 0801 	add.w	r8, r8, #1
 800240a:	68e3      	ldr	r3, [r4, #12]
 800240c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800240e:	1a5b      	subs	r3, r3, r1
 8002410:	4543      	cmp	r3, r8
 8002412:	dcf0      	bgt.n	80023f6 <_printf_float+0x442>
 8002414:	e6fa      	b.n	800220c <_printf_float+0x258>
 8002416:	f04f 0800 	mov.w	r8, #0
 800241a:	f104 0919 	add.w	r9, r4, #25
 800241e:	e7f4      	b.n	800240a <_printf_float+0x456>

08002420 <_printf_common>:
 8002420:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002424:	4616      	mov	r6, r2
 8002426:	4699      	mov	r9, r3
 8002428:	688a      	ldr	r2, [r1, #8]
 800242a:	690b      	ldr	r3, [r1, #16]
 800242c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002430:	4293      	cmp	r3, r2
 8002432:	bfb8      	it	lt
 8002434:	4613      	movlt	r3, r2
 8002436:	6033      	str	r3, [r6, #0]
 8002438:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800243c:	4607      	mov	r7, r0
 800243e:	460c      	mov	r4, r1
 8002440:	b10a      	cbz	r2, 8002446 <_printf_common+0x26>
 8002442:	3301      	adds	r3, #1
 8002444:	6033      	str	r3, [r6, #0]
 8002446:	6823      	ldr	r3, [r4, #0]
 8002448:	0699      	lsls	r1, r3, #26
 800244a:	bf42      	ittt	mi
 800244c:	6833      	ldrmi	r3, [r6, #0]
 800244e:	3302      	addmi	r3, #2
 8002450:	6033      	strmi	r3, [r6, #0]
 8002452:	6825      	ldr	r5, [r4, #0]
 8002454:	f015 0506 	ands.w	r5, r5, #6
 8002458:	d106      	bne.n	8002468 <_printf_common+0x48>
 800245a:	f104 0a19 	add.w	sl, r4, #25
 800245e:	68e3      	ldr	r3, [r4, #12]
 8002460:	6832      	ldr	r2, [r6, #0]
 8002462:	1a9b      	subs	r3, r3, r2
 8002464:	42ab      	cmp	r3, r5
 8002466:	dc26      	bgt.n	80024b6 <_printf_common+0x96>
 8002468:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800246c:	1e13      	subs	r3, r2, #0
 800246e:	6822      	ldr	r2, [r4, #0]
 8002470:	bf18      	it	ne
 8002472:	2301      	movne	r3, #1
 8002474:	0692      	lsls	r2, r2, #26
 8002476:	d42b      	bmi.n	80024d0 <_printf_common+0xb0>
 8002478:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800247c:	4649      	mov	r1, r9
 800247e:	4638      	mov	r0, r7
 8002480:	47c0      	blx	r8
 8002482:	3001      	adds	r0, #1
 8002484:	d01e      	beq.n	80024c4 <_printf_common+0xa4>
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	68e5      	ldr	r5, [r4, #12]
 800248a:	6832      	ldr	r2, [r6, #0]
 800248c:	f003 0306 	and.w	r3, r3, #6
 8002490:	2b04      	cmp	r3, #4
 8002492:	bf08      	it	eq
 8002494:	1aad      	subeq	r5, r5, r2
 8002496:	68a3      	ldr	r3, [r4, #8]
 8002498:	6922      	ldr	r2, [r4, #16]
 800249a:	bf0c      	ite	eq
 800249c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80024a0:	2500      	movne	r5, #0
 80024a2:	4293      	cmp	r3, r2
 80024a4:	bfc4      	itt	gt
 80024a6:	1a9b      	subgt	r3, r3, r2
 80024a8:	18ed      	addgt	r5, r5, r3
 80024aa:	2600      	movs	r6, #0
 80024ac:	341a      	adds	r4, #26
 80024ae:	42b5      	cmp	r5, r6
 80024b0:	d11a      	bne.n	80024e8 <_printf_common+0xc8>
 80024b2:	2000      	movs	r0, #0
 80024b4:	e008      	b.n	80024c8 <_printf_common+0xa8>
 80024b6:	2301      	movs	r3, #1
 80024b8:	4652      	mov	r2, sl
 80024ba:	4649      	mov	r1, r9
 80024bc:	4638      	mov	r0, r7
 80024be:	47c0      	blx	r8
 80024c0:	3001      	adds	r0, #1
 80024c2:	d103      	bne.n	80024cc <_printf_common+0xac>
 80024c4:	f04f 30ff 	mov.w	r0, #4294967295
 80024c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024cc:	3501      	adds	r5, #1
 80024ce:	e7c6      	b.n	800245e <_printf_common+0x3e>
 80024d0:	18e1      	adds	r1, r4, r3
 80024d2:	1c5a      	adds	r2, r3, #1
 80024d4:	2030      	movs	r0, #48	; 0x30
 80024d6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80024da:	4422      	add	r2, r4
 80024dc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80024e0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80024e4:	3302      	adds	r3, #2
 80024e6:	e7c7      	b.n	8002478 <_printf_common+0x58>
 80024e8:	2301      	movs	r3, #1
 80024ea:	4622      	mov	r2, r4
 80024ec:	4649      	mov	r1, r9
 80024ee:	4638      	mov	r0, r7
 80024f0:	47c0      	blx	r8
 80024f2:	3001      	adds	r0, #1
 80024f4:	d0e6      	beq.n	80024c4 <_printf_common+0xa4>
 80024f6:	3601      	adds	r6, #1
 80024f8:	e7d9      	b.n	80024ae <_printf_common+0x8e>
	...

080024fc <_printf_i>:
 80024fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002500:	7e0f      	ldrb	r7, [r1, #24]
 8002502:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002504:	2f78      	cmp	r7, #120	; 0x78
 8002506:	4691      	mov	r9, r2
 8002508:	4680      	mov	r8, r0
 800250a:	460c      	mov	r4, r1
 800250c:	469a      	mov	sl, r3
 800250e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002512:	d807      	bhi.n	8002524 <_printf_i+0x28>
 8002514:	2f62      	cmp	r7, #98	; 0x62
 8002516:	d80a      	bhi.n	800252e <_printf_i+0x32>
 8002518:	2f00      	cmp	r7, #0
 800251a:	f000 80d8 	beq.w	80026ce <_printf_i+0x1d2>
 800251e:	2f58      	cmp	r7, #88	; 0x58
 8002520:	f000 80a3 	beq.w	800266a <_printf_i+0x16e>
 8002524:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002528:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800252c:	e03a      	b.n	80025a4 <_printf_i+0xa8>
 800252e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002532:	2b15      	cmp	r3, #21
 8002534:	d8f6      	bhi.n	8002524 <_printf_i+0x28>
 8002536:	a101      	add	r1, pc, #4	; (adr r1, 800253c <_printf_i+0x40>)
 8002538:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800253c:	08002595 	.word	0x08002595
 8002540:	080025a9 	.word	0x080025a9
 8002544:	08002525 	.word	0x08002525
 8002548:	08002525 	.word	0x08002525
 800254c:	08002525 	.word	0x08002525
 8002550:	08002525 	.word	0x08002525
 8002554:	080025a9 	.word	0x080025a9
 8002558:	08002525 	.word	0x08002525
 800255c:	08002525 	.word	0x08002525
 8002560:	08002525 	.word	0x08002525
 8002564:	08002525 	.word	0x08002525
 8002568:	080026b5 	.word	0x080026b5
 800256c:	080025d9 	.word	0x080025d9
 8002570:	08002697 	.word	0x08002697
 8002574:	08002525 	.word	0x08002525
 8002578:	08002525 	.word	0x08002525
 800257c:	080026d7 	.word	0x080026d7
 8002580:	08002525 	.word	0x08002525
 8002584:	080025d9 	.word	0x080025d9
 8002588:	08002525 	.word	0x08002525
 800258c:	08002525 	.word	0x08002525
 8002590:	0800269f 	.word	0x0800269f
 8002594:	682b      	ldr	r3, [r5, #0]
 8002596:	1d1a      	adds	r2, r3, #4
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	602a      	str	r2, [r5, #0]
 800259c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80025a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80025a4:	2301      	movs	r3, #1
 80025a6:	e0a3      	b.n	80026f0 <_printf_i+0x1f4>
 80025a8:	6820      	ldr	r0, [r4, #0]
 80025aa:	6829      	ldr	r1, [r5, #0]
 80025ac:	0606      	lsls	r6, r0, #24
 80025ae:	f101 0304 	add.w	r3, r1, #4
 80025b2:	d50a      	bpl.n	80025ca <_printf_i+0xce>
 80025b4:	680e      	ldr	r6, [r1, #0]
 80025b6:	602b      	str	r3, [r5, #0]
 80025b8:	2e00      	cmp	r6, #0
 80025ba:	da03      	bge.n	80025c4 <_printf_i+0xc8>
 80025bc:	232d      	movs	r3, #45	; 0x2d
 80025be:	4276      	negs	r6, r6
 80025c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80025c4:	485e      	ldr	r0, [pc, #376]	; (8002740 <_printf_i+0x244>)
 80025c6:	230a      	movs	r3, #10
 80025c8:	e019      	b.n	80025fe <_printf_i+0x102>
 80025ca:	680e      	ldr	r6, [r1, #0]
 80025cc:	602b      	str	r3, [r5, #0]
 80025ce:	f010 0f40 	tst.w	r0, #64	; 0x40
 80025d2:	bf18      	it	ne
 80025d4:	b236      	sxthne	r6, r6
 80025d6:	e7ef      	b.n	80025b8 <_printf_i+0xbc>
 80025d8:	682b      	ldr	r3, [r5, #0]
 80025da:	6820      	ldr	r0, [r4, #0]
 80025dc:	1d19      	adds	r1, r3, #4
 80025de:	6029      	str	r1, [r5, #0]
 80025e0:	0601      	lsls	r1, r0, #24
 80025e2:	d501      	bpl.n	80025e8 <_printf_i+0xec>
 80025e4:	681e      	ldr	r6, [r3, #0]
 80025e6:	e002      	b.n	80025ee <_printf_i+0xf2>
 80025e8:	0646      	lsls	r6, r0, #25
 80025ea:	d5fb      	bpl.n	80025e4 <_printf_i+0xe8>
 80025ec:	881e      	ldrh	r6, [r3, #0]
 80025ee:	4854      	ldr	r0, [pc, #336]	; (8002740 <_printf_i+0x244>)
 80025f0:	2f6f      	cmp	r7, #111	; 0x6f
 80025f2:	bf0c      	ite	eq
 80025f4:	2308      	moveq	r3, #8
 80025f6:	230a      	movne	r3, #10
 80025f8:	2100      	movs	r1, #0
 80025fa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80025fe:	6865      	ldr	r5, [r4, #4]
 8002600:	60a5      	str	r5, [r4, #8]
 8002602:	2d00      	cmp	r5, #0
 8002604:	bfa2      	ittt	ge
 8002606:	6821      	ldrge	r1, [r4, #0]
 8002608:	f021 0104 	bicge.w	r1, r1, #4
 800260c:	6021      	strge	r1, [r4, #0]
 800260e:	b90e      	cbnz	r6, 8002614 <_printf_i+0x118>
 8002610:	2d00      	cmp	r5, #0
 8002612:	d04d      	beq.n	80026b0 <_printf_i+0x1b4>
 8002614:	4615      	mov	r5, r2
 8002616:	fbb6 f1f3 	udiv	r1, r6, r3
 800261a:	fb03 6711 	mls	r7, r3, r1, r6
 800261e:	5dc7      	ldrb	r7, [r0, r7]
 8002620:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002624:	4637      	mov	r7, r6
 8002626:	42bb      	cmp	r3, r7
 8002628:	460e      	mov	r6, r1
 800262a:	d9f4      	bls.n	8002616 <_printf_i+0x11a>
 800262c:	2b08      	cmp	r3, #8
 800262e:	d10b      	bne.n	8002648 <_printf_i+0x14c>
 8002630:	6823      	ldr	r3, [r4, #0]
 8002632:	07de      	lsls	r6, r3, #31
 8002634:	d508      	bpl.n	8002648 <_printf_i+0x14c>
 8002636:	6923      	ldr	r3, [r4, #16]
 8002638:	6861      	ldr	r1, [r4, #4]
 800263a:	4299      	cmp	r1, r3
 800263c:	bfde      	ittt	le
 800263e:	2330      	movle	r3, #48	; 0x30
 8002640:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002644:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002648:	1b52      	subs	r2, r2, r5
 800264a:	6122      	str	r2, [r4, #16]
 800264c:	f8cd a000 	str.w	sl, [sp]
 8002650:	464b      	mov	r3, r9
 8002652:	aa03      	add	r2, sp, #12
 8002654:	4621      	mov	r1, r4
 8002656:	4640      	mov	r0, r8
 8002658:	f7ff fee2 	bl	8002420 <_printf_common>
 800265c:	3001      	adds	r0, #1
 800265e:	d14c      	bne.n	80026fa <_printf_i+0x1fe>
 8002660:	f04f 30ff 	mov.w	r0, #4294967295
 8002664:	b004      	add	sp, #16
 8002666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800266a:	4835      	ldr	r0, [pc, #212]	; (8002740 <_printf_i+0x244>)
 800266c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002670:	6829      	ldr	r1, [r5, #0]
 8002672:	6823      	ldr	r3, [r4, #0]
 8002674:	f851 6b04 	ldr.w	r6, [r1], #4
 8002678:	6029      	str	r1, [r5, #0]
 800267a:	061d      	lsls	r5, r3, #24
 800267c:	d514      	bpl.n	80026a8 <_printf_i+0x1ac>
 800267e:	07df      	lsls	r7, r3, #31
 8002680:	bf44      	itt	mi
 8002682:	f043 0320 	orrmi.w	r3, r3, #32
 8002686:	6023      	strmi	r3, [r4, #0]
 8002688:	b91e      	cbnz	r6, 8002692 <_printf_i+0x196>
 800268a:	6823      	ldr	r3, [r4, #0]
 800268c:	f023 0320 	bic.w	r3, r3, #32
 8002690:	6023      	str	r3, [r4, #0]
 8002692:	2310      	movs	r3, #16
 8002694:	e7b0      	b.n	80025f8 <_printf_i+0xfc>
 8002696:	6823      	ldr	r3, [r4, #0]
 8002698:	f043 0320 	orr.w	r3, r3, #32
 800269c:	6023      	str	r3, [r4, #0]
 800269e:	2378      	movs	r3, #120	; 0x78
 80026a0:	4828      	ldr	r0, [pc, #160]	; (8002744 <_printf_i+0x248>)
 80026a2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80026a6:	e7e3      	b.n	8002670 <_printf_i+0x174>
 80026a8:	0659      	lsls	r1, r3, #25
 80026aa:	bf48      	it	mi
 80026ac:	b2b6      	uxthmi	r6, r6
 80026ae:	e7e6      	b.n	800267e <_printf_i+0x182>
 80026b0:	4615      	mov	r5, r2
 80026b2:	e7bb      	b.n	800262c <_printf_i+0x130>
 80026b4:	682b      	ldr	r3, [r5, #0]
 80026b6:	6826      	ldr	r6, [r4, #0]
 80026b8:	6961      	ldr	r1, [r4, #20]
 80026ba:	1d18      	adds	r0, r3, #4
 80026bc:	6028      	str	r0, [r5, #0]
 80026be:	0635      	lsls	r5, r6, #24
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	d501      	bpl.n	80026c8 <_printf_i+0x1cc>
 80026c4:	6019      	str	r1, [r3, #0]
 80026c6:	e002      	b.n	80026ce <_printf_i+0x1d2>
 80026c8:	0670      	lsls	r0, r6, #25
 80026ca:	d5fb      	bpl.n	80026c4 <_printf_i+0x1c8>
 80026cc:	8019      	strh	r1, [r3, #0]
 80026ce:	2300      	movs	r3, #0
 80026d0:	6123      	str	r3, [r4, #16]
 80026d2:	4615      	mov	r5, r2
 80026d4:	e7ba      	b.n	800264c <_printf_i+0x150>
 80026d6:	682b      	ldr	r3, [r5, #0]
 80026d8:	1d1a      	adds	r2, r3, #4
 80026da:	602a      	str	r2, [r5, #0]
 80026dc:	681d      	ldr	r5, [r3, #0]
 80026de:	6862      	ldr	r2, [r4, #4]
 80026e0:	2100      	movs	r1, #0
 80026e2:	4628      	mov	r0, r5
 80026e4:	f7fd fd84 	bl	80001f0 <memchr>
 80026e8:	b108      	cbz	r0, 80026ee <_printf_i+0x1f2>
 80026ea:	1b40      	subs	r0, r0, r5
 80026ec:	6060      	str	r0, [r4, #4]
 80026ee:	6863      	ldr	r3, [r4, #4]
 80026f0:	6123      	str	r3, [r4, #16]
 80026f2:	2300      	movs	r3, #0
 80026f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80026f8:	e7a8      	b.n	800264c <_printf_i+0x150>
 80026fa:	6923      	ldr	r3, [r4, #16]
 80026fc:	462a      	mov	r2, r5
 80026fe:	4649      	mov	r1, r9
 8002700:	4640      	mov	r0, r8
 8002702:	47d0      	blx	sl
 8002704:	3001      	adds	r0, #1
 8002706:	d0ab      	beq.n	8002660 <_printf_i+0x164>
 8002708:	6823      	ldr	r3, [r4, #0]
 800270a:	079b      	lsls	r3, r3, #30
 800270c:	d413      	bmi.n	8002736 <_printf_i+0x23a>
 800270e:	68e0      	ldr	r0, [r4, #12]
 8002710:	9b03      	ldr	r3, [sp, #12]
 8002712:	4298      	cmp	r0, r3
 8002714:	bfb8      	it	lt
 8002716:	4618      	movlt	r0, r3
 8002718:	e7a4      	b.n	8002664 <_printf_i+0x168>
 800271a:	2301      	movs	r3, #1
 800271c:	4632      	mov	r2, r6
 800271e:	4649      	mov	r1, r9
 8002720:	4640      	mov	r0, r8
 8002722:	47d0      	blx	sl
 8002724:	3001      	adds	r0, #1
 8002726:	d09b      	beq.n	8002660 <_printf_i+0x164>
 8002728:	3501      	adds	r5, #1
 800272a:	68e3      	ldr	r3, [r4, #12]
 800272c:	9903      	ldr	r1, [sp, #12]
 800272e:	1a5b      	subs	r3, r3, r1
 8002730:	42ab      	cmp	r3, r5
 8002732:	dcf2      	bgt.n	800271a <_printf_i+0x21e>
 8002734:	e7eb      	b.n	800270e <_printf_i+0x212>
 8002736:	2500      	movs	r5, #0
 8002738:	f104 0619 	add.w	r6, r4, #25
 800273c:	e7f5      	b.n	800272a <_printf_i+0x22e>
 800273e:	bf00      	nop
 8002740:	0800682e 	.word	0x0800682e
 8002744:	0800683f 	.word	0x0800683f

08002748 <_scanf_float>:
 8002748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800274c:	b087      	sub	sp, #28
 800274e:	4617      	mov	r7, r2
 8002750:	9303      	str	r3, [sp, #12]
 8002752:	688b      	ldr	r3, [r1, #8]
 8002754:	1e5a      	subs	r2, r3, #1
 8002756:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800275a:	bf83      	ittte	hi
 800275c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002760:	195b      	addhi	r3, r3, r5
 8002762:	9302      	strhi	r3, [sp, #8]
 8002764:	2300      	movls	r3, #0
 8002766:	bf86      	itte	hi
 8002768:	f240 135d 	movwhi	r3, #349	; 0x15d
 800276c:	608b      	strhi	r3, [r1, #8]
 800276e:	9302      	strls	r3, [sp, #8]
 8002770:	680b      	ldr	r3, [r1, #0]
 8002772:	468b      	mov	fp, r1
 8002774:	2500      	movs	r5, #0
 8002776:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800277a:	f84b 3b1c 	str.w	r3, [fp], #28
 800277e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002782:	4680      	mov	r8, r0
 8002784:	460c      	mov	r4, r1
 8002786:	465e      	mov	r6, fp
 8002788:	46aa      	mov	sl, r5
 800278a:	46a9      	mov	r9, r5
 800278c:	9501      	str	r5, [sp, #4]
 800278e:	68a2      	ldr	r2, [r4, #8]
 8002790:	b152      	cbz	r2, 80027a8 <_scanf_float+0x60>
 8002792:	683b      	ldr	r3, [r7, #0]
 8002794:	781b      	ldrb	r3, [r3, #0]
 8002796:	2b4e      	cmp	r3, #78	; 0x4e
 8002798:	d864      	bhi.n	8002864 <_scanf_float+0x11c>
 800279a:	2b40      	cmp	r3, #64	; 0x40
 800279c:	d83c      	bhi.n	8002818 <_scanf_float+0xd0>
 800279e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80027a2:	b2c8      	uxtb	r0, r1
 80027a4:	280e      	cmp	r0, #14
 80027a6:	d93a      	bls.n	800281e <_scanf_float+0xd6>
 80027a8:	f1b9 0f00 	cmp.w	r9, #0
 80027ac:	d003      	beq.n	80027b6 <_scanf_float+0x6e>
 80027ae:	6823      	ldr	r3, [r4, #0]
 80027b0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80027b4:	6023      	str	r3, [r4, #0]
 80027b6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80027ba:	f1ba 0f01 	cmp.w	sl, #1
 80027be:	f200 8113 	bhi.w	80029e8 <_scanf_float+0x2a0>
 80027c2:	455e      	cmp	r6, fp
 80027c4:	f200 8105 	bhi.w	80029d2 <_scanf_float+0x28a>
 80027c8:	2501      	movs	r5, #1
 80027ca:	4628      	mov	r0, r5
 80027cc:	b007      	add	sp, #28
 80027ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027d2:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80027d6:	2a0d      	cmp	r2, #13
 80027d8:	d8e6      	bhi.n	80027a8 <_scanf_float+0x60>
 80027da:	a101      	add	r1, pc, #4	; (adr r1, 80027e0 <_scanf_float+0x98>)
 80027dc:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80027e0:	0800291f 	.word	0x0800291f
 80027e4:	080027a9 	.word	0x080027a9
 80027e8:	080027a9 	.word	0x080027a9
 80027ec:	080027a9 	.word	0x080027a9
 80027f0:	0800297f 	.word	0x0800297f
 80027f4:	08002957 	.word	0x08002957
 80027f8:	080027a9 	.word	0x080027a9
 80027fc:	080027a9 	.word	0x080027a9
 8002800:	0800292d 	.word	0x0800292d
 8002804:	080027a9 	.word	0x080027a9
 8002808:	080027a9 	.word	0x080027a9
 800280c:	080027a9 	.word	0x080027a9
 8002810:	080027a9 	.word	0x080027a9
 8002814:	080028e5 	.word	0x080028e5
 8002818:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800281c:	e7db      	b.n	80027d6 <_scanf_float+0x8e>
 800281e:	290e      	cmp	r1, #14
 8002820:	d8c2      	bhi.n	80027a8 <_scanf_float+0x60>
 8002822:	a001      	add	r0, pc, #4	; (adr r0, 8002828 <_scanf_float+0xe0>)
 8002824:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002828:	080028d7 	.word	0x080028d7
 800282c:	080027a9 	.word	0x080027a9
 8002830:	080028d7 	.word	0x080028d7
 8002834:	0800296b 	.word	0x0800296b
 8002838:	080027a9 	.word	0x080027a9
 800283c:	08002885 	.word	0x08002885
 8002840:	080028c1 	.word	0x080028c1
 8002844:	080028c1 	.word	0x080028c1
 8002848:	080028c1 	.word	0x080028c1
 800284c:	080028c1 	.word	0x080028c1
 8002850:	080028c1 	.word	0x080028c1
 8002854:	080028c1 	.word	0x080028c1
 8002858:	080028c1 	.word	0x080028c1
 800285c:	080028c1 	.word	0x080028c1
 8002860:	080028c1 	.word	0x080028c1
 8002864:	2b6e      	cmp	r3, #110	; 0x6e
 8002866:	d809      	bhi.n	800287c <_scanf_float+0x134>
 8002868:	2b60      	cmp	r3, #96	; 0x60
 800286a:	d8b2      	bhi.n	80027d2 <_scanf_float+0x8a>
 800286c:	2b54      	cmp	r3, #84	; 0x54
 800286e:	d077      	beq.n	8002960 <_scanf_float+0x218>
 8002870:	2b59      	cmp	r3, #89	; 0x59
 8002872:	d199      	bne.n	80027a8 <_scanf_float+0x60>
 8002874:	2d07      	cmp	r5, #7
 8002876:	d197      	bne.n	80027a8 <_scanf_float+0x60>
 8002878:	2508      	movs	r5, #8
 800287a:	e029      	b.n	80028d0 <_scanf_float+0x188>
 800287c:	2b74      	cmp	r3, #116	; 0x74
 800287e:	d06f      	beq.n	8002960 <_scanf_float+0x218>
 8002880:	2b79      	cmp	r3, #121	; 0x79
 8002882:	e7f6      	b.n	8002872 <_scanf_float+0x12a>
 8002884:	6821      	ldr	r1, [r4, #0]
 8002886:	05c8      	lsls	r0, r1, #23
 8002888:	d51a      	bpl.n	80028c0 <_scanf_float+0x178>
 800288a:	9b02      	ldr	r3, [sp, #8]
 800288c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002890:	6021      	str	r1, [r4, #0]
 8002892:	f109 0901 	add.w	r9, r9, #1
 8002896:	b11b      	cbz	r3, 80028a0 <_scanf_float+0x158>
 8002898:	3b01      	subs	r3, #1
 800289a:	3201      	adds	r2, #1
 800289c:	9302      	str	r3, [sp, #8]
 800289e:	60a2      	str	r2, [r4, #8]
 80028a0:	68a3      	ldr	r3, [r4, #8]
 80028a2:	3b01      	subs	r3, #1
 80028a4:	60a3      	str	r3, [r4, #8]
 80028a6:	6923      	ldr	r3, [r4, #16]
 80028a8:	3301      	adds	r3, #1
 80028aa:	6123      	str	r3, [r4, #16]
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	3b01      	subs	r3, #1
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	607b      	str	r3, [r7, #4]
 80028b4:	f340 8084 	ble.w	80029c0 <_scanf_float+0x278>
 80028b8:	683b      	ldr	r3, [r7, #0]
 80028ba:	3301      	adds	r3, #1
 80028bc:	603b      	str	r3, [r7, #0]
 80028be:	e766      	b.n	800278e <_scanf_float+0x46>
 80028c0:	eb1a 0f05 	cmn.w	sl, r5
 80028c4:	f47f af70 	bne.w	80027a8 <_scanf_float+0x60>
 80028c8:	6822      	ldr	r2, [r4, #0]
 80028ca:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80028ce:	6022      	str	r2, [r4, #0]
 80028d0:	f806 3b01 	strb.w	r3, [r6], #1
 80028d4:	e7e4      	b.n	80028a0 <_scanf_float+0x158>
 80028d6:	6822      	ldr	r2, [r4, #0]
 80028d8:	0610      	lsls	r0, r2, #24
 80028da:	f57f af65 	bpl.w	80027a8 <_scanf_float+0x60>
 80028de:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80028e2:	e7f4      	b.n	80028ce <_scanf_float+0x186>
 80028e4:	f1ba 0f00 	cmp.w	sl, #0
 80028e8:	d10e      	bne.n	8002908 <_scanf_float+0x1c0>
 80028ea:	f1b9 0f00 	cmp.w	r9, #0
 80028ee:	d10e      	bne.n	800290e <_scanf_float+0x1c6>
 80028f0:	6822      	ldr	r2, [r4, #0]
 80028f2:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80028f6:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80028fa:	d108      	bne.n	800290e <_scanf_float+0x1c6>
 80028fc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002900:	6022      	str	r2, [r4, #0]
 8002902:	f04f 0a01 	mov.w	sl, #1
 8002906:	e7e3      	b.n	80028d0 <_scanf_float+0x188>
 8002908:	f1ba 0f02 	cmp.w	sl, #2
 800290c:	d055      	beq.n	80029ba <_scanf_float+0x272>
 800290e:	2d01      	cmp	r5, #1
 8002910:	d002      	beq.n	8002918 <_scanf_float+0x1d0>
 8002912:	2d04      	cmp	r5, #4
 8002914:	f47f af48 	bne.w	80027a8 <_scanf_float+0x60>
 8002918:	3501      	adds	r5, #1
 800291a:	b2ed      	uxtb	r5, r5
 800291c:	e7d8      	b.n	80028d0 <_scanf_float+0x188>
 800291e:	f1ba 0f01 	cmp.w	sl, #1
 8002922:	f47f af41 	bne.w	80027a8 <_scanf_float+0x60>
 8002926:	f04f 0a02 	mov.w	sl, #2
 800292a:	e7d1      	b.n	80028d0 <_scanf_float+0x188>
 800292c:	b97d      	cbnz	r5, 800294e <_scanf_float+0x206>
 800292e:	f1b9 0f00 	cmp.w	r9, #0
 8002932:	f47f af3c 	bne.w	80027ae <_scanf_float+0x66>
 8002936:	6822      	ldr	r2, [r4, #0]
 8002938:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800293c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002940:	f47f af39 	bne.w	80027b6 <_scanf_float+0x6e>
 8002944:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002948:	6022      	str	r2, [r4, #0]
 800294a:	2501      	movs	r5, #1
 800294c:	e7c0      	b.n	80028d0 <_scanf_float+0x188>
 800294e:	2d03      	cmp	r5, #3
 8002950:	d0e2      	beq.n	8002918 <_scanf_float+0x1d0>
 8002952:	2d05      	cmp	r5, #5
 8002954:	e7de      	b.n	8002914 <_scanf_float+0x1cc>
 8002956:	2d02      	cmp	r5, #2
 8002958:	f47f af26 	bne.w	80027a8 <_scanf_float+0x60>
 800295c:	2503      	movs	r5, #3
 800295e:	e7b7      	b.n	80028d0 <_scanf_float+0x188>
 8002960:	2d06      	cmp	r5, #6
 8002962:	f47f af21 	bne.w	80027a8 <_scanf_float+0x60>
 8002966:	2507      	movs	r5, #7
 8002968:	e7b2      	b.n	80028d0 <_scanf_float+0x188>
 800296a:	6822      	ldr	r2, [r4, #0]
 800296c:	0591      	lsls	r1, r2, #22
 800296e:	f57f af1b 	bpl.w	80027a8 <_scanf_float+0x60>
 8002972:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002976:	6022      	str	r2, [r4, #0]
 8002978:	f8cd 9004 	str.w	r9, [sp, #4]
 800297c:	e7a8      	b.n	80028d0 <_scanf_float+0x188>
 800297e:	6822      	ldr	r2, [r4, #0]
 8002980:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002984:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002988:	d006      	beq.n	8002998 <_scanf_float+0x250>
 800298a:	0550      	lsls	r0, r2, #21
 800298c:	f57f af0c 	bpl.w	80027a8 <_scanf_float+0x60>
 8002990:	f1b9 0f00 	cmp.w	r9, #0
 8002994:	f43f af0f 	beq.w	80027b6 <_scanf_float+0x6e>
 8002998:	0591      	lsls	r1, r2, #22
 800299a:	bf58      	it	pl
 800299c:	9901      	ldrpl	r1, [sp, #4]
 800299e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80029a2:	bf58      	it	pl
 80029a4:	eba9 0101 	subpl.w	r1, r9, r1
 80029a8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80029ac:	bf58      	it	pl
 80029ae:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80029b2:	6022      	str	r2, [r4, #0]
 80029b4:	f04f 0900 	mov.w	r9, #0
 80029b8:	e78a      	b.n	80028d0 <_scanf_float+0x188>
 80029ba:	f04f 0a03 	mov.w	sl, #3
 80029be:	e787      	b.n	80028d0 <_scanf_float+0x188>
 80029c0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80029c4:	4639      	mov	r1, r7
 80029c6:	4640      	mov	r0, r8
 80029c8:	4798      	blx	r3
 80029ca:	2800      	cmp	r0, #0
 80029cc:	f43f aedf 	beq.w	800278e <_scanf_float+0x46>
 80029d0:	e6ea      	b.n	80027a8 <_scanf_float+0x60>
 80029d2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029d6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029da:	463a      	mov	r2, r7
 80029dc:	4640      	mov	r0, r8
 80029de:	4798      	blx	r3
 80029e0:	6923      	ldr	r3, [r4, #16]
 80029e2:	3b01      	subs	r3, #1
 80029e4:	6123      	str	r3, [r4, #16]
 80029e6:	e6ec      	b.n	80027c2 <_scanf_float+0x7a>
 80029e8:	1e6b      	subs	r3, r5, #1
 80029ea:	2b06      	cmp	r3, #6
 80029ec:	d825      	bhi.n	8002a3a <_scanf_float+0x2f2>
 80029ee:	2d02      	cmp	r5, #2
 80029f0:	d836      	bhi.n	8002a60 <_scanf_float+0x318>
 80029f2:	455e      	cmp	r6, fp
 80029f4:	f67f aee8 	bls.w	80027c8 <_scanf_float+0x80>
 80029f8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029fc:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a00:	463a      	mov	r2, r7
 8002a02:	4640      	mov	r0, r8
 8002a04:	4798      	blx	r3
 8002a06:	6923      	ldr	r3, [r4, #16]
 8002a08:	3b01      	subs	r3, #1
 8002a0a:	6123      	str	r3, [r4, #16]
 8002a0c:	e7f1      	b.n	80029f2 <_scanf_float+0x2aa>
 8002a0e:	9802      	ldr	r0, [sp, #8]
 8002a10:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a14:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002a18:	9002      	str	r0, [sp, #8]
 8002a1a:	463a      	mov	r2, r7
 8002a1c:	4640      	mov	r0, r8
 8002a1e:	4798      	blx	r3
 8002a20:	6923      	ldr	r3, [r4, #16]
 8002a22:	3b01      	subs	r3, #1
 8002a24:	6123      	str	r3, [r4, #16]
 8002a26:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a2a:	fa5f fa8a 	uxtb.w	sl, sl
 8002a2e:	f1ba 0f02 	cmp.w	sl, #2
 8002a32:	d1ec      	bne.n	8002a0e <_scanf_float+0x2c6>
 8002a34:	3d03      	subs	r5, #3
 8002a36:	b2ed      	uxtb	r5, r5
 8002a38:	1b76      	subs	r6, r6, r5
 8002a3a:	6823      	ldr	r3, [r4, #0]
 8002a3c:	05da      	lsls	r2, r3, #23
 8002a3e:	d52f      	bpl.n	8002aa0 <_scanf_float+0x358>
 8002a40:	055b      	lsls	r3, r3, #21
 8002a42:	d510      	bpl.n	8002a66 <_scanf_float+0x31e>
 8002a44:	455e      	cmp	r6, fp
 8002a46:	f67f aebf 	bls.w	80027c8 <_scanf_float+0x80>
 8002a4a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a4e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a52:	463a      	mov	r2, r7
 8002a54:	4640      	mov	r0, r8
 8002a56:	4798      	blx	r3
 8002a58:	6923      	ldr	r3, [r4, #16]
 8002a5a:	3b01      	subs	r3, #1
 8002a5c:	6123      	str	r3, [r4, #16]
 8002a5e:	e7f1      	b.n	8002a44 <_scanf_float+0x2fc>
 8002a60:	46aa      	mov	sl, r5
 8002a62:	9602      	str	r6, [sp, #8]
 8002a64:	e7df      	b.n	8002a26 <_scanf_float+0x2de>
 8002a66:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002a6a:	6923      	ldr	r3, [r4, #16]
 8002a6c:	2965      	cmp	r1, #101	; 0x65
 8002a6e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002a72:	f106 35ff 	add.w	r5, r6, #4294967295
 8002a76:	6123      	str	r3, [r4, #16]
 8002a78:	d00c      	beq.n	8002a94 <_scanf_float+0x34c>
 8002a7a:	2945      	cmp	r1, #69	; 0x45
 8002a7c:	d00a      	beq.n	8002a94 <_scanf_float+0x34c>
 8002a7e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a82:	463a      	mov	r2, r7
 8002a84:	4640      	mov	r0, r8
 8002a86:	4798      	blx	r3
 8002a88:	6923      	ldr	r3, [r4, #16]
 8002a8a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002a8e:	3b01      	subs	r3, #1
 8002a90:	1eb5      	subs	r5, r6, #2
 8002a92:	6123      	str	r3, [r4, #16]
 8002a94:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a98:	463a      	mov	r2, r7
 8002a9a:	4640      	mov	r0, r8
 8002a9c:	4798      	blx	r3
 8002a9e:	462e      	mov	r6, r5
 8002aa0:	6825      	ldr	r5, [r4, #0]
 8002aa2:	f015 0510 	ands.w	r5, r5, #16
 8002aa6:	d159      	bne.n	8002b5c <_scanf_float+0x414>
 8002aa8:	7035      	strb	r5, [r6, #0]
 8002aaa:	6823      	ldr	r3, [r4, #0]
 8002aac:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002ab0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002ab4:	d11b      	bne.n	8002aee <_scanf_float+0x3a6>
 8002ab6:	9b01      	ldr	r3, [sp, #4]
 8002ab8:	454b      	cmp	r3, r9
 8002aba:	eba3 0209 	sub.w	r2, r3, r9
 8002abe:	d123      	bne.n	8002b08 <_scanf_float+0x3c0>
 8002ac0:	2200      	movs	r2, #0
 8002ac2:	4659      	mov	r1, fp
 8002ac4:	4640      	mov	r0, r8
 8002ac6:	f000 fe99 	bl	80037fc <_strtod_r>
 8002aca:	6822      	ldr	r2, [r4, #0]
 8002acc:	9b03      	ldr	r3, [sp, #12]
 8002ace:	f012 0f02 	tst.w	r2, #2
 8002ad2:	ec57 6b10 	vmov	r6, r7, d0
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	d021      	beq.n	8002b1e <_scanf_float+0x3d6>
 8002ada:	9903      	ldr	r1, [sp, #12]
 8002adc:	1d1a      	adds	r2, r3, #4
 8002ade:	600a      	str	r2, [r1, #0]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	e9c3 6700 	strd	r6, r7, [r3]
 8002ae6:	68e3      	ldr	r3, [r4, #12]
 8002ae8:	3301      	adds	r3, #1
 8002aea:	60e3      	str	r3, [r4, #12]
 8002aec:	e66d      	b.n	80027ca <_scanf_float+0x82>
 8002aee:	9b04      	ldr	r3, [sp, #16]
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d0e5      	beq.n	8002ac0 <_scanf_float+0x378>
 8002af4:	9905      	ldr	r1, [sp, #20]
 8002af6:	230a      	movs	r3, #10
 8002af8:	462a      	mov	r2, r5
 8002afa:	3101      	adds	r1, #1
 8002afc:	4640      	mov	r0, r8
 8002afe:	f000 ff05 	bl	800390c <_strtol_r>
 8002b02:	9b04      	ldr	r3, [sp, #16]
 8002b04:	9e05      	ldr	r6, [sp, #20]
 8002b06:	1ac2      	subs	r2, r0, r3
 8002b08:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002b0c:	429e      	cmp	r6, r3
 8002b0e:	bf28      	it	cs
 8002b10:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002b14:	4912      	ldr	r1, [pc, #72]	; (8002b60 <_scanf_float+0x418>)
 8002b16:	4630      	mov	r0, r6
 8002b18:	f000 f82c 	bl	8002b74 <siprintf>
 8002b1c:	e7d0      	b.n	8002ac0 <_scanf_float+0x378>
 8002b1e:	9903      	ldr	r1, [sp, #12]
 8002b20:	f012 0f04 	tst.w	r2, #4
 8002b24:	f103 0204 	add.w	r2, r3, #4
 8002b28:	600a      	str	r2, [r1, #0]
 8002b2a:	d1d9      	bne.n	8002ae0 <_scanf_float+0x398>
 8002b2c:	f8d3 8000 	ldr.w	r8, [r3]
 8002b30:	ee10 2a10 	vmov	r2, s0
 8002b34:	ee10 0a10 	vmov	r0, s0
 8002b38:	463b      	mov	r3, r7
 8002b3a:	4639      	mov	r1, r7
 8002b3c:	f7fd fffe 	bl	8000b3c <__aeabi_dcmpun>
 8002b40:	b128      	cbz	r0, 8002b4e <_scanf_float+0x406>
 8002b42:	4808      	ldr	r0, [pc, #32]	; (8002b64 <_scanf_float+0x41c>)
 8002b44:	f000 f810 	bl	8002b68 <nanf>
 8002b48:	ed88 0a00 	vstr	s0, [r8]
 8002b4c:	e7cb      	b.n	8002ae6 <_scanf_float+0x39e>
 8002b4e:	4630      	mov	r0, r6
 8002b50:	4639      	mov	r1, r7
 8002b52:	f7fe f851 	bl	8000bf8 <__aeabi_d2f>
 8002b56:	f8c8 0000 	str.w	r0, [r8]
 8002b5a:	e7c4      	b.n	8002ae6 <_scanf_float+0x39e>
 8002b5c:	2500      	movs	r5, #0
 8002b5e:	e634      	b.n	80027ca <_scanf_float+0x82>
 8002b60:	08006850 	.word	0x08006850
 8002b64:	08006c58 	.word	0x08006c58

08002b68 <nanf>:
 8002b68:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8002b70 <nanf+0x8>
 8002b6c:	4770      	bx	lr
 8002b6e:	bf00      	nop
 8002b70:	7fc00000 	.word	0x7fc00000

08002b74 <siprintf>:
 8002b74:	b40e      	push	{r1, r2, r3}
 8002b76:	b500      	push	{lr}
 8002b78:	b09c      	sub	sp, #112	; 0x70
 8002b7a:	ab1d      	add	r3, sp, #116	; 0x74
 8002b7c:	9002      	str	r0, [sp, #8]
 8002b7e:	9006      	str	r0, [sp, #24]
 8002b80:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002b84:	4809      	ldr	r0, [pc, #36]	; (8002bac <siprintf+0x38>)
 8002b86:	9107      	str	r1, [sp, #28]
 8002b88:	9104      	str	r1, [sp, #16]
 8002b8a:	4909      	ldr	r1, [pc, #36]	; (8002bb0 <siprintf+0x3c>)
 8002b8c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002b90:	9105      	str	r1, [sp, #20]
 8002b92:	6800      	ldr	r0, [r0, #0]
 8002b94:	9301      	str	r3, [sp, #4]
 8002b96:	a902      	add	r1, sp, #8
 8002b98:	f002 ff04 	bl	80059a4 <_svfiprintf_r>
 8002b9c:	9b02      	ldr	r3, [sp, #8]
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	701a      	strb	r2, [r3, #0]
 8002ba2:	b01c      	add	sp, #112	; 0x70
 8002ba4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ba8:	b003      	add	sp, #12
 8002baa:	4770      	bx	lr
 8002bac:	20000004 	.word	0x20000004
 8002bb0:	ffff0208 	.word	0xffff0208

08002bb4 <sulp>:
 8002bb4:	b570      	push	{r4, r5, r6, lr}
 8002bb6:	4604      	mov	r4, r0
 8002bb8:	460d      	mov	r5, r1
 8002bba:	ec45 4b10 	vmov	d0, r4, r5
 8002bbe:	4616      	mov	r6, r2
 8002bc0:	f002 fc4e 	bl	8005460 <__ulp>
 8002bc4:	ec51 0b10 	vmov	r0, r1, d0
 8002bc8:	b17e      	cbz	r6, 8002bea <sulp+0x36>
 8002bca:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8002bce:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002bd2:	2b00      	cmp	r3, #0
 8002bd4:	dd09      	ble.n	8002bea <sulp+0x36>
 8002bd6:	051b      	lsls	r3, r3, #20
 8002bd8:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002bdc:	2400      	movs	r4, #0
 8002bde:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002be2:	4622      	mov	r2, r4
 8002be4:	462b      	mov	r3, r5
 8002be6:	f7fd fd0f 	bl	8000608 <__aeabi_dmul>
 8002bea:	bd70      	pop	{r4, r5, r6, pc}
 8002bec:	0000      	movs	r0, r0
	...

08002bf0 <_strtod_l>:
 8002bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002bf4:	ed2d 8b02 	vpush	{d8}
 8002bf8:	b09d      	sub	sp, #116	; 0x74
 8002bfa:	461f      	mov	r7, r3
 8002bfc:	2300      	movs	r3, #0
 8002bfe:	9318      	str	r3, [sp, #96]	; 0x60
 8002c00:	4ba2      	ldr	r3, [pc, #648]	; (8002e8c <_strtod_l+0x29c>)
 8002c02:	9213      	str	r2, [sp, #76]	; 0x4c
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	9305      	str	r3, [sp, #20]
 8002c08:	4604      	mov	r4, r0
 8002c0a:	4618      	mov	r0, r3
 8002c0c:	4688      	mov	r8, r1
 8002c0e:	f7fd fae7 	bl	80001e0 <strlen>
 8002c12:	f04f 0a00 	mov.w	sl, #0
 8002c16:	4605      	mov	r5, r0
 8002c18:	f04f 0b00 	mov.w	fp, #0
 8002c1c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8002c20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002c22:	781a      	ldrb	r2, [r3, #0]
 8002c24:	2a2b      	cmp	r2, #43	; 0x2b
 8002c26:	d04e      	beq.n	8002cc6 <_strtod_l+0xd6>
 8002c28:	d83b      	bhi.n	8002ca2 <_strtod_l+0xb2>
 8002c2a:	2a0d      	cmp	r2, #13
 8002c2c:	d834      	bhi.n	8002c98 <_strtod_l+0xa8>
 8002c2e:	2a08      	cmp	r2, #8
 8002c30:	d834      	bhi.n	8002c9c <_strtod_l+0xac>
 8002c32:	2a00      	cmp	r2, #0
 8002c34:	d03e      	beq.n	8002cb4 <_strtod_l+0xc4>
 8002c36:	2300      	movs	r3, #0
 8002c38:	930a      	str	r3, [sp, #40]	; 0x28
 8002c3a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8002c3c:	7833      	ldrb	r3, [r6, #0]
 8002c3e:	2b30      	cmp	r3, #48	; 0x30
 8002c40:	f040 80b0 	bne.w	8002da4 <_strtod_l+0x1b4>
 8002c44:	7873      	ldrb	r3, [r6, #1]
 8002c46:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8002c4a:	2b58      	cmp	r3, #88	; 0x58
 8002c4c:	d168      	bne.n	8002d20 <_strtod_l+0x130>
 8002c4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002c50:	9301      	str	r3, [sp, #4]
 8002c52:	ab18      	add	r3, sp, #96	; 0x60
 8002c54:	9702      	str	r7, [sp, #8]
 8002c56:	9300      	str	r3, [sp, #0]
 8002c58:	4a8d      	ldr	r2, [pc, #564]	; (8002e90 <_strtod_l+0x2a0>)
 8002c5a:	ab19      	add	r3, sp, #100	; 0x64
 8002c5c:	a917      	add	r1, sp, #92	; 0x5c
 8002c5e:	4620      	mov	r0, r4
 8002c60:	f001 fd58 	bl	8004714 <__gethex>
 8002c64:	f010 0707 	ands.w	r7, r0, #7
 8002c68:	4605      	mov	r5, r0
 8002c6a:	d005      	beq.n	8002c78 <_strtod_l+0x88>
 8002c6c:	2f06      	cmp	r7, #6
 8002c6e:	d12c      	bne.n	8002cca <_strtod_l+0xda>
 8002c70:	3601      	adds	r6, #1
 8002c72:	2300      	movs	r3, #0
 8002c74:	9617      	str	r6, [sp, #92]	; 0x5c
 8002c76:	930a      	str	r3, [sp, #40]	; 0x28
 8002c78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	f040 8590 	bne.w	80037a0 <_strtod_l+0xbb0>
 8002c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002c82:	b1eb      	cbz	r3, 8002cc0 <_strtod_l+0xd0>
 8002c84:	4652      	mov	r2, sl
 8002c86:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8002c8a:	ec43 2b10 	vmov	d0, r2, r3
 8002c8e:	b01d      	add	sp, #116	; 0x74
 8002c90:	ecbd 8b02 	vpop	{d8}
 8002c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c98:	2a20      	cmp	r2, #32
 8002c9a:	d1cc      	bne.n	8002c36 <_strtod_l+0x46>
 8002c9c:	3301      	adds	r3, #1
 8002c9e:	9317      	str	r3, [sp, #92]	; 0x5c
 8002ca0:	e7be      	b.n	8002c20 <_strtod_l+0x30>
 8002ca2:	2a2d      	cmp	r2, #45	; 0x2d
 8002ca4:	d1c7      	bne.n	8002c36 <_strtod_l+0x46>
 8002ca6:	2201      	movs	r2, #1
 8002ca8:	920a      	str	r2, [sp, #40]	; 0x28
 8002caa:	1c5a      	adds	r2, r3, #1
 8002cac:	9217      	str	r2, [sp, #92]	; 0x5c
 8002cae:	785b      	ldrb	r3, [r3, #1]
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d1c2      	bne.n	8002c3a <_strtod_l+0x4a>
 8002cb4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002cb6:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	f040 856e 	bne.w	800379c <_strtod_l+0xbac>
 8002cc0:	4652      	mov	r2, sl
 8002cc2:	465b      	mov	r3, fp
 8002cc4:	e7e1      	b.n	8002c8a <_strtod_l+0x9a>
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	e7ee      	b.n	8002ca8 <_strtod_l+0xb8>
 8002cca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8002ccc:	b13a      	cbz	r2, 8002cde <_strtod_l+0xee>
 8002cce:	2135      	movs	r1, #53	; 0x35
 8002cd0:	a81a      	add	r0, sp, #104	; 0x68
 8002cd2:	f002 fcd0 	bl	8005676 <__copybits>
 8002cd6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8002cd8:	4620      	mov	r0, r4
 8002cda:	f002 f88f 	bl	8004dfc <_Bfree>
 8002cde:	3f01      	subs	r7, #1
 8002ce0:	2f04      	cmp	r7, #4
 8002ce2:	d806      	bhi.n	8002cf2 <_strtod_l+0x102>
 8002ce4:	e8df f007 	tbb	[pc, r7]
 8002ce8:	1714030a 	.word	0x1714030a
 8002cec:	0a          	.byte	0x0a
 8002ced:	00          	.byte	0x00
 8002cee:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 8002cf2:	0728      	lsls	r0, r5, #28
 8002cf4:	d5c0      	bpl.n	8002c78 <_strtod_l+0x88>
 8002cf6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8002cfa:	e7bd      	b.n	8002c78 <_strtod_l+0x88>
 8002cfc:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8002d00:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002d02:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002d06:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002d0a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8002d0e:	e7f0      	b.n	8002cf2 <_strtod_l+0x102>
 8002d10:	f8df b180 	ldr.w	fp, [pc, #384]	; 8002e94 <_strtod_l+0x2a4>
 8002d14:	e7ed      	b.n	8002cf2 <_strtod_l+0x102>
 8002d16:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8002d1a:	f04f 3aff 	mov.w	sl, #4294967295
 8002d1e:	e7e8      	b.n	8002cf2 <_strtod_l+0x102>
 8002d20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002d22:	1c5a      	adds	r2, r3, #1
 8002d24:	9217      	str	r2, [sp, #92]	; 0x5c
 8002d26:	785b      	ldrb	r3, [r3, #1]
 8002d28:	2b30      	cmp	r3, #48	; 0x30
 8002d2a:	d0f9      	beq.n	8002d20 <_strtod_l+0x130>
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d0a3      	beq.n	8002c78 <_strtod_l+0x88>
 8002d30:	2301      	movs	r3, #1
 8002d32:	f04f 0900 	mov.w	r9, #0
 8002d36:	9304      	str	r3, [sp, #16]
 8002d38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002d3a:	9308      	str	r3, [sp, #32]
 8002d3c:	f8cd 901c 	str.w	r9, [sp, #28]
 8002d40:	464f      	mov	r7, r9
 8002d42:	220a      	movs	r2, #10
 8002d44:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8002d46:	7806      	ldrb	r6, [r0, #0]
 8002d48:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8002d4c:	b2d9      	uxtb	r1, r3
 8002d4e:	2909      	cmp	r1, #9
 8002d50:	d92a      	bls.n	8002da8 <_strtod_l+0x1b8>
 8002d52:	9905      	ldr	r1, [sp, #20]
 8002d54:	462a      	mov	r2, r5
 8002d56:	f002 ff3f 	bl	8005bd8 <strncmp>
 8002d5a:	b398      	cbz	r0, 8002dc4 <_strtod_l+0x1d4>
 8002d5c:	2000      	movs	r0, #0
 8002d5e:	4632      	mov	r2, r6
 8002d60:	463d      	mov	r5, r7
 8002d62:	9005      	str	r0, [sp, #20]
 8002d64:	4603      	mov	r3, r0
 8002d66:	2a65      	cmp	r2, #101	; 0x65
 8002d68:	d001      	beq.n	8002d6e <_strtod_l+0x17e>
 8002d6a:	2a45      	cmp	r2, #69	; 0x45
 8002d6c:	d118      	bne.n	8002da0 <_strtod_l+0x1b0>
 8002d6e:	b91d      	cbnz	r5, 8002d78 <_strtod_l+0x188>
 8002d70:	9a04      	ldr	r2, [sp, #16]
 8002d72:	4302      	orrs	r2, r0
 8002d74:	d09e      	beq.n	8002cb4 <_strtod_l+0xc4>
 8002d76:	2500      	movs	r5, #0
 8002d78:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 8002d7c:	f108 0201 	add.w	r2, r8, #1
 8002d80:	9217      	str	r2, [sp, #92]	; 0x5c
 8002d82:	f898 2001 	ldrb.w	r2, [r8, #1]
 8002d86:	2a2b      	cmp	r2, #43	; 0x2b
 8002d88:	d075      	beq.n	8002e76 <_strtod_l+0x286>
 8002d8a:	2a2d      	cmp	r2, #45	; 0x2d
 8002d8c:	d07b      	beq.n	8002e86 <_strtod_l+0x296>
 8002d8e:	f04f 0c00 	mov.w	ip, #0
 8002d92:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8002d96:	2909      	cmp	r1, #9
 8002d98:	f240 8082 	bls.w	8002ea0 <_strtod_l+0x2b0>
 8002d9c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8002da0:	2600      	movs	r6, #0
 8002da2:	e09d      	b.n	8002ee0 <_strtod_l+0x2f0>
 8002da4:	2300      	movs	r3, #0
 8002da6:	e7c4      	b.n	8002d32 <_strtod_l+0x142>
 8002da8:	2f08      	cmp	r7, #8
 8002daa:	bfd8      	it	le
 8002dac:	9907      	ldrle	r1, [sp, #28]
 8002dae:	f100 0001 	add.w	r0, r0, #1
 8002db2:	bfda      	itte	le
 8002db4:	fb02 3301 	mlale	r3, r2, r1, r3
 8002db8:	9307      	strle	r3, [sp, #28]
 8002dba:	fb02 3909 	mlagt	r9, r2, r9, r3
 8002dbe:	3701      	adds	r7, #1
 8002dc0:	9017      	str	r0, [sp, #92]	; 0x5c
 8002dc2:	e7bf      	b.n	8002d44 <_strtod_l+0x154>
 8002dc4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002dc6:	195a      	adds	r2, r3, r5
 8002dc8:	9217      	str	r2, [sp, #92]	; 0x5c
 8002dca:	5d5a      	ldrb	r2, [r3, r5]
 8002dcc:	2f00      	cmp	r7, #0
 8002dce:	d037      	beq.n	8002e40 <_strtod_l+0x250>
 8002dd0:	9005      	str	r0, [sp, #20]
 8002dd2:	463d      	mov	r5, r7
 8002dd4:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8002dd8:	2b09      	cmp	r3, #9
 8002dda:	d912      	bls.n	8002e02 <_strtod_l+0x212>
 8002ddc:	2301      	movs	r3, #1
 8002dde:	e7c2      	b.n	8002d66 <_strtod_l+0x176>
 8002de0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002de2:	1c5a      	adds	r2, r3, #1
 8002de4:	9217      	str	r2, [sp, #92]	; 0x5c
 8002de6:	785a      	ldrb	r2, [r3, #1]
 8002de8:	3001      	adds	r0, #1
 8002dea:	2a30      	cmp	r2, #48	; 0x30
 8002dec:	d0f8      	beq.n	8002de0 <_strtod_l+0x1f0>
 8002dee:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8002df2:	2b08      	cmp	r3, #8
 8002df4:	f200 84d9 	bhi.w	80037aa <_strtod_l+0xbba>
 8002df8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002dfa:	9005      	str	r0, [sp, #20]
 8002dfc:	2000      	movs	r0, #0
 8002dfe:	9308      	str	r3, [sp, #32]
 8002e00:	4605      	mov	r5, r0
 8002e02:	3a30      	subs	r2, #48	; 0x30
 8002e04:	f100 0301 	add.w	r3, r0, #1
 8002e08:	d014      	beq.n	8002e34 <_strtod_l+0x244>
 8002e0a:	9905      	ldr	r1, [sp, #20]
 8002e0c:	4419      	add	r1, r3
 8002e0e:	9105      	str	r1, [sp, #20]
 8002e10:	462b      	mov	r3, r5
 8002e12:	eb00 0e05 	add.w	lr, r0, r5
 8002e16:	210a      	movs	r1, #10
 8002e18:	4573      	cmp	r3, lr
 8002e1a:	d113      	bne.n	8002e44 <_strtod_l+0x254>
 8002e1c:	182b      	adds	r3, r5, r0
 8002e1e:	2b08      	cmp	r3, #8
 8002e20:	f105 0501 	add.w	r5, r5, #1
 8002e24:	4405      	add	r5, r0
 8002e26:	dc1c      	bgt.n	8002e62 <_strtod_l+0x272>
 8002e28:	9907      	ldr	r1, [sp, #28]
 8002e2a:	230a      	movs	r3, #10
 8002e2c:	fb03 2301 	mla	r3, r3, r1, r2
 8002e30:	9307      	str	r3, [sp, #28]
 8002e32:	2300      	movs	r3, #0
 8002e34:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8002e36:	1c51      	adds	r1, r2, #1
 8002e38:	9117      	str	r1, [sp, #92]	; 0x5c
 8002e3a:	7852      	ldrb	r2, [r2, #1]
 8002e3c:	4618      	mov	r0, r3
 8002e3e:	e7c9      	b.n	8002dd4 <_strtod_l+0x1e4>
 8002e40:	4638      	mov	r0, r7
 8002e42:	e7d2      	b.n	8002dea <_strtod_l+0x1fa>
 8002e44:	2b08      	cmp	r3, #8
 8002e46:	dc04      	bgt.n	8002e52 <_strtod_l+0x262>
 8002e48:	9e07      	ldr	r6, [sp, #28]
 8002e4a:	434e      	muls	r6, r1
 8002e4c:	9607      	str	r6, [sp, #28]
 8002e4e:	3301      	adds	r3, #1
 8002e50:	e7e2      	b.n	8002e18 <_strtod_l+0x228>
 8002e52:	f103 0c01 	add.w	ip, r3, #1
 8002e56:	f1bc 0f10 	cmp.w	ip, #16
 8002e5a:	bfd8      	it	le
 8002e5c:	fb01 f909 	mulle.w	r9, r1, r9
 8002e60:	e7f5      	b.n	8002e4e <_strtod_l+0x25e>
 8002e62:	2d10      	cmp	r5, #16
 8002e64:	bfdc      	itt	le
 8002e66:	230a      	movle	r3, #10
 8002e68:	fb03 2909 	mlale	r9, r3, r9, r2
 8002e6c:	e7e1      	b.n	8002e32 <_strtod_l+0x242>
 8002e6e:	2300      	movs	r3, #0
 8002e70:	9305      	str	r3, [sp, #20]
 8002e72:	2301      	movs	r3, #1
 8002e74:	e77c      	b.n	8002d70 <_strtod_l+0x180>
 8002e76:	f04f 0c00 	mov.w	ip, #0
 8002e7a:	f108 0202 	add.w	r2, r8, #2
 8002e7e:	9217      	str	r2, [sp, #92]	; 0x5c
 8002e80:	f898 2002 	ldrb.w	r2, [r8, #2]
 8002e84:	e785      	b.n	8002d92 <_strtod_l+0x1a2>
 8002e86:	f04f 0c01 	mov.w	ip, #1
 8002e8a:	e7f6      	b.n	8002e7a <_strtod_l+0x28a>
 8002e8c:	08006aa0 	.word	0x08006aa0
 8002e90:	08006858 	.word	0x08006858
 8002e94:	7ff00000 	.word	0x7ff00000
 8002e98:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8002e9a:	1c51      	adds	r1, r2, #1
 8002e9c:	9117      	str	r1, [sp, #92]	; 0x5c
 8002e9e:	7852      	ldrb	r2, [r2, #1]
 8002ea0:	2a30      	cmp	r2, #48	; 0x30
 8002ea2:	d0f9      	beq.n	8002e98 <_strtod_l+0x2a8>
 8002ea4:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8002ea8:	2908      	cmp	r1, #8
 8002eaa:	f63f af79 	bhi.w	8002da0 <_strtod_l+0x1b0>
 8002eae:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8002eb2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8002eb4:	9206      	str	r2, [sp, #24]
 8002eb6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8002eb8:	1c51      	adds	r1, r2, #1
 8002eba:	9117      	str	r1, [sp, #92]	; 0x5c
 8002ebc:	7852      	ldrb	r2, [r2, #1]
 8002ebe:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8002ec2:	2e09      	cmp	r6, #9
 8002ec4:	d937      	bls.n	8002f36 <_strtod_l+0x346>
 8002ec6:	9e06      	ldr	r6, [sp, #24]
 8002ec8:	1b89      	subs	r1, r1, r6
 8002eca:	2908      	cmp	r1, #8
 8002ecc:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8002ed0:	dc02      	bgt.n	8002ed8 <_strtod_l+0x2e8>
 8002ed2:	4576      	cmp	r6, lr
 8002ed4:	bfa8      	it	ge
 8002ed6:	4676      	movge	r6, lr
 8002ed8:	f1bc 0f00 	cmp.w	ip, #0
 8002edc:	d000      	beq.n	8002ee0 <_strtod_l+0x2f0>
 8002ede:	4276      	negs	r6, r6
 8002ee0:	2d00      	cmp	r5, #0
 8002ee2:	d14d      	bne.n	8002f80 <_strtod_l+0x390>
 8002ee4:	9904      	ldr	r1, [sp, #16]
 8002ee6:	4301      	orrs	r1, r0
 8002ee8:	f47f aec6 	bne.w	8002c78 <_strtod_l+0x88>
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	f47f aee1 	bne.w	8002cb4 <_strtod_l+0xc4>
 8002ef2:	2a69      	cmp	r2, #105	; 0x69
 8002ef4:	d027      	beq.n	8002f46 <_strtod_l+0x356>
 8002ef6:	dc24      	bgt.n	8002f42 <_strtod_l+0x352>
 8002ef8:	2a49      	cmp	r2, #73	; 0x49
 8002efa:	d024      	beq.n	8002f46 <_strtod_l+0x356>
 8002efc:	2a4e      	cmp	r2, #78	; 0x4e
 8002efe:	f47f aed9 	bne.w	8002cb4 <_strtod_l+0xc4>
 8002f02:	499f      	ldr	r1, [pc, #636]	; (8003180 <_strtod_l+0x590>)
 8002f04:	a817      	add	r0, sp, #92	; 0x5c
 8002f06:	f001 fe5d 	bl	8004bc4 <__match>
 8002f0a:	2800      	cmp	r0, #0
 8002f0c:	f43f aed2 	beq.w	8002cb4 <_strtod_l+0xc4>
 8002f10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002f12:	781b      	ldrb	r3, [r3, #0]
 8002f14:	2b28      	cmp	r3, #40	; 0x28
 8002f16:	d12d      	bne.n	8002f74 <_strtod_l+0x384>
 8002f18:	499a      	ldr	r1, [pc, #616]	; (8003184 <_strtod_l+0x594>)
 8002f1a:	aa1a      	add	r2, sp, #104	; 0x68
 8002f1c:	a817      	add	r0, sp, #92	; 0x5c
 8002f1e:	f001 fe65 	bl	8004bec <__hexnan>
 8002f22:	2805      	cmp	r0, #5
 8002f24:	d126      	bne.n	8002f74 <_strtod_l+0x384>
 8002f26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002f28:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8002f2c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8002f30:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8002f34:	e6a0      	b.n	8002c78 <_strtod_l+0x88>
 8002f36:	210a      	movs	r1, #10
 8002f38:	fb01 2e0e 	mla	lr, r1, lr, r2
 8002f3c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8002f40:	e7b9      	b.n	8002eb6 <_strtod_l+0x2c6>
 8002f42:	2a6e      	cmp	r2, #110	; 0x6e
 8002f44:	e7db      	b.n	8002efe <_strtod_l+0x30e>
 8002f46:	4990      	ldr	r1, [pc, #576]	; (8003188 <_strtod_l+0x598>)
 8002f48:	a817      	add	r0, sp, #92	; 0x5c
 8002f4a:	f001 fe3b 	bl	8004bc4 <__match>
 8002f4e:	2800      	cmp	r0, #0
 8002f50:	f43f aeb0 	beq.w	8002cb4 <_strtod_l+0xc4>
 8002f54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002f56:	498d      	ldr	r1, [pc, #564]	; (800318c <_strtod_l+0x59c>)
 8002f58:	3b01      	subs	r3, #1
 8002f5a:	a817      	add	r0, sp, #92	; 0x5c
 8002f5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8002f5e:	f001 fe31 	bl	8004bc4 <__match>
 8002f62:	b910      	cbnz	r0, 8002f6a <_strtod_l+0x37a>
 8002f64:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002f66:	3301      	adds	r3, #1
 8002f68:	9317      	str	r3, [sp, #92]	; 0x5c
 8002f6a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800319c <_strtod_l+0x5ac>
 8002f6e:	f04f 0a00 	mov.w	sl, #0
 8002f72:	e681      	b.n	8002c78 <_strtod_l+0x88>
 8002f74:	4886      	ldr	r0, [pc, #536]	; (8003190 <_strtod_l+0x5a0>)
 8002f76:	f002 fe17 	bl	8005ba8 <nan>
 8002f7a:	ec5b ab10 	vmov	sl, fp, d0
 8002f7e:	e67b      	b.n	8002c78 <_strtod_l+0x88>
 8002f80:	9b05      	ldr	r3, [sp, #20]
 8002f82:	9807      	ldr	r0, [sp, #28]
 8002f84:	1af3      	subs	r3, r6, r3
 8002f86:	2f00      	cmp	r7, #0
 8002f88:	bf08      	it	eq
 8002f8a:	462f      	moveq	r7, r5
 8002f8c:	2d10      	cmp	r5, #16
 8002f8e:	9306      	str	r3, [sp, #24]
 8002f90:	46a8      	mov	r8, r5
 8002f92:	bfa8      	it	ge
 8002f94:	f04f 0810 	movge.w	r8, #16
 8002f98:	f7fd fabc 	bl	8000514 <__aeabi_ui2d>
 8002f9c:	2d09      	cmp	r5, #9
 8002f9e:	4682      	mov	sl, r0
 8002fa0:	468b      	mov	fp, r1
 8002fa2:	dd13      	ble.n	8002fcc <_strtod_l+0x3dc>
 8002fa4:	4b7b      	ldr	r3, [pc, #492]	; (8003194 <_strtod_l+0x5a4>)
 8002fa6:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8002faa:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8002fae:	f7fd fb2b 	bl	8000608 <__aeabi_dmul>
 8002fb2:	4682      	mov	sl, r0
 8002fb4:	4648      	mov	r0, r9
 8002fb6:	468b      	mov	fp, r1
 8002fb8:	f7fd faac 	bl	8000514 <__aeabi_ui2d>
 8002fbc:	4602      	mov	r2, r0
 8002fbe:	460b      	mov	r3, r1
 8002fc0:	4650      	mov	r0, sl
 8002fc2:	4659      	mov	r1, fp
 8002fc4:	f7fd f96a 	bl	800029c <__adddf3>
 8002fc8:	4682      	mov	sl, r0
 8002fca:	468b      	mov	fp, r1
 8002fcc:	2d0f      	cmp	r5, #15
 8002fce:	dc38      	bgt.n	8003042 <_strtod_l+0x452>
 8002fd0:	9b06      	ldr	r3, [sp, #24]
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	f43f ae50 	beq.w	8002c78 <_strtod_l+0x88>
 8002fd8:	dd24      	ble.n	8003024 <_strtod_l+0x434>
 8002fda:	2b16      	cmp	r3, #22
 8002fdc:	dc0b      	bgt.n	8002ff6 <_strtod_l+0x406>
 8002fde:	496d      	ldr	r1, [pc, #436]	; (8003194 <_strtod_l+0x5a4>)
 8002fe0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002fe4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002fe8:	4652      	mov	r2, sl
 8002fea:	465b      	mov	r3, fp
 8002fec:	f7fd fb0c 	bl	8000608 <__aeabi_dmul>
 8002ff0:	4682      	mov	sl, r0
 8002ff2:	468b      	mov	fp, r1
 8002ff4:	e640      	b.n	8002c78 <_strtod_l+0x88>
 8002ff6:	9a06      	ldr	r2, [sp, #24]
 8002ff8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8002ffc:	4293      	cmp	r3, r2
 8002ffe:	db20      	blt.n	8003042 <_strtod_l+0x452>
 8003000:	4c64      	ldr	r4, [pc, #400]	; (8003194 <_strtod_l+0x5a4>)
 8003002:	f1c5 050f 	rsb	r5, r5, #15
 8003006:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800300a:	4652      	mov	r2, sl
 800300c:	465b      	mov	r3, fp
 800300e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003012:	f7fd faf9 	bl	8000608 <__aeabi_dmul>
 8003016:	9b06      	ldr	r3, [sp, #24]
 8003018:	1b5d      	subs	r5, r3, r5
 800301a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800301e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8003022:	e7e3      	b.n	8002fec <_strtod_l+0x3fc>
 8003024:	9b06      	ldr	r3, [sp, #24]
 8003026:	3316      	adds	r3, #22
 8003028:	db0b      	blt.n	8003042 <_strtod_l+0x452>
 800302a:	9b05      	ldr	r3, [sp, #20]
 800302c:	1b9e      	subs	r6, r3, r6
 800302e:	4b59      	ldr	r3, [pc, #356]	; (8003194 <_strtod_l+0x5a4>)
 8003030:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8003034:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003038:	4650      	mov	r0, sl
 800303a:	4659      	mov	r1, fp
 800303c:	f7fd fc0e 	bl	800085c <__aeabi_ddiv>
 8003040:	e7d6      	b.n	8002ff0 <_strtod_l+0x400>
 8003042:	9b06      	ldr	r3, [sp, #24]
 8003044:	eba5 0808 	sub.w	r8, r5, r8
 8003048:	4498      	add	r8, r3
 800304a:	f1b8 0f00 	cmp.w	r8, #0
 800304e:	dd74      	ble.n	800313a <_strtod_l+0x54a>
 8003050:	f018 030f 	ands.w	r3, r8, #15
 8003054:	d00a      	beq.n	800306c <_strtod_l+0x47c>
 8003056:	494f      	ldr	r1, [pc, #316]	; (8003194 <_strtod_l+0x5a4>)
 8003058:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800305c:	4652      	mov	r2, sl
 800305e:	465b      	mov	r3, fp
 8003060:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003064:	f7fd fad0 	bl	8000608 <__aeabi_dmul>
 8003068:	4682      	mov	sl, r0
 800306a:	468b      	mov	fp, r1
 800306c:	f038 080f 	bics.w	r8, r8, #15
 8003070:	d04f      	beq.n	8003112 <_strtod_l+0x522>
 8003072:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8003076:	dd22      	ble.n	80030be <_strtod_l+0x4ce>
 8003078:	2500      	movs	r5, #0
 800307a:	462e      	mov	r6, r5
 800307c:	9507      	str	r5, [sp, #28]
 800307e:	9505      	str	r5, [sp, #20]
 8003080:	2322      	movs	r3, #34	; 0x22
 8003082:	f8df b118 	ldr.w	fp, [pc, #280]	; 800319c <_strtod_l+0x5ac>
 8003086:	6023      	str	r3, [r4, #0]
 8003088:	f04f 0a00 	mov.w	sl, #0
 800308c:	9b07      	ldr	r3, [sp, #28]
 800308e:	2b00      	cmp	r3, #0
 8003090:	f43f adf2 	beq.w	8002c78 <_strtod_l+0x88>
 8003094:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003096:	4620      	mov	r0, r4
 8003098:	f001 feb0 	bl	8004dfc <_Bfree>
 800309c:	9905      	ldr	r1, [sp, #20]
 800309e:	4620      	mov	r0, r4
 80030a0:	f001 feac 	bl	8004dfc <_Bfree>
 80030a4:	4631      	mov	r1, r6
 80030a6:	4620      	mov	r0, r4
 80030a8:	f001 fea8 	bl	8004dfc <_Bfree>
 80030ac:	9907      	ldr	r1, [sp, #28]
 80030ae:	4620      	mov	r0, r4
 80030b0:	f001 fea4 	bl	8004dfc <_Bfree>
 80030b4:	4629      	mov	r1, r5
 80030b6:	4620      	mov	r0, r4
 80030b8:	f001 fea0 	bl	8004dfc <_Bfree>
 80030bc:	e5dc      	b.n	8002c78 <_strtod_l+0x88>
 80030be:	4b36      	ldr	r3, [pc, #216]	; (8003198 <_strtod_l+0x5a8>)
 80030c0:	9304      	str	r3, [sp, #16]
 80030c2:	2300      	movs	r3, #0
 80030c4:	ea4f 1828 	mov.w	r8, r8, asr #4
 80030c8:	4650      	mov	r0, sl
 80030ca:	4659      	mov	r1, fp
 80030cc:	4699      	mov	r9, r3
 80030ce:	f1b8 0f01 	cmp.w	r8, #1
 80030d2:	dc21      	bgt.n	8003118 <_strtod_l+0x528>
 80030d4:	b10b      	cbz	r3, 80030da <_strtod_l+0x4ea>
 80030d6:	4682      	mov	sl, r0
 80030d8:	468b      	mov	fp, r1
 80030da:	4b2f      	ldr	r3, [pc, #188]	; (8003198 <_strtod_l+0x5a8>)
 80030dc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 80030e0:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 80030e4:	4652      	mov	r2, sl
 80030e6:	465b      	mov	r3, fp
 80030e8:	e9d9 0100 	ldrd	r0, r1, [r9]
 80030ec:	f7fd fa8c 	bl	8000608 <__aeabi_dmul>
 80030f0:	4b2a      	ldr	r3, [pc, #168]	; (800319c <_strtod_l+0x5ac>)
 80030f2:	460a      	mov	r2, r1
 80030f4:	400b      	ands	r3, r1
 80030f6:	492a      	ldr	r1, [pc, #168]	; (80031a0 <_strtod_l+0x5b0>)
 80030f8:	428b      	cmp	r3, r1
 80030fa:	4682      	mov	sl, r0
 80030fc:	d8bc      	bhi.n	8003078 <_strtod_l+0x488>
 80030fe:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003102:	428b      	cmp	r3, r1
 8003104:	bf86      	itte	hi
 8003106:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 80031a4 <_strtod_l+0x5b4>
 800310a:	f04f 3aff 	movhi.w	sl, #4294967295
 800310e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8003112:	2300      	movs	r3, #0
 8003114:	9304      	str	r3, [sp, #16]
 8003116:	e084      	b.n	8003222 <_strtod_l+0x632>
 8003118:	f018 0f01 	tst.w	r8, #1
 800311c:	d005      	beq.n	800312a <_strtod_l+0x53a>
 800311e:	9b04      	ldr	r3, [sp, #16]
 8003120:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003124:	f7fd fa70 	bl	8000608 <__aeabi_dmul>
 8003128:	2301      	movs	r3, #1
 800312a:	9a04      	ldr	r2, [sp, #16]
 800312c:	3208      	adds	r2, #8
 800312e:	f109 0901 	add.w	r9, r9, #1
 8003132:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003136:	9204      	str	r2, [sp, #16]
 8003138:	e7c9      	b.n	80030ce <_strtod_l+0x4de>
 800313a:	d0ea      	beq.n	8003112 <_strtod_l+0x522>
 800313c:	f1c8 0800 	rsb	r8, r8, #0
 8003140:	f018 020f 	ands.w	r2, r8, #15
 8003144:	d00a      	beq.n	800315c <_strtod_l+0x56c>
 8003146:	4b13      	ldr	r3, [pc, #76]	; (8003194 <_strtod_l+0x5a4>)
 8003148:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800314c:	4650      	mov	r0, sl
 800314e:	4659      	mov	r1, fp
 8003150:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003154:	f7fd fb82 	bl	800085c <__aeabi_ddiv>
 8003158:	4682      	mov	sl, r0
 800315a:	468b      	mov	fp, r1
 800315c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8003160:	d0d7      	beq.n	8003112 <_strtod_l+0x522>
 8003162:	f1b8 0f1f 	cmp.w	r8, #31
 8003166:	dd1f      	ble.n	80031a8 <_strtod_l+0x5b8>
 8003168:	2500      	movs	r5, #0
 800316a:	462e      	mov	r6, r5
 800316c:	9507      	str	r5, [sp, #28]
 800316e:	9505      	str	r5, [sp, #20]
 8003170:	2322      	movs	r3, #34	; 0x22
 8003172:	f04f 0a00 	mov.w	sl, #0
 8003176:	f04f 0b00 	mov.w	fp, #0
 800317a:	6023      	str	r3, [r4, #0]
 800317c:	e786      	b.n	800308c <_strtod_l+0x49c>
 800317e:	bf00      	nop
 8003180:	08006829 	.word	0x08006829
 8003184:	0800686c 	.word	0x0800686c
 8003188:	08006821 	.word	0x08006821
 800318c:	080069ac 	.word	0x080069ac
 8003190:	08006c58 	.word	0x08006c58
 8003194:	08006b38 	.word	0x08006b38
 8003198:	08006b10 	.word	0x08006b10
 800319c:	7ff00000 	.word	0x7ff00000
 80031a0:	7ca00000 	.word	0x7ca00000
 80031a4:	7fefffff 	.word	0x7fefffff
 80031a8:	f018 0310 	ands.w	r3, r8, #16
 80031ac:	bf18      	it	ne
 80031ae:	236a      	movne	r3, #106	; 0x6a
 80031b0:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8003560 <_strtod_l+0x970>
 80031b4:	9304      	str	r3, [sp, #16]
 80031b6:	4650      	mov	r0, sl
 80031b8:	4659      	mov	r1, fp
 80031ba:	2300      	movs	r3, #0
 80031bc:	f018 0f01 	tst.w	r8, #1
 80031c0:	d004      	beq.n	80031cc <_strtod_l+0x5dc>
 80031c2:	e9d9 2300 	ldrd	r2, r3, [r9]
 80031c6:	f7fd fa1f 	bl	8000608 <__aeabi_dmul>
 80031ca:	2301      	movs	r3, #1
 80031cc:	ea5f 0868 	movs.w	r8, r8, asr #1
 80031d0:	f109 0908 	add.w	r9, r9, #8
 80031d4:	d1f2      	bne.n	80031bc <_strtod_l+0x5cc>
 80031d6:	b10b      	cbz	r3, 80031dc <_strtod_l+0x5ec>
 80031d8:	4682      	mov	sl, r0
 80031da:	468b      	mov	fp, r1
 80031dc:	9b04      	ldr	r3, [sp, #16]
 80031de:	b1c3      	cbz	r3, 8003212 <_strtod_l+0x622>
 80031e0:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80031e4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	4659      	mov	r1, fp
 80031ec:	dd11      	ble.n	8003212 <_strtod_l+0x622>
 80031ee:	2b1f      	cmp	r3, #31
 80031f0:	f340 8124 	ble.w	800343c <_strtod_l+0x84c>
 80031f4:	2b34      	cmp	r3, #52	; 0x34
 80031f6:	bfde      	ittt	le
 80031f8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80031fc:	f04f 33ff 	movle.w	r3, #4294967295
 8003200:	fa03 f202 	lslle.w	r2, r3, r2
 8003204:	f04f 0a00 	mov.w	sl, #0
 8003208:	bfcc      	ite	gt
 800320a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800320e:	ea02 0b01 	andle.w	fp, r2, r1
 8003212:	2200      	movs	r2, #0
 8003214:	2300      	movs	r3, #0
 8003216:	4650      	mov	r0, sl
 8003218:	4659      	mov	r1, fp
 800321a:	f7fd fc5d 	bl	8000ad8 <__aeabi_dcmpeq>
 800321e:	2800      	cmp	r0, #0
 8003220:	d1a2      	bne.n	8003168 <_strtod_l+0x578>
 8003222:	9b07      	ldr	r3, [sp, #28]
 8003224:	9300      	str	r3, [sp, #0]
 8003226:	9908      	ldr	r1, [sp, #32]
 8003228:	462b      	mov	r3, r5
 800322a:	463a      	mov	r2, r7
 800322c:	4620      	mov	r0, r4
 800322e:	f001 fe4d 	bl	8004ecc <__s2b>
 8003232:	9007      	str	r0, [sp, #28]
 8003234:	2800      	cmp	r0, #0
 8003236:	f43f af1f 	beq.w	8003078 <_strtod_l+0x488>
 800323a:	9b05      	ldr	r3, [sp, #20]
 800323c:	1b9e      	subs	r6, r3, r6
 800323e:	9b06      	ldr	r3, [sp, #24]
 8003240:	2b00      	cmp	r3, #0
 8003242:	bfb4      	ite	lt
 8003244:	4633      	movlt	r3, r6
 8003246:	2300      	movge	r3, #0
 8003248:	930c      	str	r3, [sp, #48]	; 0x30
 800324a:	9b06      	ldr	r3, [sp, #24]
 800324c:	2500      	movs	r5, #0
 800324e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8003252:	9312      	str	r3, [sp, #72]	; 0x48
 8003254:	462e      	mov	r6, r5
 8003256:	9b07      	ldr	r3, [sp, #28]
 8003258:	4620      	mov	r0, r4
 800325a:	6859      	ldr	r1, [r3, #4]
 800325c:	f001 fd8e 	bl	8004d7c <_Balloc>
 8003260:	9005      	str	r0, [sp, #20]
 8003262:	2800      	cmp	r0, #0
 8003264:	f43f af0c 	beq.w	8003080 <_strtod_l+0x490>
 8003268:	9b07      	ldr	r3, [sp, #28]
 800326a:	691a      	ldr	r2, [r3, #16]
 800326c:	3202      	adds	r2, #2
 800326e:	f103 010c 	add.w	r1, r3, #12
 8003272:	0092      	lsls	r2, r2, #2
 8003274:	300c      	adds	r0, #12
 8003276:	f001 fd73 	bl	8004d60 <memcpy>
 800327a:	ec4b ab10 	vmov	d0, sl, fp
 800327e:	aa1a      	add	r2, sp, #104	; 0x68
 8003280:	a919      	add	r1, sp, #100	; 0x64
 8003282:	4620      	mov	r0, r4
 8003284:	f002 f968 	bl	8005558 <__d2b>
 8003288:	ec4b ab18 	vmov	d8, sl, fp
 800328c:	9018      	str	r0, [sp, #96]	; 0x60
 800328e:	2800      	cmp	r0, #0
 8003290:	f43f aef6 	beq.w	8003080 <_strtod_l+0x490>
 8003294:	2101      	movs	r1, #1
 8003296:	4620      	mov	r0, r4
 8003298:	f001 feb2 	bl	8005000 <__i2b>
 800329c:	4606      	mov	r6, r0
 800329e:	2800      	cmp	r0, #0
 80032a0:	f43f aeee 	beq.w	8003080 <_strtod_l+0x490>
 80032a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80032a6:	9904      	ldr	r1, [sp, #16]
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	bfab      	itete	ge
 80032ac:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 80032ae:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 80032b0:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 80032b2:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 80032b6:	bfac      	ite	ge
 80032b8:	eb03 0902 	addge.w	r9, r3, r2
 80032bc:	1ad7      	sublt	r7, r2, r3
 80032be:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80032c0:	eba3 0801 	sub.w	r8, r3, r1
 80032c4:	4490      	add	r8, r2
 80032c6:	4ba1      	ldr	r3, [pc, #644]	; (800354c <_strtod_l+0x95c>)
 80032c8:	f108 38ff 	add.w	r8, r8, #4294967295
 80032cc:	4598      	cmp	r8, r3
 80032ce:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80032d2:	f280 80c7 	bge.w	8003464 <_strtod_l+0x874>
 80032d6:	eba3 0308 	sub.w	r3, r3, r8
 80032da:	2b1f      	cmp	r3, #31
 80032dc:	eba2 0203 	sub.w	r2, r2, r3
 80032e0:	f04f 0101 	mov.w	r1, #1
 80032e4:	f300 80b1 	bgt.w	800344a <_strtod_l+0x85a>
 80032e8:	fa01 f303 	lsl.w	r3, r1, r3
 80032ec:	930d      	str	r3, [sp, #52]	; 0x34
 80032ee:	2300      	movs	r3, #0
 80032f0:	9308      	str	r3, [sp, #32]
 80032f2:	eb09 0802 	add.w	r8, r9, r2
 80032f6:	9b04      	ldr	r3, [sp, #16]
 80032f8:	45c1      	cmp	r9, r8
 80032fa:	4417      	add	r7, r2
 80032fc:	441f      	add	r7, r3
 80032fe:	464b      	mov	r3, r9
 8003300:	bfa8      	it	ge
 8003302:	4643      	movge	r3, r8
 8003304:	42bb      	cmp	r3, r7
 8003306:	bfa8      	it	ge
 8003308:	463b      	movge	r3, r7
 800330a:	2b00      	cmp	r3, #0
 800330c:	bfc2      	ittt	gt
 800330e:	eba8 0803 	subgt.w	r8, r8, r3
 8003312:	1aff      	subgt	r7, r7, r3
 8003314:	eba9 0903 	subgt.w	r9, r9, r3
 8003318:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800331a:	2b00      	cmp	r3, #0
 800331c:	dd17      	ble.n	800334e <_strtod_l+0x75e>
 800331e:	4631      	mov	r1, r6
 8003320:	461a      	mov	r2, r3
 8003322:	4620      	mov	r0, r4
 8003324:	f001 ff2c 	bl	8005180 <__pow5mult>
 8003328:	4606      	mov	r6, r0
 800332a:	2800      	cmp	r0, #0
 800332c:	f43f aea8 	beq.w	8003080 <_strtod_l+0x490>
 8003330:	4601      	mov	r1, r0
 8003332:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8003334:	4620      	mov	r0, r4
 8003336:	f001 fe79 	bl	800502c <__multiply>
 800333a:	900b      	str	r0, [sp, #44]	; 0x2c
 800333c:	2800      	cmp	r0, #0
 800333e:	f43f ae9f 	beq.w	8003080 <_strtod_l+0x490>
 8003342:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003344:	4620      	mov	r0, r4
 8003346:	f001 fd59 	bl	8004dfc <_Bfree>
 800334a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800334c:	9318      	str	r3, [sp, #96]	; 0x60
 800334e:	f1b8 0f00 	cmp.w	r8, #0
 8003352:	f300 808c 	bgt.w	800346e <_strtod_l+0x87e>
 8003356:	9b06      	ldr	r3, [sp, #24]
 8003358:	2b00      	cmp	r3, #0
 800335a:	dd08      	ble.n	800336e <_strtod_l+0x77e>
 800335c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800335e:	9905      	ldr	r1, [sp, #20]
 8003360:	4620      	mov	r0, r4
 8003362:	f001 ff0d 	bl	8005180 <__pow5mult>
 8003366:	9005      	str	r0, [sp, #20]
 8003368:	2800      	cmp	r0, #0
 800336a:	f43f ae89 	beq.w	8003080 <_strtod_l+0x490>
 800336e:	2f00      	cmp	r7, #0
 8003370:	dd08      	ble.n	8003384 <_strtod_l+0x794>
 8003372:	9905      	ldr	r1, [sp, #20]
 8003374:	463a      	mov	r2, r7
 8003376:	4620      	mov	r0, r4
 8003378:	f001 ff5c 	bl	8005234 <__lshift>
 800337c:	9005      	str	r0, [sp, #20]
 800337e:	2800      	cmp	r0, #0
 8003380:	f43f ae7e 	beq.w	8003080 <_strtod_l+0x490>
 8003384:	f1b9 0f00 	cmp.w	r9, #0
 8003388:	dd08      	ble.n	800339c <_strtod_l+0x7ac>
 800338a:	4631      	mov	r1, r6
 800338c:	464a      	mov	r2, r9
 800338e:	4620      	mov	r0, r4
 8003390:	f001 ff50 	bl	8005234 <__lshift>
 8003394:	4606      	mov	r6, r0
 8003396:	2800      	cmp	r0, #0
 8003398:	f43f ae72 	beq.w	8003080 <_strtod_l+0x490>
 800339c:	9a05      	ldr	r2, [sp, #20]
 800339e:	9918      	ldr	r1, [sp, #96]	; 0x60
 80033a0:	4620      	mov	r0, r4
 80033a2:	f001 ffd3 	bl	800534c <__mdiff>
 80033a6:	4605      	mov	r5, r0
 80033a8:	2800      	cmp	r0, #0
 80033aa:	f43f ae69 	beq.w	8003080 <_strtod_l+0x490>
 80033ae:	68c3      	ldr	r3, [r0, #12]
 80033b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80033b2:	2300      	movs	r3, #0
 80033b4:	60c3      	str	r3, [r0, #12]
 80033b6:	4631      	mov	r1, r6
 80033b8:	f001 ffac 	bl	8005314 <__mcmp>
 80033bc:	2800      	cmp	r0, #0
 80033be:	da60      	bge.n	8003482 <_strtod_l+0x892>
 80033c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80033c2:	ea53 030a 	orrs.w	r3, r3, sl
 80033c6:	f040 8082 	bne.w	80034ce <_strtod_l+0x8de>
 80033ca:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	d17d      	bne.n	80034ce <_strtod_l+0x8de>
 80033d2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80033d6:	0d1b      	lsrs	r3, r3, #20
 80033d8:	051b      	lsls	r3, r3, #20
 80033da:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80033de:	d976      	bls.n	80034ce <_strtod_l+0x8de>
 80033e0:	696b      	ldr	r3, [r5, #20]
 80033e2:	b913      	cbnz	r3, 80033ea <_strtod_l+0x7fa>
 80033e4:	692b      	ldr	r3, [r5, #16]
 80033e6:	2b01      	cmp	r3, #1
 80033e8:	dd71      	ble.n	80034ce <_strtod_l+0x8de>
 80033ea:	4629      	mov	r1, r5
 80033ec:	2201      	movs	r2, #1
 80033ee:	4620      	mov	r0, r4
 80033f0:	f001 ff20 	bl	8005234 <__lshift>
 80033f4:	4631      	mov	r1, r6
 80033f6:	4605      	mov	r5, r0
 80033f8:	f001 ff8c 	bl	8005314 <__mcmp>
 80033fc:	2800      	cmp	r0, #0
 80033fe:	dd66      	ble.n	80034ce <_strtod_l+0x8de>
 8003400:	9904      	ldr	r1, [sp, #16]
 8003402:	4a53      	ldr	r2, [pc, #332]	; (8003550 <_strtod_l+0x960>)
 8003404:	465b      	mov	r3, fp
 8003406:	2900      	cmp	r1, #0
 8003408:	f000 8081 	beq.w	800350e <_strtod_l+0x91e>
 800340c:	ea02 010b 	and.w	r1, r2, fp
 8003410:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003414:	dc7b      	bgt.n	800350e <_strtod_l+0x91e>
 8003416:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800341a:	f77f aea9 	ble.w	8003170 <_strtod_l+0x580>
 800341e:	4b4d      	ldr	r3, [pc, #308]	; (8003554 <_strtod_l+0x964>)
 8003420:	4650      	mov	r0, sl
 8003422:	4659      	mov	r1, fp
 8003424:	2200      	movs	r2, #0
 8003426:	f7fd f8ef 	bl	8000608 <__aeabi_dmul>
 800342a:	460b      	mov	r3, r1
 800342c:	4303      	orrs	r3, r0
 800342e:	bf08      	it	eq
 8003430:	2322      	moveq	r3, #34	; 0x22
 8003432:	4682      	mov	sl, r0
 8003434:	468b      	mov	fp, r1
 8003436:	bf08      	it	eq
 8003438:	6023      	streq	r3, [r4, #0]
 800343a:	e62b      	b.n	8003094 <_strtod_l+0x4a4>
 800343c:	f04f 32ff 	mov.w	r2, #4294967295
 8003440:	fa02 f303 	lsl.w	r3, r2, r3
 8003444:	ea03 0a0a 	and.w	sl, r3, sl
 8003448:	e6e3      	b.n	8003212 <_strtod_l+0x622>
 800344a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800344e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8003452:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8003456:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800345a:	fa01 f308 	lsl.w	r3, r1, r8
 800345e:	9308      	str	r3, [sp, #32]
 8003460:	910d      	str	r1, [sp, #52]	; 0x34
 8003462:	e746      	b.n	80032f2 <_strtod_l+0x702>
 8003464:	2300      	movs	r3, #0
 8003466:	9308      	str	r3, [sp, #32]
 8003468:	2301      	movs	r3, #1
 800346a:	930d      	str	r3, [sp, #52]	; 0x34
 800346c:	e741      	b.n	80032f2 <_strtod_l+0x702>
 800346e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003470:	4642      	mov	r2, r8
 8003472:	4620      	mov	r0, r4
 8003474:	f001 fede 	bl	8005234 <__lshift>
 8003478:	9018      	str	r0, [sp, #96]	; 0x60
 800347a:	2800      	cmp	r0, #0
 800347c:	f47f af6b 	bne.w	8003356 <_strtod_l+0x766>
 8003480:	e5fe      	b.n	8003080 <_strtod_l+0x490>
 8003482:	465f      	mov	r7, fp
 8003484:	d16e      	bne.n	8003564 <_strtod_l+0x974>
 8003486:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003488:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800348c:	b342      	cbz	r2, 80034e0 <_strtod_l+0x8f0>
 800348e:	4a32      	ldr	r2, [pc, #200]	; (8003558 <_strtod_l+0x968>)
 8003490:	4293      	cmp	r3, r2
 8003492:	d128      	bne.n	80034e6 <_strtod_l+0x8f6>
 8003494:	9b04      	ldr	r3, [sp, #16]
 8003496:	4651      	mov	r1, sl
 8003498:	b1eb      	cbz	r3, 80034d6 <_strtod_l+0x8e6>
 800349a:	4b2d      	ldr	r3, [pc, #180]	; (8003550 <_strtod_l+0x960>)
 800349c:	403b      	ands	r3, r7
 800349e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80034a2:	f04f 32ff 	mov.w	r2, #4294967295
 80034a6:	d819      	bhi.n	80034dc <_strtod_l+0x8ec>
 80034a8:	0d1b      	lsrs	r3, r3, #20
 80034aa:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80034ae:	fa02 f303 	lsl.w	r3, r2, r3
 80034b2:	4299      	cmp	r1, r3
 80034b4:	d117      	bne.n	80034e6 <_strtod_l+0x8f6>
 80034b6:	4b29      	ldr	r3, [pc, #164]	; (800355c <_strtod_l+0x96c>)
 80034b8:	429f      	cmp	r7, r3
 80034ba:	d102      	bne.n	80034c2 <_strtod_l+0x8d2>
 80034bc:	3101      	adds	r1, #1
 80034be:	f43f addf 	beq.w	8003080 <_strtod_l+0x490>
 80034c2:	4b23      	ldr	r3, [pc, #140]	; (8003550 <_strtod_l+0x960>)
 80034c4:	403b      	ands	r3, r7
 80034c6:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80034ca:	f04f 0a00 	mov.w	sl, #0
 80034ce:	9b04      	ldr	r3, [sp, #16]
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d1a4      	bne.n	800341e <_strtod_l+0x82e>
 80034d4:	e5de      	b.n	8003094 <_strtod_l+0x4a4>
 80034d6:	f04f 33ff 	mov.w	r3, #4294967295
 80034da:	e7ea      	b.n	80034b2 <_strtod_l+0x8c2>
 80034dc:	4613      	mov	r3, r2
 80034de:	e7e8      	b.n	80034b2 <_strtod_l+0x8c2>
 80034e0:	ea53 030a 	orrs.w	r3, r3, sl
 80034e4:	d08c      	beq.n	8003400 <_strtod_l+0x810>
 80034e6:	9b08      	ldr	r3, [sp, #32]
 80034e8:	b1db      	cbz	r3, 8003522 <_strtod_l+0x932>
 80034ea:	423b      	tst	r3, r7
 80034ec:	d0ef      	beq.n	80034ce <_strtod_l+0x8de>
 80034ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80034f0:	9a04      	ldr	r2, [sp, #16]
 80034f2:	4650      	mov	r0, sl
 80034f4:	4659      	mov	r1, fp
 80034f6:	b1c3      	cbz	r3, 800352a <_strtod_l+0x93a>
 80034f8:	f7ff fb5c 	bl	8002bb4 <sulp>
 80034fc:	4602      	mov	r2, r0
 80034fe:	460b      	mov	r3, r1
 8003500:	ec51 0b18 	vmov	r0, r1, d8
 8003504:	f7fc feca 	bl	800029c <__adddf3>
 8003508:	4682      	mov	sl, r0
 800350a:	468b      	mov	fp, r1
 800350c:	e7df      	b.n	80034ce <_strtod_l+0x8de>
 800350e:	4013      	ands	r3, r2
 8003510:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003514:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8003518:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800351c:	f04f 3aff 	mov.w	sl, #4294967295
 8003520:	e7d5      	b.n	80034ce <_strtod_l+0x8de>
 8003522:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003524:	ea13 0f0a 	tst.w	r3, sl
 8003528:	e7e0      	b.n	80034ec <_strtod_l+0x8fc>
 800352a:	f7ff fb43 	bl	8002bb4 <sulp>
 800352e:	4602      	mov	r2, r0
 8003530:	460b      	mov	r3, r1
 8003532:	ec51 0b18 	vmov	r0, r1, d8
 8003536:	f7fc feaf 	bl	8000298 <__aeabi_dsub>
 800353a:	2200      	movs	r2, #0
 800353c:	2300      	movs	r3, #0
 800353e:	4682      	mov	sl, r0
 8003540:	468b      	mov	fp, r1
 8003542:	f7fd fac9 	bl	8000ad8 <__aeabi_dcmpeq>
 8003546:	2800      	cmp	r0, #0
 8003548:	d0c1      	beq.n	80034ce <_strtod_l+0x8de>
 800354a:	e611      	b.n	8003170 <_strtod_l+0x580>
 800354c:	fffffc02 	.word	0xfffffc02
 8003550:	7ff00000 	.word	0x7ff00000
 8003554:	39500000 	.word	0x39500000
 8003558:	000fffff 	.word	0x000fffff
 800355c:	7fefffff 	.word	0x7fefffff
 8003560:	08006880 	.word	0x08006880
 8003564:	4631      	mov	r1, r6
 8003566:	4628      	mov	r0, r5
 8003568:	f002 f852 	bl	8005610 <__ratio>
 800356c:	ec59 8b10 	vmov	r8, r9, d0
 8003570:	ee10 0a10 	vmov	r0, s0
 8003574:	2200      	movs	r2, #0
 8003576:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800357a:	4649      	mov	r1, r9
 800357c:	f7fd fac0 	bl	8000b00 <__aeabi_dcmple>
 8003580:	2800      	cmp	r0, #0
 8003582:	d07a      	beq.n	800367a <_strtod_l+0xa8a>
 8003584:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003586:	2b00      	cmp	r3, #0
 8003588:	d04a      	beq.n	8003620 <_strtod_l+0xa30>
 800358a:	4b95      	ldr	r3, [pc, #596]	; (80037e0 <_strtod_l+0xbf0>)
 800358c:	2200      	movs	r2, #0
 800358e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003592:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80037e0 <_strtod_l+0xbf0>
 8003596:	f04f 0800 	mov.w	r8, #0
 800359a:	4b92      	ldr	r3, [pc, #584]	; (80037e4 <_strtod_l+0xbf4>)
 800359c:	403b      	ands	r3, r7
 800359e:	930d      	str	r3, [sp, #52]	; 0x34
 80035a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80035a2:	4b91      	ldr	r3, [pc, #580]	; (80037e8 <_strtod_l+0xbf8>)
 80035a4:	429a      	cmp	r2, r3
 80035a6:	f040 80b0 	bne.w	800370a <_strtod_l+0xb1a>
 80035aa:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80035ae:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 80035b2:	ec4b ab10 	vmov	d0, sl, fp
 80035b6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80035ba:	f001 ff51 	bl	8005460 <__ulp>
 80035be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80035c2:	ec53 2b10 	vmov	r2, r3, d0
 80035c6:	f7fd f81f 	bl	8000608 <__aeabi_dmul>
 80035ca:	4652      	mov	r2, sl
 80035cc:	465b      	mov	r3, fp
 80035ce:	f7fc fe65 	bl	800029c <__adddf3>
 80035d2:	460b      	mov	r3, r1
 80035d4:	4983      	ldr	r1, [pc, #524]	; (80037e4 <_strtod_l+0xbf4>)
 80035d6:	4a85      	ldr	r2, [pc, #532]	; (80037ec <_strtod_l+0xbfc>)
 80035d8:	4019      	ands	r1, r3
 80035da:	4291      	cmp	r1, r2
 80035dc:	4682      	mov	sl, r0
 80035de:	d960      	bls.n	80036a2 <_strtod_l+0xab2>
 80035e0:	ee18 3a90 	vmov	r3, s17
 80035e4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80035e8:	4293      	cmp	r3, r2
 80035ea:	d104      	bne.n	80035f6 <_strtod_l+0xa06>
 80035ec:	ee18 3a10 	vmov	r3, s16
 80035f0:	3301      	adds	r3, #1
 80035f2:	f43f ad45 	beq.w	8003080 <_strtod_l+0x490>
 80035f6:	f8df b200 	ldr.w	fp, [pc, #512]	; 80037f8 <_strtod_l+0xc08>
 80035fa:	f04f 3aff 	mov.w	sl, #4294967295
 80035fe:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003600:	4620      	mov	r0, r4
 8003602:	f001 fbfb 	bl	8004dfc <_Bfree>
 8003606:	9905      	ldr	r1, [sp, #20]
 8003608:	4620      	mov	r0, r4
 800360a:	f001 fbf7 	bl	8004dfc <_Bfree>
 800360e:	4631      	mov	r1, r6
 8003610:	4620      	mov	r0, r4
 8003612:	f001 fbf3 	bl	8004dfc <_Bfree>
 8003616:	4629      	mov	r1, r5
 8003618:	4620      	mov	r0, r4
 800361a:	f001 fbef 	bl	8004dfc <_Bfree>
 800361e:	e61a      	b.n	8003256 <_strtod_l+0x666>
 8003620:	f1ba 0f00 	cmp.w	sl, #0
 8003624:	d11b      	bne.n	800365e <_strtod_l+0xa6e>
 8003626:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800362a:	b9f3      	cbnz	r3, 800366a <_strtod_l+0xa7a>
 800362c:	4b6c      	ldr	r3, [pc, #432]	; (80037e0 <_strtod_l+0xbf0>)
 800362e:	2200      	movs	r2, #0
 8003630:	4640      	mov	r0, r8
 8003632:	4649      	mov	r1, r9
 8003634:	f7fd fa5a 	bl	8000aec <__aeabi_dcmplt>
 8003638:	b9d0      	cbnz	r0, 8003670 <_strtod_l+0xa80>
 800363a:	4640      	mov	r0, r8
 800363c:	4649      	mov	r1, r9
 800363e:	4b6c      	ldr	r3, [pc, #432]	; (80037f0 <_strtod_l+0xc00>)
 8003640:	2200      	movs	r2, #0
 8003642:	f7fc ffe1 	bl	8000608 <__aeabi_dmul>
 8003646:	4680      	mov	r8, r0
 8003648:	4689      	mov	r9, r1
 800364a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800364e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8003652:	9315      	str	r3, [sp, #84]	; 0x54
 8003654:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003658:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800365c:	e79d      	b.n	800359a <_strtod_l+0x9aa>
 800365e:	f1ba 0f01 	cmp.w	sl, #1
 8003662:	d102      	bne.n	800366a <_strtod_l+0xa7a>
 8003664:	2f00      	cmp	r7, #0
 8003666:	f43f ad83 	beq.w	8003170 <_strtod_l+0x580>
 800366a:	4b62      	ldr	r3, [pc, #392]	; (80037f4 <_strtod_l+0xc04>)
 800366c:	2200      	movs	r2, #0
 800366e:	e78e      	b.n	800358e <_strtod_l+0x99e>
 8003670:	f8df 917c 	ldr.w	r9, [pc, #380]	; 80037f0 <_strtod_l+0xc00>
 8003674:	f04f 0800 	mov.w	r8, #0
 8003678:	e7e7      	b.n	800364a <_strtod_l+0xa5a>
 800367a:	4b5d      	ldr	r3, [pc, #372]	; (80037f0 <_strtod_l+0xc00>)
 800367c:	4640      	mov	r0, r8
 800367e:	4649      	mov	r1, r9
 8003680:	2200      	movs	r2, #0
 8003682:	f7fc ffc1 	bl	8000608 <__aeabi_dmul>
 8003686:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003688:	4680      	mov	r8, r0
 800368a:	4689      	mov	r9, r1
 800368c:	b933      	cbnz	r3, 800369c <_strtod_l+0xaac>
 800368e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003692:	900e      	str	r0, [sp, #56]	; 0x38
 8003694:	930f      	str	r3, [sp, #60]	; 0x3c
 8003696:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800369a:	e7dd      	b.n	8003658 <_strtod_l+0xa68>
 800369c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 80036a0:	e7f9      	b.n	8003696 <_strtod_l+0xaa6>
 80036a2:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 80036a6:	9b04      	ldr	r3, [sp, #16]
 80036a8:	2b00      	cmp	r3, #0
 80036aa:	d1a8      	bne.n	80035fe <_strtod_l+0xa0e>
 80036ac:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80036b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80036b2:	0d1b      	lsrs	r3, r3, #20
 80036b4:	051b      	lsls	r3, r3, #20
 80036b6:	429a      	cmp	r2, r3
 80036b8:	d1a1      	bne.n	80035fe <_strtod_l+0xa0e>
 80036ba:	4640      	mov	r0, r8
 80036bc:	4649      	mov	r1, r9
 80036be:	f7fd faeb 	bl	8000c98 <__aeabi_d2lz>
 80036c2:	f7fc ff73 	bl	80005ac <__aeabi_l2d>
 80036c6:	4602      	mov	r2, r0
 80036c8:	460b      	mov	r3, r1
 80036ca:	4640      	mov	r0, r8
 80036cc:	4649      	mov	r1, r9
 80036ce:	f7fc fde3 	bl	8000298 <__aeabi_dsub>
 80036d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80036d4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80036d8:	ea43 030a 	orr.w	r3, r3, sl
 80036dc:	4313      	orrs	r3, r2
 80036de:	4680      	mov	r8, r0
 80036e0:	4689      	mov	r9, r1
 80036e2:	d055      	beq.n	8003790 <_strtod_l+0xba0>
 80036e4:	a336      	add	r3, pc, #216	; (adr r3, 80037c0 <_strtod_l+0xbd0>)
 80036e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036ea:	f7fd f9ff 	bl	8000aec <__aeabi_dcmplt>
 80036ee:	2800      	cmp	r0, #0
 80036f0:	f47f acd0 	bne.w	8003094 <_strtod_l+0x4a4>
 80036f4:	a334      	add	r3, pc, #208	; (adr r3, 80037c8 <_strtod_l+0xbd8>)
 80036f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036fa:	4640      	mov	r0, r8
 80036fc:	4649      	mov	r1, r9
 80036fe:	f7fd fa13 	bl	8000b28 <__aeabi_dcmpgt>
 8003702:	2800      	cmp	r0, #0
 8003704:	f43f af7b 	beq.w	80035fe <_strtod_l+0xa0e>
 8003708:	e4c4      	b.n	8003094 <_strtod_l+0x4a4>
 800370a:	9b04      	ldr	r3, [sp, #16]
 800370c:	b333      	cbz	r3, 800375c <_strtod_l+0xb6c>
 800370e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003710:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003714:	d822      	bhi.n	800375c <_strtod_l+0xb6c>
 8003716:	a32e      	add	r3, pc, #184	; (adr r3, 80037d0 <_strtod_l+0xbe0>)
 8003718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800371c:	4640      	mov	r0, r8
 800371e:	4649      	mov	r1, r9
 8003720:	f7fd f9ee 	bl	8000b00 <__aeabi_dcmple>
 8003724:	b1a0      	cbz	r0, 8003750 <_strtod_l+0xb60>
 8003726:	4649      	mov	r1, r9
 8003728:	4640      	mov	r0, r8
 800372a:	f7fd fa45 	bl	8000bb8 <__aeabi_d2uiz>
 800372e:	2801      	cmp	r0, #1
 8003730:	bf38      	it	cc
 8003732:	2001      	movcc	r0, #1
 8003734:	f7fc feee 	bl	8000514 <__aeabi_ui2d>
 8003738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800373a:	4680      	mov	r8, r0
 800373c:	4689      	mov	r9, r1
 800373e:	bb23      	cbnz	r3, 800378a <_strtod_l+0xb9a>
 8003740:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003744:	9010      	str	r0, [sp, #64]	; 0x40
 8003746:	9311      	str	r3, [sp, #68]	; 0x44
 8003748:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800374c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8003750:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003752:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003754:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8003758:	1a9b      	subs	r3, r3, r2
 800375a:	9309      	str	r3, [sp, #36]	; 0x24
 800375c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8003760:	eeb0 0a48 	vmov.f32	s0, s16
 8003764:	eef0 0a68 	vmov.f32	s1, s17
 8003768:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800376c:	f001 fe78 	bl	8005460 <__ulp>
 8003770:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8003774:	ec53 2b10 	vmov	r2, r3, d0
 8003778:	f7fc ff46 	bl	8000608 <__aeabi_dmul>
 800377c:	ec53 2b18 	vmov	r2, r3, d8
 8003780:	f7fc fd8c 	bl	800029c <__adddf3>
 8003784:	4682      	mov	sl, r0
 8003786:	468b      	mov	fp, r1
 8003788:	e78d      	b.n	80036a6 <_strtod_l+0xab6>
 800378a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800378e:	e7db      	b.n	8003748 <_strtod_l+0xb58>
 8003790:	a311      	add	r3, pc, #68	; (adr r3, 80037d8 <_strtod_l+0xbe8>)
 8003792:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003796:	f7fd f9a9 	bl	8000aec <__aeabi_dcmplt>
 800379a:	e7b2      	b.n	8003702 <_strtod_l+0xb12>
 800379c:	2300      	movs	r3, #0
 800379e:	930a      	str	r3, [sp, #40]	; 0x28
 80037a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80037a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80037a4:	6013      	str	r3, [r2, #0]
 80037a6:	f7ff ba6b 	b.w	8002c80 <_strtod_l+0x90>
 80037aa:	2a65      	cmp	r2, #101	; 0x65
 80037ac:	f43f ab5f 	beq.w	8002e6e <_strtod_l+0x27e>
 80037b0:	2a45      	cmp	r2, #69	; 0x45
 80037b2:	f43f ab5c 	beq.w	8002e6e <_strtod_l+0x27e>
 80037b6:	2301      	movs	r3, #1
 80037b8:	f7ff bb94 	b.w	8002ee4 <_strtod_l+0x2f4>
 80037bc:	f3af 8000 	nop.w
 80037c0:	94a03595 	.word	0x94a03595
 80037c4:	3fdfffff 	.word	0x3fdfffff
 80037c8:	35afe535 	.word	0x35afe535
 80037cc:	3fe00000 	.word	0x3fe00000
 80037d0:	ffc00000 	.word	0xffc00000
 80037d4:	41dfffff 	.word	0x41dfffff
 80037d8:	94a03595 	.word	0x94a03595
 80037dc:	3fcfffff 	.word	0x3fcfffff
 80037e0:	3ff00000 	.word	0x3ff00000
 80037e4:	7ff00000 	.word	0x7ff00000
 80037e8:	7fe00000 	.word	0x7fe00000
 80037ec:	7c9fffff 	.word	0x7c9fffff
 80037f0:	3fe00000 	.word	0x3fe00000
 80037f4:	bff00000 	.word	0xbff00000
 80037f8:	7fefffff 	.word	0x7fefffff

080037fc <_strtod_r>:
 80037fc:	4b01      	ldr	r3, [pc, #4]	; (8003804 <_strtod_r+0x8>)
 80037fe:	f7ff b9f7 	b.w	8002bf0 <_strtod_l>
 8003802:	bf00      	nop
 8003804:	2000006c 	.word	0x2000006c

08003808 <_strtol_l.constprop.0>:
 8003808:	2b01      	cmp	r3, #1
 800380a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800380e:	d001      	beq.n	8003814 <_strtol_l.constprop.0+0xc>
 8003810:	2b24      	cmp	r3, #36	; 0x24
 8003812:	d906      	bls.n	8003822 <_strtol_l.constprop.0+0x1a>
 8003814:	f7fe fafc 	bl	8001e10 <__errno>
 8003818:	2316      	movs	r3, #22
 800381a:	6003      	str	r3, [r0, #0]
 800381c:	2000      	movs	r0, #0
 800381e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003822:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8003908 <_strtol_l.constprop.0+0x100>
 8003826:	460d      	mov	r5, r1
 8003828:	462e      	mov	r6, r5
 800382a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800382e:	f814 700c 	ldrb.w	r7, [r4, ip]
 8003832:	f017 0708 	ands.w	r7, r7, #8
 8003836:	d1f7      	bne.n	8003828 <_strtol_l.constprop.0+0x20>
 8003838:	2c2d      	cmp	r4, #45	; 0x2d
 800383a:	d132      	bne.n	80038a2 <_strtol_l.constprop.0+0x9a>
 800383c:	782c      	ldrb	r4, [r5, #0]
 800383e:	2701      	movs	r7, #1
 8003840:	1cb5      	adds	r5, r6, #2
 8003842:	2b00      	cmp	r3, #0
 8003844:	d05b      	beq.n	80038fe <_strtol_l.constprop.0+0xf6>
 8003846:	2b10      	cmp	r3, #16
 8003848:	d109      	bne.n	800385e <_strtol_l.constprop.0+0x56>
 800384a:	2c30      	cmp	r4, #48	; 0x30
 800384c:	d107      	bne.n	800385e <_strtol_l.constprop.0+0x56>
 800384e:	782c      	ldrb	r4, [r5, #0]
 8003850:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8003854:	2c58      	cmp	r4, #88	; 0x58
 8003856:	d14d      	bne.n	80038f4 <_strtol_l.constprop.0+0xec>
 8003858:	786c      	ldrb	r4, [r5, #1]
 800385a:	2310      	movs	r3, #16
 800385c:	3502      	adds	r5, #2
 800385e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8003862:	f108 38ff 	add.w	r8, r8, #4294967295
 8003866:	f04f 0c00 	mov.w	ip, #0
 800386a:	fbb8 f9f3 	udiv	r9, r8, r3
 800386e:	4666      	mov	r6, ip
 8003870:	fb03 8a19 	mls	sl, r3, r9, r8
 8003874:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8003878:	f1be 0f09 	cmp.w	lr, #9
 800387c:	d816      	bhi.n	80038ac <_strtol_l.constprop.0+0xa4>
 800387e:	4674      	mov	r4, lr
 8003880:	42a3      	cmp	r3, r4
 8003882:	dd24      	ble.n	80038ce <_strtol_l.constprop.0+0xc6>
 8003884:	f1bc 0f00 	cmp.w	ip, #0
 8003888:	db1e      	blt.n	80038c8 <_strtol_l.constprop.0+0xc0>
 800388a:	45b1      	cmp	r9, r6
 800388c:	d31c      	bcc.n	80038c8 <_strtol_l.constprop.0+0xc0>
 800388e:	d101      	bne.n	8003894 <_strtol_l.constprop.0+0x8c>
 8003890:	45a2      	cmp	sl, r4
 8003892:	db19      	blt.n	80038c8 <_strtol_l.constprop.0+0xc0>
 8003894:	fb06 4603 	mla	r6, r6, r3, r4
 8003898:	f04f 0c01 	mov.w	ip, #1
 800389c:	f815 4b01 	ldrb.w	r4, [r5], #1
 80038a0:	e7e8      	b.n	8003874 <_strtol_l.constprop.0+0x6c>
 80038a2:	2c2b      	cmp	r4, #43	; 0x2b
 80038a4:	bf04      	itt	eq
 80038a6:	782c      	ldrbeq	r4, [r5, #0]
 80038a8:	1cb5      	addeq	r5, r6, #2
 80038aa:	e7ca      	b.n	8003842 <_strtol_l.constprop.0+0x3a>
 80038ac:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 80038b0:	f1be 0f19 	cmp.w	lr, #25
 80038b4:	d801      	bhi.n	80038ba <_strtol_l.constprop.0+0xb2>
 80038b6:	3c37      	subs	r4, #55	; 0x37
 80038b8:	e7e2      	b.n	8003880 <_strtol_l.constprop.0+0x78>
 80038ba:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 80038be:	f1be 0f19 	cmp.w	lr, #25
 80038c2:	d804      	bhi.n	80038ce <_strtol_l.constprop.0+0xc6>
 80038c4:	3c57      	subs	r4, #87	; 0x57
 80038c6:	e7db      	b.n	8003880 <_strtol_l.constprop.0+0x78>
 80038c8:	f04f 3cff 	mov.w	ip, #4294967295
 80038cc:	e7e6      	b.n	800389c <_strtol_l.constprop.0+0x94>
 80038ce:	f1bc 0f00 	cmp.w	ip, #0
 80038d2:	da05      	bge.n	80038e0 <_strtol_l.constprop.0+0xd8>
 80038d4:	2322      	movs	r3, #34	; 0x22
 80038d6:	6003      	str	r3, [r0, #0]
 80038d8:	4646      	mov	r6, r8
 80038da:	b942      	cbnz	r2, 80038ee <_strtol_l.constprop.0+0xe6>
 80038dc:	4630      	mov	r0, r6
 80038de:	e79e      	b.n	800381e <_strtol_l.constprop.0+0x16>
 80038e0:	b107      	cbz	r7, 80038e4 <_strtol_l.constprop.0+0xdc>
 80038e2:	4276      	negs	r6, r6
 80038e4:	2a00      	cmp	r2, #0
 80038e6:	d0f9      	beq.n	80038dc <_strtol_l.constprop.0+0xd4>
 80038e8:	f1bc 0f00 	cmp.w	ip, #0
 80038ec:	d000      	beq.n	80038f0 <_strtol_l.constprop.0+0xe8>
 80038ee:	1e69      	subs	r1, r5, #1
 80038f0:	6011      	str	r1, [r2, #0]
 80038f2:	e7f3      	b.n	80038dc <_strtol_l.constprop.0+0xd4>
 80038f4:	2430      	movs	r4, #48	; 0x30
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d1b1      	bne.n	800385e <_strtol_l.constprop.0+0x56>
 80038fa:	2308      	movs	r3, #8
 80038fc:	e7af      	b.n	800385e <_strtol_l.constprop.0+0x56>
 80038fe:	2c30      	cmp	r4, #48	; 0x30
 8003900:	d0a5      	beq.n	800384e <_strtol_l.constprop.0+0x46>
 8003902:	230a      	movs	r3, #10
 8003904:	e7ab      	b.n	800385e <_strtol_l.constprop.0+0x56>
 8003906:	bf00      	nop
 8003908:	080068a9 	.word	0x080068a9

0800390c <_strtol_r>:
 800390c:	f7ff bf7c 	b.w	8003808 <_strtol_l.constprop.0>

08003910 <_vsiprintf_r>:
 8003910:	b500      	push	{lr}
 8003912:	b09b      	sub	sp, #108	; 0x6c
 8003914:	9100      	str	r1, [sp, #0]
 8003916:	9104      	str	r1, [sp, #16]
 8003918:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800391c:	9105      	str	r1, [sp, #20]
 800391e:	9102      	str	r1, [sp, #8]
 8003920:	4905      	ldr	r1, [pc, #20]	; (8003938 <_vsiprintf_r+0x28>)
 8003922:	9103      	str	r1, [sp, #12]
 8003924:	4669      	mov	r1, sp
 8003926:	f002 f83d 	bl	80059a4 <_svfiprintf_r>
 800392a:	9b00      	ldr	r3, [sp, #0]
 800392c:	2200      	movs	r2, #0
 800392e:	701a      	strb	r2, [r3, #0]
 8003930:	b01b      	add	sp, #108	; 0x6c
 8003932:	f85d fb04 	ldr.w	pc, [sp], #4
 8003936:	bf00      	nop
 8003938:	ffff0208 	.word	0xffff0208

0800393c <vsiprintf>:
 800393c:	4613      	mov	r3, r2
 800393e:	460a      	mov	r2, r1
 8003940:	4601      	mov	r1, r0
 8003942:	4802      	ldr	r0, [pc, #8]	; (800394c <vsiprintf+0x10>)
 8003944:	6800      	ldr	r0, [r0, #0]
 8003946:	f7ff bfe3 	b.w	8003910 <_vsiprintf_r>
 800394a:	bf00      	nop
 800394c:	20000004 	.word	0x20000004

08003950 <quorem>:
 8003950:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003954:	6903      	ldr	r3, [r0, #16]
 8003956:	690c      	ldr	r4, [r1, #16]
 8003958:	42a3      	cmp	r3, r4
 800395a:	4607      	mov	r7, r0
 800395c:	f2c0 8081 	blt.w	8003a62 <quorem+0x112>
 8003960:	3c01      	subs	r4, #1
 8003962:	f101 0814 	add.w	r8, r1, #20
 8003966:	f100 0514 	add.w	r5, r0, #20
 800396a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800396e:	9301      	str	r3, [sp, #4]
 8003970:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003974:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003978:	3301      	adds	r3, #1
 800397a:	429a      	cmp	r2, r3
 800397c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8003980:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003984:	fbb2 f6f3 	udiv	r6, r2, r3
 8003988:	d331      	bcc.n	80039ee <quorem+0x9e>
 800398a:	f04f 0e00 	mov.w	lr, #0
 800398e:	4640      	mov	r0, r8
 8003990:	46ac      	mov	ip, r5
 8003992:	46f2      	mov	sl, lr
 8003994:	f850 2b04 	ldr.w	r2, [r0], #4
 8003998:	b293      	uxth	r3, r2
 800399a:	fb06 e303 	mla	r3, r6, r3, lr
 800399e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80039a2:	b29b      	uxth	r3, r3
 80039a4:	ebaa 0303 	sub.w	r3, sl, r3
 80039a8:	f8dc a000 	ldr.w	sl, [ip]
 80039ac:	0c12      	lsrs	r2, r2, #16
 80039ae:	fa13 f38a 	uxtah	r3, r3, sl
 80039b2:	fb06 e202 	mla	r2, r6, r2, lr
 80039b6:	9300      	str	r3, [sp, #0]
 80039b8:	9b00      	ldr	r3, [sp, #0]
 80039ba:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80039be:	b292      	uxth	r2, r2
 80039c0:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80039c4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80039c8:	f8bd 3000 	ldrh.w	r3, [sp]
 80039cc:	4581      	cmp	r9, r0
 80039ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80039d2:	f84c 3b04 	str.w	r3, [ip], #4
 80039d6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80039da:	d2db      	bcs.n	8003994 <quorem+0x44>
 80039dc:	f855 300b 	ldr.w	r3, [r5, fp]
 80039e0:	b92b      	cbnz	r3, 80039ee <quorem+0x9e>
 80039e2:	9b01      	ldr	r3, [sp, #4]
 80039e4:	3b04      	subs	r3, #4
 80039e6:	429d      	cmp	r5, r3
 80039e8:	461a      	mov	r2, r3
 80039ea:	d32e      	bcc.n	8003a4a <quorem+0xfa>
 80039ec:	613c      	str	r4, [r7, #16]
 80039ee:	4638      	mov	r0, r7
 80039f0:	f001 fc90 	bl	8005314 <__mcmp>
 80039f4:	2800      	cmp	r0, #0
 80039f6:	db24      	blt.n	8003a42 <quorem+0xf2>
 80039f8:	3601      	adds	r6, #1
 80039fa:	4628      	mov	r0, r5
 80039fc:	f04f 0c00 	mov.w	ip, #0
 8003a00:	f858 2b04 	ldr.w	r2, [r8], #4
 8003a04:	f8d0 e000 	ldr.w	lr, [r0]
 8003a08:	b293      	uxth	r3, r2
 8003a0a:	ebac 0303 	sub.w	r3, ip, r3
 8003a0e:	0c12      	lsrs	r2, r2, #16
 8003a10:	fa13 f38e 	uxtah	r3, r3, lr
 8003a14:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003a18:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003a1c:	b29b      	uxth	r3, r3
 8003a1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003a22:	45c1      	cmp	r9, r8
 8003a24:	f840 3b04 	str.w	r3, [r0], #4
 8003a28:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003a2c:	d2e8      	bcs.n	8003a00 <quorem+0xb0>
 8003a2e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003a32:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003a36:	b922      	cbnz	r2, 8003a42 <quorem+0xf2>
 8003a38:	3b04      	subs	r3, #4
 8003a3a:	429d      	cmp	r5, r3
 8003a3c:	461a      	mov	r2, r3
 8003a3e:	d30a      	bcc.n	8003a56 <quorem+0x106>
 8003a40:	613c      	str	r4, [r7, #16]
 8003a42:	4630      	mov	r0, r6
 8003a44:	b003      	add	sp, #12
 8003a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a4a:	6812      	ldr	r2, [r2, #0]
 8003a4c:	3b04      	subs	r3, #4
 8003a4e:	2a00      	cmp	r2, #0
 8003a50:	d1cc      	bne.n	80039ec <quorem+0x9c>
 8003a52:	3c01      	subs	r4, #1
 8003a54:	e7c7      	b.n	80039e6 <quorem+0x96>
 8003a56:	6812      	ldr	r2, [r2, #0]
 8003a58:	3b04      	subs	r3, #4
 8003a5a:	2a00      	cmp	r2, #0
 8003a5c:	d1f0      	bne.n	8003a40 <quorem+0xf0>
 8003a5e:	3c01      	subs	r4, #1
 8003a60:	e7eb      	b.n	8003a3a <quorem+0xea>
 8003a62:	2000      	movs	r0, #0
 8003a64:	e7ee      	b.n	8003a44 <quorem+0xf4>
	...

08003a68 <_dtoa_r>:
 8003a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a6c:	ed2d 8b04 	vpush	{d8-d9}
 8003a70:	ec57 6b10 	vmov	r6, r7, d0
 8003a74:	b093      	sub	sp, #76	; 0x4c
 8003a76:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8003a78:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003a7c:	9106      	str	r1, [sp, #24]
 8003a7e:	ee10 aa10 	vmov	sl, s0
 8003a82:	4604      	mov	r4, r0
 8003a84:	9209      	str	r2, [sp, #36]	; 0x24
 8003a86:	930c      	str	r3, [sp, #48]	; 0x30
 8003a88:	46bb      	mov	fp, r7
 8003a8a:	b975      	cbnz	r5, 8003aaa <_dtoa_r+0x42>
 8003a8c:	2010      	movs	r0, #16
 8003a8e:	f001 f94d 	bl	8004d2c <malloc>
 8003a92:	4602      	mov	r2, r0
 8003a94:	6260      	str	r0, [r4, #36]	; 0x24
 8003a96:	b920      	cbnz	r0, 8003aa2 <_dtoa_r+0x3a>
 8003a98:	4ba7      	ldr	r3, [pc, #668]	; (8003d38 <_dtoa_r+0x2d0>)
 8003a9a:	21ea      	movs	r1, #234	; 0xea
 8003a9c:	48a7      	ldr	r0, [pc, #668]	; (8003d3c <_dtoa_r+0x2d4>)
 8003a9e:	f002 f8bd 	bl	8005c1c <__assert_func>
 8003aa2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003aa6:	6005      	str	r5, [r0, #0]
 8003aa8:	60c5      	str	r5, [r0, #12]
 8003aaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003aac:	6819      	ldr	r1, [r3, #0]
 8003aae:	b151      	cbz	r1, 8003ac6 <_dtoa_r+0x5e>
 8003ab0:	685a      	ldr	r2, [r3, #4]
 8003ab2:	604a      	str	r2, [r1, #4]
 8003ab4:	2301      	movs	r3, #1
 8003ab6:	4093      	lsls	r3, r2
 8003ab8:	608b      	str	r3, [r1, #8]
 8003aba:	4620      	mov	r0, r4
 8003abc:	f001 f99e 	bl	8004dfc <_Bfree>
 8003ac0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ac2:	2200      	movs	r2, #0
 8003ac4:	601a      	str	r2, [r3, #0]
 8003ac6:	1e3b      	subs	r3, r7, #0
 8003ac8:	bfaa      	itet	ge
 8003aca:	2300      	movge	r3, #0
 8003acc:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8003ad0:	f8c8 3000 	strge.w	r3, [r8]
 8003ad4:	4b9a      	ldr	r3, [pc, #616]	; (8003d40 <_dtoa_r+0x2d8>)
 8003ad6:	bfbc      	itt	lt
 8003ad8:	2201      	movlt	r2, #1
 8003ada:	f8c8 2000 	strlt.w	r2, [r8]
 8003ade:	ea33 030b 	bics.w	r3, r3, fp
 8003ae2:	d11b      	bne.n	8003b1c <_dtoa_r+0xb4>
 8003ae4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003ae6:	f242 730f 	movw	r3, #9999	; 0x270f
 8003aea:	6013      	str	r3, [r2, #0]
 8003aec:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003af0:	4333      	orrs	r3, r6
 8003af2:	f000 8592 	beq.w	800461a <_dtoa_r+0xbb2>
 8003af6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003af8:	b963      	cbnz	r3, 8003b14 <_dtoa_r+0xac>
 8003afa:	4b92      	ldr	r3, [pc, #584]	; (8003d44 <_dtoa_r+0x2dc>)
 8003afc:	e022      	b.n	8003b44 <_dtoa_r+0xdc>
 8003afe:	4b92      	ldr	r3, [pc, #584]	; (8003d48 <_dtoa_r+0x2e0>)
 8003b00:	9301      	str	r3, [sp, #4]
 8003b02:	3308      	adds	r3, #8
 8003b04:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003b06:	6013      	str	r3, [r2, #0]
 8003b08:	9801      	ldr	r0, [sp, #4]
 8003b0a:	b013      	add	sp, #76	; 0x4c
 8003b0c:	ecbd 8b04 	vpop	{d8-d9}
 8003b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b14:	4b8b      	ldr	r3, [pc, #556]	; (8003d44 <_dtoa_r+0x2dc>)
 8003b16:	9301      	str	r3, [sp, #4]
 8003b18:	3303      	adds	r3, #3
 8003b1a:	e7f3      	b.n	8003b04 <_dtoa_r+0x9c>
 8003b1c:	2200      	movs	r2, #0
 8003b1e:	2300      	movs	r3, #0
 8003b20:	4650      	mov	r0, sl
 8003b22:	4659      	mov	r1, fp
 8003b24:	f7fc ffd8 	bl	8000ad8 <__aeabi_dcmpeq>
 8003b28:	ec4b ab19 	vmov	d9, sl, fp
 8003b2c:	4680      	mov	r8, r0
 8003b2e:	b158      	cbz	r0, 8003b48 <_dtoa_r+0xe0>
 8003b30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003b32:	2301      	movs	r3, #1
 8003b34:	6013      	str	r3, [r2, #0]
 8003b36:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	f000 856b 	beq.w	8004614 <_dtoa_r+0xbac>
 8003b3e:	4883      	ldr	r0, [pc, #524]	; (8003d4c <_dtoa_r+0x2e4>)
 8003b40:	6018      	str	r0, [r3, #0]
 8003b42:	1e43      	subs	r3, r0, #1
 8003b44:	9301      	str	r3, [sp, #4]
 8003b46:	e7df      	b.n	8003b08 <_dtoa_r+0xa0>
 8003b48:	ec4b ab10 	vmov	d0, sl, fp
 8003b4c:	aa10      	add	r2, sp, #64	; 0x40
 8003b4e:	a911      	add	r1, sp, #68	; 0x44
 8003b50:	4620      	mov	r0, r4
 8003b52:	f001 fd01 	bl	8005558 <__d2b>
 8003b56:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8003b5a:	ee08 0a10 	vmov	s16, r0
 8003b5e:	2d00      	cmp	r5, #0
 8003b60:	f000 8084 	beq.w	8003c6c <_dtoa_r+0x204>
 8003b64:	ee19 3a90 	vmov	r3, s19
 8003b68:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003b6c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8003b70:	4656      	mov	r6, sl
 8003b72:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8003b76:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003b7a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8003b7e:	4b74      	ldr	r3, [pc, #464]	; (8003d50 <_dtoa_r+0x2e8>)
 8003b80:	2200      	movs	r2, #0
 8003b82:	4630      	mov	r0, r6
 8003b84:	4639      	mov	r1, r7
 8003b86:	f7fc fb87 	bl	8000298 <__aeabi_dsub>
 8003b8a:	a365      	add	r3, pc, #404	; (adr r3, 8003d20 <_dtoa_r+0x2b8>)
 8003b8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b90:	f7fc fd3a 	bl	8000608 <__aeabi_dmul>
 8003b94:	a364      	add	r3, pc, #400	; (adr r3, 8003d28 <_dtoa_r+0x2c0>)
 8003b96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b9a:	f7fc fb7f 	bl	800029c <__adddf3>
 8003b9e:	4606      	mov	r6, r0
 8003ba0:	4628      	mov	r0, r5
 8003ba2:	460f      	mov	r7, r1
 8003ba4:	f7fc fcc6 	bl	8000534 <__aeabi_i2d>
 8003ba8:	a361      	add	r3, pc, #388	; (adr r3, 8003d30 <_dtoa_r+0x2c8>)
 8003baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bae:	f7fc fd2b 	bl	8000608 <__aeabi_dmul>
 8003bb2:	4602      	mov	r2, r0
 8003bb4:	460b      	mov	r3, r1
 8003bb6:	4630      	mov	r0, r6
 8003bb8:	4639      	mov	r1, r7
 8003bba:	f7fc fb6f 	bl	800029c <__adddf3>
 8003bbe:	4606      	mov	r6, r0
 8003bc0:	460f      	mov	r7, r1
 8003bc2:	f7fc ffd1 	bl	8000b68 <__aeabi_d2iz>
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	9000      	str	r0, [sp, #0]
 8003bca:	2300      	movs	r3, #0
 8003bcc:	4630      	mov	r0, r6
 8003bce:	4639      	mov	r1, r7
 8003bd0:	f7fc ff8c 	bl	8000aec <__aeabi_dcmplt>
 8003bd4:	b150      	cbz	r0, 8003bec <_dtoa_r+0x184>
 8003bd6:	9800      	ldr	r0, [sp, #0]
 8003bd8:	f7fc fcac 	bl	8000534 <__aeabi_i2d>
 8003bdc:	4632      	mov	r2, r6
 8003bde:	463b      	mov	r3, r7
 8003be0:	f7fc ff7a 	bl	8000ad8 <__aeabi_dcmpeq>
 8003be4:	b910      	cbnz	r0, 8003bec <_dtoa_r+0x184>
 8003be6:	9b00      	ldr	r3, [sp, #0]
 8003be8:	3b01      	subs	r3, #1
 8003bea:	9300      	str	r3, [sp, #0]
 8003bec:	9b00      	ldr	r3, [sp, #0]
 8003bee:	2b16      	cmp	r3, #22
 8003bf0:	d85a      	bhi.n	8003ca8 <_dtoa_r+0x240>
 8003bf2:	9a00      	ldr	r2, [sp, #0]
 8003bf4:	4b57      	ldr	r3, [pc, #348]	; (8003d54 <_dtoa_r+0x2ec>)
 8003bf6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003bfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bfe:	ec51 0b19 	vmov	r0, r1, d9
 8003c02:	f7fc ff73 	bl	8000aec <__aeabi_dcmplt>
 8003c06:	2800      	cmp	r0, #0
 8003c08:	d050      	beq.n	8003cac <_dtoa_r+0x244>
 8003c0a:	9b00      	ldr	r3, [sp, #0]
 8003c0c:	3b01      	subs	r3, #1
 8003c0e:	9300      	str	r3, [sp, #0]
 8003c10:	2300      	movs	r3, #0
 8003c12:	930b      	str	r3, [sp, #44]	; 0x2c
 8003c14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003c16:	1b5d      	subs	r5, r3, r5
 8003c18:	1e6b      	subs	r3, r5, #1
 8003c1a:	9305      	str	r3, [sp, #20]
 8003c1c:	bf45      	ittet	mi
 8003c1e:	f1c5 0301 	rsbmi	r3, r5, #1
 8003c22:	9304      	strmi	r3, [sp, #16]
 8003c24:	2300      	movpl	r3, #0
 8003c26:	2300      	movmi	r3, #0
 8003c28:	bf4c      	ite	mi
 8003c2a:	9305      	strmi	r3, [sp, #20]
 8003c2c:	9304      	strpl	r3, [sp, #16]
 8003c2e:	9b00      	ldr	r3, [sp, #0]
 8003c30:	2b00      	cmp	r3, #0
 8003c32:	db3d      	blt.n	8003cb0 <_dtoa_r+0x248>
 8003c34:	9b05      	ldr	r3, [sp, #20]
 8003c36:	9a00      	ldr	r2, [sp, #0]
 8003c38:	920a      	str	r2, [sp, #40]	; 0x28
 8003c3a:	4413      	add	r3, r2
 8003c3c:	9305      	str	r3, [sp, #20]
 8003c3e:	2300      	movs	r3, #0
 8003c40:	9307      	str	r3, [sp, #28]
 8003c42:	9b06      	ldr	r3, [sp, #24]
 8003c44:	2b09      	cmp	r3, #9
 8003c46:	f200 8089 	bhi.w	8003d5c <_dtoa_r+0x2f4>
 8003c4a:	2b05      	cmp	r3, #5
 8003c4c:	bfc4      	itt	gt
 8003c4e:	3b04      	subgt	r3, #4
 8003c50:	9306      	strgt	r3, [sp, #24]
 8003c52:	9b06      	ldr	r3, [sp, #24]
 8003c54:	f1a3 0302 	sub.w	r3, r3, #2
 8003c58:	bfcc      	ite	gt
 8003c5a:	2500      	movgt	r5, #0
 8003c5c:	2501      	movle	r5, #1
 8003c5e:	2b03      	cmp	r3, #3
 8003c60:	f200 8087 	bhi.w	8003d72 <_dtoa_r+0x30a>
 8003c64:	e8df f003 	tbb	[pc, r3]
 8003c68:	59383a2d 	.word	0x59383a2d
 8003c6c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8003c70:	441d      	add	r5, r3
 8003c72:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003c76:	2b20      	cmp	r3, #32
 8003c78:	bfc1      	itttt	gt
 8003c7a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8003c7e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8003c82:	fa0b f303 	lslgt.w	r3, fp, r3
 8003c86:	fa26 f000 	lsrgt.w	r0, r6, r0
 8003c8a:	bfda      	itte	le
 8003c8c:	f1c3 0320 	rsble	r3, r3, #32
 8003c90:	fa06 f003 	lslle.w	r0, r6, r3
 8003c94:	4318      	orrgt	r0, r3
 8003c96:	f7fc fc3d 	bl	8000514 <__aeabi_ui2d>
 8003c9a:	2301      	movs	r3, #1
 8003c9c:	4606      	mov	r6, r0
 8003c9e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8003ca2:	3d01      	subs	r5, #1
 8003ca4:	930e      	str	r3, [sp, #56]	; 0x38
 8003ca6:	e76a      	b.n	8003b7e <_dtoa_r+0x116>
 8003ca8:	2301      	movs	r3, #1
 8003caa:	e7b2      	b.n	8003c12 <_dtoa_r+0x1aa>
 8003cac:	900b      	str	r0, [sp, #44]	; 0x2c
 8003cae:	e7b1      	b.n	8003c14 <_dtoa_r+0x1ac>
 8003cb0:	9b04      	ldr	r3, [sp, #16]
 8003cb2:	9a00      	ldr	r2, [sp, #0]
 8003cb4:	1a9b      	subs	r3, r3, r2
 8003cb6:	9304      	str	r3, [sp, #16]
 8003cb8:	4253      	negs	r3, r2
 8003cba:	9307      	str	r3, [sp, #28]
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	930a      	str	r3, [sp, #40]	; 0x28
 8003cc0:	e7bf      	b.n	8003c42 <_dtoa_r+0x1da>
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	9308      	str	r3, [sp, #32]
 8003cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	dc55      	bgt.n	8003d78 <_dtoa_r+0x310>
 8003ccc:	2301      	movs	r3, #1
 8003cce:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003cd2:	461a      	mov	r2, r3
 8003cd4:	9209      	str	r2, [sp, #36]	; 0x24
 8003cd6:	e00c      	b.n	8003cf2 <_dtoa_r+0x28a>
 8003cd8:	2301      	movs	r3, #1
 8003cda:	e7f3      	b.n	8003cc4 <_dtoa_r+0x25c>
 8003cdc:	2300      	movs	r3, #0
 8003cde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ce0:	9308      	str	r3, [sp, #32]
 8003ce2:	9b00      	ldr	r3, [sp, #0]
 8003ce4:	4413      	add	r3, r2
 8003ce6:	9302      	str	r3, [sp, #8]
 8003ce8:	3301      	adds	r3, #1
 8003cea:	2b01      	cmp	r3, #1
 8003cec:	9303      	str	r3, [sp, #12]
 8003cee:	bfb8      	it	lt
 8003cf0:	2301      	movlt	r3, #1
 8003cf2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8003cf4:	2200      	movs	r2, #0
 8003cf6:	6042      	str	r2, [r0, #4]
 8003cf8:	2204      	movs	r2, #4
 8003cfa:	f102 0614 	add.w	r6, r2, #20
 8003cfe:	429e      	cmp	r6, r3
 8003d00:	6841      	ldr	r1, [r0, #4]
 8003d02:	d93d      	bls.n	8003d80 <_dtoa_r+0x318>
 8003d04:	4620      	mov	r0, r4
 8003d06:	f001 f839 	bl	8004d7c <_Balloc>
 8003d0a:	9001      	str	r0, [sp, #4]
 8003d0c:	2800      	cmp	r0, #0
 8003d0e:	d13b      	bne.n	8003d88 <_dtoa_r+0x320>
 8003d10:	4b11      	ldr	r3, [pc, #68]	; (8003d58 <_dtoa_r+0x2f0>)
 8003d12:	4602      	mov	r2, r0
 8003d14:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8003d18:	e6c0      	b.n	8003a9c <_dtoa_r+0x34>
 8003d1a:	2301      	movs	r3, #1
 8003d1c:	e7df      	b.n	8003cde <_dtoa_r+0x276>
 8003d1e:	bf00      	nop
 8003d20:	636f4361 	.word	0x636f4361
 8003d24:	3fd287a7 	.word	0x3fd287a7
 8003d28:	8b60c8b3 	.word	0x8b60c8b3
 8003d2c:	3fc68a28 	.word	0x3fc68a28
 8003d30:	509f79fb 	.word	0x509f79fb
 8003d34:	3fd34413 	.word	0x3fd34413
 8003d38:	080069b6 	.word	0x080069b6
 8003d3c:	080069cd 	.word	0x080069cd
 8003d40:	7ff00000 	.word	0x7ff00000
 8003d44:	080069b2 	.word	0x080069b2
 8003d48:	080069a9 	.word	0x080069a9
 8003d4c:	0800682d 	.word	0x0800682d
 8003d50:	3ff80000 	.word	0x3ff80000
 8003d54:	08006b38 	.word	0x08006b38
 8003d58:	08006a28 	.word	0x08006a28
 8003d5c:	2501      	movs	r5, #1
 8003d5e:	2300      	movs	r3, #0
 8003d60:	9306      	str	r3, [sp, #24]
 8003d62:	9508      	str	r5, [sp, #32]
 8003d64:	f04f 33ff 	mov.w	r3, #4294967295
 8003d68:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003d6c:	2200      	movs	r2, #0
 8003d6e:	2312      	movs	r3, #18
 8003d70:	e7b0      	b.n	8003cd4 <_dtoa_r+0x26c>
 8003d72:	2301      	movs	r3, #1
 8003d74:	9308      	str	r3, [sp, #32]
 8003d76:	e7f5      	b.n	8003d64 <_dtoa_r+0x2fc>
 8003d78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d7a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003d7e:	e7b8      	b.n	8003cf2 <_dtoa_r+0x28a>
 8003d80:	3101      	adds	r1, #1
 8003d82:	6041      	str	r1, [r0, #4]
 8003d84:	0052      	lsls	r2, r2, #1
 8003d86:	e7b8      	b.n	8003cfa <_dtoa_r+0x292>
 8003d88:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003d8a:	9a01      	ldr	r2, [sp, #4]
 8003d8c:	601a      	str	r2, [r3, #0]
 8003d8e:	9b03      	ldr	r3, [sp, #12]
 8003d90:	2b0e      	cmp	r3, #14
 8003d92:	f200 809d 	bhi.w	8003ed0 <_dtoa_r+0x468>
 8003d96:	2d00      	cmp	r5, #0
 8003d98:	f000 809a 	beq.w	8003ed0 <_dtoa_r+0x468>
 8003d9c:	9b00      	ldr	r3, [sp, #0]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	dd32      	ble.n	8003e08 <_dtoa_r+0x3a0>
 8003da2:	4ab7      	ldr	r2, [pc, #732]	; (8004080 <_dtoa_r+0x618>)
 8003da4:	f003 030f 	and.w	r3, r3, #15
 8003da8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003dac:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003db0:	9b00      	ldr	r3, [sp, #0]
 8003db2:	05d8      	lsls	r0, r3, #23
 8003db4:	ea4f 1723 	mov.w	r7, r3, asr #4
 8003db8:	d516      	bpl.n	8003de8 <_dtoa_r+0x380>
 8003dba:	4bb2      	ldr	r3, [pc, #712]	; (8004084 <_dtoa_r+0x61c>)
 8003dbc:	ec51 0b19 	vmov	r0, r1, d9
 8003dc0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003dc4:	f7fc fd4a 	bl	800085c <__aeabi_ddiv>
 8003dc8:	f007 070f 	and.w	r7, r7, #15
 8003dcc:	4682      	mov	sl, r0
 8003dce:	468b      	mov	fp, r1
 8003dd0:	2503      	movs	r5, #3
 8003dd2:	4eac      	ldr	r6, [pc, #688]	; (8004084 <_dtoa_r+0x61c>)
 8003dd4:	b957      	cbnz	r7, 8003dec <_dtoa_r+0x384>
 8003dd6:	4642      	mov	r2, r8
 8003dd8:	464b      	mov	r3, r9
 8003dda:	4650      	mov	r0, sl
 8003ddc:	4659      	mov	r1, fp
 8003dde:	f7fc fd3d 	bl	800085c <__aeabi_ddiv>
 8003de2:	4682      	mov	sl, r0
 8003de4:	468b      	mov	fp, r1
 8003de6:	e028      	b.n	8003e3a <_dtoa_r+0x3d2>
 8003de8:	2502      	movs	r5, #2
 8003dea:	e7f2      	b.n	8003dd2 <_dtoa_r+0x36a>
 8003dec:	07f9      	lsls	r1, r7, #31
 8003dee:	d508      	bpl.n	8003e02 <_dtoa_r+0x39a>
 8003df0:	4640      	mov	r0, r8
 8003df2:	4649      	mov	r1, r9
 8003df4:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003df8:	f7fc fc06 	bl	8000608 <__aeabi_dmul>
 8003dfc:	3501      	adds	r5, #1
 8003dfe:	4680      	mov	r8, r0
 8003e00:	4689      	mov	r9, r1
 8003e02:	107f      	asrs	r7, r7, #1
 8003e04:	3608      	adds	r6, #8
 8003e06:	e7e5      	b.n	8003dd4 <_dtoa_r+0x36c>
 8003e08:	f000 809b 	beq.w	8003f42 <_dtoa_r+0x4da>
 8003e0c:	9b00      	ldr	r3, [sp, #0]
 8003e0e:	4f9d      	ldr	r7, [pc, #628]	; (8004084 <_dtoa_r+0x61c>)
 8003e10:	425e      	negs	r6, r3
 8003e12:	4b9b      	ldr	r3, [pc, #620]	; (8004080 <_dtoa_r+0x618>)
 8003e14:	f006 020f 	and.w	r2, r6, #15
 8003e18:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003e1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e20:	ec51 0b19 	vmov	r0, r1, d9
 8003e24:	f7fc fbf0 	bl	8000608 <__aeabi_dmul>
 8003e28:	1136      	asrs	r6, r6, #4
 8003e2a:	4682      	mov	sl, r0
 8003e2c:	468b      	mov	fp, r1
 8003e2e:	2300      	movs	r3, #0
 8003e30:	2502      	movs	r5, #2
 8003e32:	2e00      	cmp	r6, #0
 8003e34:	d17a      	bne.n	8003f2c <_dtoa_r+0x4c4>
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d1d3      	bne.n	8003de2 <_dtoa_r+0x37a>
 8003e3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	f000 8082 	beq.w	8003f46 <_dtoa_r+0x4de>
 8003e42:	4b91      	ldr	r3, [pc, #580]	; (8004088 <_dtoa_r+0x620>)
 8003e44:	2200      	movs	r2, #0
 8003e46:	4650      	mov	r0, sl
 8003e48:	4659      	mov	r1, fp
 8003e4a:	f7fc fe4f 	bl	8000aec <__aeabi_dcmplt>
 8003e4e:	2800      	cmp	r0, #0
 8003e50:	d079      	beq.n	8003f46 <_dtoa_r+0x4de>
 8003e52:	9b03      	ldr	r3, [sp, #12]
 8003e54:	2b00      	cmp	r3, #0
 8003e56:	d076      	beq.n	8003f46 <_dtoa_r+0x4de>
 8003e58:	9b02      	ldr	r3, [sp, #8]
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	dd36      	ble.n	8003ecc <_dtoa_r+0x464>
 8003e5e:	9b00      	ldr	r3, [sp, #0]
 8003e60:	4650      	mov	r0, sl
 8003e62:	4659      	mov	r1, fp
 8003e64:	1e5f      	subs	r7, r3, #1
 8003e66:	2200      	movs	r2, #0
 8003e68:	4b88      	ldr	r3, [pc, #544]	; (800408c <_dtoa_r+0x624>)
 8003e6a:	f7fc fbcd 	bl	8000608 <__aeabi_dmul>
 8003e6e:	9e02      	ldr	r6, [sp, #8]
 8003e70:	4682      	mov	sl, r0
 8003e72:	468b      	mov	fp, r1
 8003e74:	3501      	adds	r5, #1
 8003e76:	4628      	mov	r0, r5
 8003e78:	f7fc fb5c 	bl	8000534 <__aeabi_i2d>
 8003e7c:	4652      	mov	r2, sl
 8003e7e:	465b      	mov	r3, fp
 8003e80:	f7fc fbc2 	bl	8000608 <__aeabi_dmul>
 8003e84:	4b82      	ldr	r3, [pc, #520]	; (8004090 <_dtoa_r+0x628>)
 8003e86:	2200      	movs	r2, #0
 8003e88:	f7fc fa08 	bl	800029c <__adddf3>
 8003e8c:	46d0      	mov	r8, sl
 8003e8e:	46d9      	mov	r9, fp
 8003e90:	4682      	mov	sl, r0
 8003e92:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8003e96:	2e00      	cmp	r6, #0
 8003e98:	d158      	bne.n	8003f4c <_dtoa_r+0x4e4>
 8003e9a:	4b7e      	ldr	r3, [pc, #504]	; (8004094 <_dtoa_r+0x62c>)
 8003e9c:	2200      	movs	r2, #0
 8003e9e:	4640      	mov	r0, r8
 8003ea0:	4649      	mov	r1, r9
 8003ea2:	f7fc f9f9 	bl	8000298 <__aeabi_dsub>
 8003ea6:	4652      	mov	r2, sl
 8003ea8:	465b      	mov	r3, fp
 8003eaa:	4680      	mov	r8, r0
 8003eac:	4689      	mov	r9, r1
 8003eae:	f7fc fe3b 	bl	8000b28 <__aeabi_dcmpgt>
 8003eb2:	2800      	cmp	r0, #0
 8003eb4:	f040 8295 	bne.w	80043e2 <_dtoa_r+0x97a>
 8003eb8:	4652      	mov	r2, sl
 8003eba:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8003ebe:	4640      	mov	r0, r8
 8003ec0:	4649      	mov	r1, r9
 8003ec2:	f7fc fe13 	bl	8000aec <__aeabi_dcmplt>
 8003ec6:	2800      	cmp	r0, #0
 8003ec8:	f040 8289 	bne.w	80043de <_dtoa_r+0x976>
 8003ecc:	ec5b ab19 	vmov	sl, fp, d9
 8003ed0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	f2c0 8148 	blt.w	8004168 <_dtoa_r+0x700>
 8003ed8:	9a00      	ldr	r2, [sp, #0]
 8003eda:	2a0e      	cmp	r2, #14
 8003edc:	f300 8144 	bgt.w	8004168 <_dtoa_r+0x700>
 8003ee0:	4b67      	ldr	r3, [pc, #412]	; (8004080 <_dtoa_r+0x618>)
 8003ee2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003ee6:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003eea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003eec:	2b00      	cmp	r3, #0
 8003eee:	f280 80d5 	bge.w	800409c <_dtoa_r+0x634>
 8003ef2:	9b03      	ldr	r3, [sp, #12]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	f300 80d1 	bgt.w	800409c <_dtoa_r+0x634>
 8003efa:	f040 826f 	bne.w	80043dc <_dtoa_r+0x974>
 8003efe:	4b65      	ldr	r3, [pc, #404]	; (8004094 <_dtoa_r+0x62c>)
 8003f00:	2200      	movs	r2, #0
 8003f02:	4640      	mov	r0, r8
 8003f04:	4649      	mov	r1, r9
 8003f06:	f7fc fb7f 	bl	8000608 <__aeabi_dmul>
 8003f0a:	4652      	mov	r2, sl
 8003f0c:	465b      	mov	r3, fp
 8003f0e:	f7fc fe01 	bl	8000b14 <__aeabi_dcmpge>
 8003f12:	9e03      	ldr	r6, [sp, #12]
 8003f14:	4637      	mov	r7, r6
 8003f16:	2800      	cmp	r0, #0
 8003f18:	f040 8245 	bne.w	80043a6 <_dtoa_r+0x93e>
 8003f1c:	9d01      	ldr	r5, [sp, #4]
 8003f1e:	2331      	movs	r3, #49	; 0x31
 8003f20:	f805 3b01 	strb.w	r3, [r5], #1
 8003f24:	9b00      	ldr	r3, [sp, #0]
 8003f26:	3301      	adds	r3, #1
 8003f28:	9300      	str	r3, [sp, #0]
 8003f2a:	e240      	b.n	80043ae <_dtoa_r+0x946>
 8003f2c:	07f2      	lsls	r2, r6, #31
 8003f2e:	d505      	bpl.n	8003f3c <_dtoa_r+0x4d4>
 8003f30:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003f34:	f7fc fb68 	bl	8000608 <__aeabi_dmul>
 8003f38:	3501      	adds	r5, #1
 8003f3a:	2301      	movs	r3, #1
 8003f3c:	1076      	asrs	r6, r6, #1
 8003f3e:	3708      	adds	r7, #8
 8003f40:	e777      	b.n	8003e32 <_dtoa_r+0x3ca>
 8003f42:	2502      	movs	r5, #2
 8003f44:	e779      	b.n	8003e3a <_dtoa_r+0x3d2>
 8003f46:	9f00      	ldr	r7, [sp, #0]
 8003f48:	9e03      	ldr	r6, [sp, #12]
 8003f4a:	e794      	b.n	8003e76 <_dtoa_r+0x40e>
 8003f4c:	9901      	ldr	r1, [sp, #4]
 8003f4e:	4b4c      	ldr	r3, [pc, #304]	; (8004080 <_dtoa_r+0x618>)
 8003f50:	4431      	add	r1, r6
 8003f52:	910d      	str	r1, [sp, #52]	; 0x34
 8003f54:	9908      	ldr	r1, [sp, #32]
 8003f56:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003f5a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003f5e:	2900      	cmp	r1, #0
 8003f60:	d043      	beq.n	8003fea <_dtoa_r+0x582>
 8003f62:	494d      	ldr	r1, [pc, #308]	; (8004098 <_dtoa_r+0x630>)
 8003f64:	2000      	movs	r0, #0
 8003f66:	f7fc fc79 	bl	800085c <__aeabi_ddiv>
 8003f6a:	4652      	mov	r2, sl
 8003f6c:	465b      	mov	r3, fp
 8003f6e:	f7fc f993 	bl	8000298 <__aeabi_dsub>
 8003f72:	9d01      	ldr	r5, [sp, #4]
 8003f74:	4682      	mov	sl, r0
 8003f76:	468b      	mov	fp, r1
 8003f78:	4649      	mov	r1, r9
 8003f7a:	4640      	mov	r0, r8
 8003f7c:	f7fc fdf4 	bl	8000b68 <__aeabi_d2iz>
 8003f80:	4606      	mov	r6, r0
 8003f82:	f7fc fad7 	bl	8000534 <__aeabi_i2d>
 8003f86:	4602      	mov	r2, r0
 8003f88:	460b      	mov	r3, r1
 8003f8a:	4640      	mov	r0, r8
 8003f8c:	4649      	mov	r1, r9
 8003f8e:	f7fc f983 	bl	8000298 <__aeabi_dsub>
 8003f92:	3630      	adds	r6, #48	; 0x30
 8003f94:	f805 6b01 	strb.w	r6, [r5], #1
 8003f98:	4652      	mov	r2, sl
 8003f9a:	465b      	mov	r3, fp
 8003f9c:	4680      	mov	r8, r0
 8003f9e:	4689      	mov	r9, r1
 8003fa0:	f7fc fda4 	bl	8000aec <__aeabi_dcmplt>
 8003fa4:	2800      	cmp	r0, #0
 8003fa6:	d163      	bne.n	8004070 <_dtoa_r+0x608>
 8003fa8:	4642      	mov	r2, r8
 8003faa:	464b      	mov	r3, r9
 8003fac:	4936      	ldr	r1, [pc, #216]	; (8004088 <_dtoa_r+0x620>)
 8003fae:	2000      	movs	r0, #0
 8003fb0:	f7fc f972 	bl	8000298 <__aeabi_dsub>
 8003fb4:	4652      	mov	r2, sl
 8003fb6:	465b      	mov	r3, fp
 8003fb8:	f7fc fd98 	bl	8000aec <__aeabi_dcmplt>
 8003fbc:	2800      	cmp	r0, #0
 8003fbe:	f040 80b5 	bne.w	800412c <_dtoa_r+0x6c4>
 8003fc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003fc4:	429d      	cmp	r5, r3
 8003fc6:	d081      	beq.n	8003ecc <_dtoa_r+0x464>
 8003fc8:	4b30      	ldr	r3, [pc, #192]	; (800408c <_dtoa_r+0x624>)
 8003fca:	2200      	movs	r2, #0
 8003fcc:	4650      	mov	r0, sl
 8003fce:	4659      	mov	r1, fp
 8003fd0:	f7fc fb1a 	bl	8000608 <__aeabi_dmul>
 8003fd4:	4b2d      	ldr	r3, [pc, #180]	; (800408c <_dtoa_r+0x624>)
 8003fd6:	4682      	mov	sl, r0
 8003fd8:	468b      	mov	fp, r1
 8003fda:	4640      	mov	r0, r8
 8003fdc:	4649      	mov	r1, r9
 8003fde:	2200      	movs	r2, #0
 8003fe0:	f7fc fb12 	bl	8000608 <__aeabi_dmul>
 8003fe4:	4680      	mov	r8, r0
 8003fe6:	4689      	mov	r9, r1
 8003fe8:	e7c6      	b.n	8003f78 <_dtoa_r+0x510>
 8003fea:	4650      	mov	r0, sl
 8003fec:	4659      	mov	r1, fp
 8003fee:	f7fc fb0b 	bl	8000608 <__aeabi_dmul>
 8003ff2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003ff4:	9d01      	ldr	r5, [sp, #4]
 8003ff6:	930f      	str	r3, [sp, #60]	; 0x3c
 8003ff8:	4682      	mov	sl, r0
 8003ffa:	468b      	mov	fp, r1
 8003ffc:	4649      	mov	r1, r9
 8003ffe:	4640      	mov	r0, r8
 8004000:	f7fc fdb2 	bl	8000b68 <__aeabi_d2iz>
 8004004:	4606      	mov	r6, r0
 8004006:	f7fc fa95 	bl	8000534 <__aeabi_i2d>
 800400a:	3630      	adds	r6, #48	; 0x30
 800400c:	4602      	mov	r2, r0
 800400e:	460b      	mov	r3, r1
 8004010:	4640      	mov	r0, r8
 8004012:	4649      	mov	r1, r9
 8004014:	f7fc f940 	bl	8000298 <__aeabi_dsub>
 8004018:	f805 6b01 	strb.w	r6, [r5], #1
 800401c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800401e:	429d      	cmp	r5, r3
 8004020:	4680      	mov	r8, r0
 8004022:	4689      	mov	r9, r1
 8004024:	f04f 0200 	mov.w	r2, #0
 8004028:	d124      	bne.n	8004074 <_dtoa_r+0x60c>
 800402a:	4b1b      	ldr	r3, [pc, #108]	; (8004098 <_dtoa_r+0x630>)
 800402c:	4650      	mov	r0, sl
 800402e:	4659      	mov	r1, fp
 8004030:	f7fc f934 	bl	800029c <__adddf3>
 8004034:	4602      	mov	r2, r0
 8004036:	460b      	mov	r3, r1
 8004038:	4640      	mov	r0, r8
 800403a:	4649      	mov	r1, r9
 800403c:	f7fc fd74 	bl	8000b28 <__aeabi_dcmpgt>
 8004040:	2800      	cmp	r0, #0
 8004042:	d173      	bne.n	800412c <_dtoa_r+0x6c4>
 8004044:	4652      	mov	r2, sl
 8004046:	465b      	mov	r3, fp
 8004048:	4913      	ldr	r1, [pc, #76]	; (8004098 <_dtoa_r+0x630>)
 800404a:	2000      	movs	r0, #0
 800404c:	f7fc f924 	bl	8000298 <__aeabi_dsub>
 8004050:	4602      	mov	r2, r0
 8004052:	460b      	mov	r3, r1
 8004054:	4640      	mov	r0, r8
 8004056:	4649      	mov	r1, r9
 8004058:	f7fc fd48 	bl	8000aec <__aeabi_dcmplt>
 800405c:	2800      	cmp	r0, #0
 800405e:	f43f af35 	beq.w	8003ecc <_dtoa_r+0x464>
 8004062:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8004064:	1e6b      	subs	r3, r5, #1
 8004066:	930f      	str	r3, [sp, #60]	; 0x3c
 8004068:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800406c:	2b30      	cmp	r3, #48	; 0x30
 800406e:	d0f8      	beq.n	8004062 <_dtoa_r+0x5fa>
 8004070:	9700      	str	r7, [sp, #0]
 8004072:	e049      	b.n	8004108 <_dtoa_r+0x6a0>
 8004074:	4b05      	ldr	r3, [pc, #20]	; (800408c <_dtoa_r+0x624>)
 8004076:	f7fc fac7 	bl	8000608 <__aeabi_dmul>
 800407a:	4680      	mov	r8, r0
 800407c:	4689      	mov	r9, r1
 800407e:	e7bd      	b.n	8003ffc <_dtoa_r+0x594>
 8004080:	08006b38 	.word	0x08006b38
 8004084:	08006b10 	.word	0x08006b10
 8004088:	3ff00000 	.word	0x3ff00000
 800408c:	40240000 	.word	0x40240000
 8004090:	401c0000 	.word	0x401c0000
 8004094:	40140000 	.word	0x40140000
 8004098:	3fe00000 	.word	0x3fe00000
 800409c:	9d01      	ldr	r5, [sp, #4]
 800409e:	4656      	mov	r6, sl
 80040a0:	465f      	mov	r7, fp
 80040a2:	4642      	mov	r2, r8
 80040a4:	464b      	mov	r3, r9
 80040a6:	4630      	mov	r0, r6
 80040a8:	4639      	mov	r1, r7
 80040aa:	f7fc fbd7 	bl	800085c <__aeabi_ddiv>
 80040ae:	f7fc fd5b 	bl	8000b68 <__aeabi_d2iz>
 80040b2:	4682      	mov	sl, r0
 80040b4:	f7fc fa3e 	bl	8000534 <__aeabi_i2d>
 80040b8:	4642      	mov	r2, r8
 80040ba:	464b      	mov	r3, r9
 80040bc:	f7fc faa4 	bl	8000608 <__aeabi_dmul>
 80040c0:	4602      	mov	r2, r0
 80040c2:	460b      	mov	r3, r1
 80040c4:	4630      	mov	r0, r6
 80040c6:	4639      	mov	r1, r7
 80040c8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80040cc:	f7fc f8e4 	bl	8000298 <__aeabi_dsub>
 80040d0:	f805 6b01 	strb.w	r6, [r5], #1
 80040d4:	9e01      	ldr	r6, [sp, #4]
 80040d6:	9f03      	ldr	r7, [sp, #12]
 80040d8:	1bae      	subs	r6, r5, r6
 80040da:	42b7      	cmp	r7, r6
 80040dc:	4602      	mov	r2, r0
 80040de:	460b      	mov	r3, r1
 80040e0:	d135      	bne.n	800414e <_dtoa_r+0x6e6>
 80040e2:	f7fc f8db 	bl	800029c <__adddf3>
 80040e6:	4642      	mov	r2, r8
 80040e8:	464b      	mov	r3, r9
 80040ea:	4606      	mov	r6, r0
 80040ec:	460f      	mov	r7, r1
 80040ee:	f7fc fd1b 	bl	8000b28 <__aeabi_dcmpgt>
 80040f2:	b9d0      	cbnz	r0, 800412a <_dtoa_r+0x6c2>
 80040f4:	4642      	mov	r2, r8
 80040f6:	464b      	mov	r3, r9
 80040f8:	4630      	mov	r0, r6
 80040fa:	4639      	mov	r1, r7
 80040fc:	f7fc fcec 	bl	8000ad8 <__aeabi_dcmpeq>
 8004100:	b110      	cbz	r0, 8004108 <_dtoa_r+0x6a0>
 8004102:	f01a 0f01 	tst.w	sl, #1
 8004106:	d110      	bne.n	800412a <_dtoa_r+0x6c2>
 8004108:	4620      	mov	r0, r4
 800410a:	ee18 1a10 	vmov	r1, s16
 800410e:	f000 fe75 	bl	8004dfc <_Bfree>
 8004112:	2300      	movs	r3, #0
 8004114:	9800      	ldr	r0, [sp, #0]
 8004116:	702b      	strb	r3, [r5, #0]
 8004118:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800411a:	3001      	adds	r0, #1
 800411c:	6018      	str	r0, [r3, #0]
 800411e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004120:	2b00      	cmp	r3, #0
 8004122:	f43f acf1 	beq.w	8003b08 <_dtoa_r+0xa0>
 8004126:	601d      	str	r5, [r3, #0]
 8004128:	e4ee      	b.n	8003b08 <_dtoa_r+0xa0>
 800412a:	9f00      	ldr	r7, [sp, #0]
 800412c:	462b      	mov	r3, r5
 800412e:	461d      	mov	r5, r3
 8004130:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004134:	2a39      	cmp	r2, #57	; 0x39
 8004136:	d106      	bne.n	8004146 <_dtoa_r+0x6de>
 8004138:	9a01      	ldr	r2, [sp, #4]
 800413a:	429a      	cmp	r2, r3
 800413c:	d1f7      	bne.n	800412e <_dtoa_r+0x6c6>
 800413e:	9901      	ldr	r1, [sp, #4]
 8004140:	2230      	movs	r2, #48	; 0x30
 8004142:	3701      	adds	r7, #1
 8004144:	700a      	strb	r2, [r1, #0]
 8004146:	781a      	ldrb	r2, [r3, #0]
 8004148:	3201      	adds	r2, #1
 800414a:	701a      	strb	r2, [r3, #0]
 800414c:	e790      	b.n	8004070 <_dtoa_r+0x608>
 800414e:	4ba6      	ldr	r3, [pc, #664]	; (80043e8 <_dtoa_r+0x980>)
 8004150:	2200      	movs	r2, #0
 8004152:	f7fc fa59 	bl	8000608 <__aeabi_dmul>
 8004156:	2200      	movs	r2, #0
 8004158:	2300      	movs	r3, #0
 800415a:	4606      	mov	r6, r0
 800415c:	460f      	mov	r7, r1
 800415e:	f7fc fcbb 	bl	8000ad8 <__aeabi_dcmpeq>
 8004162:	2800      	cmp	r0, #0
 8004164:	d09d      	beq.n	80040a2 <_dtoa_r+0x63a>
 8004166:	e7cf      	b.n	8004108 <_dtoa_r+0x6a0>
 8004168:	9a08      	ldr	r2, [sp, #32]
 800416a:	2a00      	cmp	r2, #0
 800416c:	f000 80d7 	beq.w	800431e <_dtoa_r+0x8b6>
 8004170:	9a06      	ldr	r2, [sp, #24]
 8004172:	2a01      	cmp	r2, #1
 8004174:	f300 80ba 	bgt.w	80042ec <_dtoa_r+0x884>
 8004178:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800417a:	2a00      	cmp	r2, #0
 800417c:	f000 80b2 	beq.w	80042e4 <_dtoa_r+0x87c>
 8004180:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004184:	9e07      	ldr	r6, [sp, #28]
 8004186:	9d04      	ldr	r5, [sp, #16]
 8004188:	9a04      	ldr	r2, [sp, #16]
 800418a:	441a      	add	r2, r3
 800418c:	9204      	str	r2, [sp, #16]
 800418e:	9a05      	ldr	r2, [sp, #20]
 8004190:	2101      	movs	r1, #1
 8004192:	441a      	add	r2, r3
 8004194:	4620      	mov	r0, r4
 8004196:	9205      	str	r2, [sp, #20]
 8004198:	f000 ff32 	bl	8005000 <__i2b>
 800419c:	4607      	mov	r7, r0
 800419e:	2d00      	cmp	r5, #0
 80041a0:	dd0c      	ble.n	80041bc <_dtoa_r+0x754>
 80041a2:	9b05      	ldr	r3, [sp, #20]
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	dd09      	ble.n	80041bc <_dtoa_r+0x754>
 80041a8:	42ab      	cmp	r3, r5
 80041aa:	9a04      	ldr	r2, [sp, #16]
 80041ac:	bfa8      	it	ge
 80041ae:	462b      	movge	r3, r5
 80041b0:	1ad2      	subs	r2, r2, r3
 80041b2:	9204      	str	r2, [sp, #16]
 80041b4:	9a05      	ldr	r2, [sp, #20]
 80041b6:	1aed      	subs	r5, r5, r3
 80041b8:	1ad3      	subs	r3, r2, r3
 80041ba:	9305      	str	r3, [sp, #20]
 80041bc:	9b07      	ldr	r3, [sp, #28]
 80041be:	b31b      	cbz	r3, 8004208 <_dtoa_r+0x7a0>
 80041c0:	9b08      	ldr	r3, [sp, #32]
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	f000 80af 	beq.w	8004326 <_dtoa_r+0x8be>
 80041c8:	2e00      	cmp	r6, #0
 80041ca:	dd13      	ble.n	80041f4 <_dtoa_r+0x78c>
 80041cc:	4639      	mov	r1, r7
 80041ce:	4632      	mov	r2, r6
 80041d0:	4620      	mov	r0, r4
 80041d2:	f000 ffd5 	bl	8005180 <__pow5mult>
 80041d6:	ee18 2a10 	vmov	r2, s16
 80041da:	4601      	mov	r1, r0
 80041dc:	4607      	mov	r7, r0
 80041de:	4620      	mov	r0, r4
 80041e0:	f000 ff24 	bl	800502c <__multiply>
 80041e4:	ee18 1a10 	vmov	r1, s16
 80041e8:	4680      	mov	r8, r0
 80041ea:	4620      	mov	r0, r4
 80041ec:	f000 fe06 	bl	8004dfc <_Bfree>
 80041f0:	ee08 8a10 	vmov	s16, r8
 80041f4:	9b07      	ldr	r3, [sp, #28]
 80041f6:	1b9a      	subs	r2, r3, r6
 80041f8:	d006      	beq.n	8004208 <_dtoa_r+0x7a0>
 80041fa:	ee18 1a10 	vmov	r1, s16
 80041fe:	4620      	mov	r0, r4
 8004200:	f000 ffbe 	bl	8005180 <__pow5mult>
 8004204:	ee08 0a10 	vmov	s16, r0
 8004208:	2101      	movs	r1, #1
 800420a:	4620      	mov	r0, r4
 800420c:	f000 fef8 	bl	8005000 <__i2b>
 8004210:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004212:	2b00      	cmp	r3, #0
 8004214:	4606      	mov	r6, r0
 8004216:	f340 8088 	ble.w	800432a <_dtoa_r+0x8c2>
 800421a:	461a      	mov	r2, r3
 800421c:	4601      	mov	r1, r0
 800421e:	4620      	mov	r0, r4
 8004220:	f000 ffae 	bl	8005180 <__pow5mult>
 8004224:	9b06      	ldr	r3, [sp, #24]
 8004226:	2b01      	cmp	r3, #1
 8004228:	4606      	mov	r6, r0
 800422a:	f340 8081 	ble.w	8004330 <_dtoa_r+0x8c8>
 800422e:	f04f 0800 	mov.w	r8, #0
 8004232:	6933      	ldr	r3, [r6, #16]
 8004234:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004238:	6918      	ldr	r0, [r3, #16]
 800423a:	f000 fe91 	bl	8004f60 <__hi0bits>
 800423e:	f1c0 0020 	rsb	r0, r0, #32
 8004242:	9b05      	ldr	r3, [sp, #20]
 8004244:	4418      	add	r0, r3
 8004246:	f010 001f 	ands.w	r0, r0, #31
 800424a:	f000 8092 	beq.w	8004372 <_dtoa_r+0x90a>
 800424e:	f1c0 0320 	rsb	r3, r0, #32
 8004252:	2b04      	cmp	r3, #4
 8004254:	f340 808a 	ble.w	800436c <_dtoa_r+0x904>
 8004258:	f1c0 001c 	rsb	r0, r0, #28
 800425c:	9b04      	ldr	r3, [sp, #16]
 800425e:	4403      	add	r3, r0
 8004260:	9304      	str	r3, [sp, #16]
 8004262:	9b05      	ldr	r3, [sp, #20]
 8004264:	4403      	add	r3, r0
 8004266:	4405      	add	r5, r0
 8004268:	9305      	str	r3, [sp, #20]
 800426a:	9b04      	ldr	r3, [sp, #16]
 800426c:	2b00      	cmp	r3, #0
 800426e:	dd07      	ble.n	8004280 <_dtoa_r+0x818>
 8004270:	ee18 1a10 	vmov	r1, s16
 8004274:	461a      	mov	r2, r3
 8004276:	4620      	mov	r0, r4
 8004278:	f000 ffdc 	bl	8005234 <__lshift>
 800427c:	ee08 0a10 	vmov	s16, r0
 8004280:	9b05      	ldr	r3, [sp, #20]
 8004282:	2b00      	cmp	r3, #0
 8004284:	dd05      	ble.n	8004292 <_dtoa_r+0x82a>
 8004286:	4631      	mov	r1, r6
 8004288:	461a      	mov	r2, r3
 800428a:	4620      	mov	r0, r4
 800428c:	f000 ffd2 	bl	8005234 <__lshift>
 8004290:	4606      	mov	r6, r0
 8004292:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004294:	2b00      	cmp	r3, #0
 8004296:	d06e      	beq.n	8004376 <_dtoa_r+0x90e>
 8004298:	ee18 0a10 	vmov	r0, s16
 800429c:	4631      	mov	r1, r6
 800429e:	f001 f839 	bl	8005314 <__mcmp>
 80042a2:	2800      	cmp	r0, #0
 80042a4:	da67      	bge.n	8004376 <_dtoa_r+0x90e>
 80042a6:	9b00      	ldr	r3, [sp, #0]
 80042a8:	3b01      	subs	r3, #1
 80042aa:	ee18 1a10 	vmov	r1, s16
 80042ae:	9300      	str	r3, [sp, #0]
 80042b0:	220a      	movs	r2, #10
 80042b2:	2300      	movs	r3, #0
 80042b4:	4620      	mov	r0, r4
 80042b6:	f000 fdc3 	bl	8004e40 <__multadd>
 80042ba:	9b08      	ldr	r3, [sp, #32]
 80042bc:	ee08 0a10 	vmov	s16, r0
 80042c0:	2b00      	cmp	r3, #0
 80042c2:	f000 81b1 	beq.w	8004628 <_dtoa_r+0xbc0>
 80042c6:	2300      	movs	r3, #0
 80042c8:	4639      	mov	r1, r7
 80042ca:	220a      	movs	r2, #10
 80042cc:	4620      	mov	r0, r4
 80042ce:	f000 fdb7 	bl	8004e40 <__multadd>
 80042d2:	9b02      	ldr	r3, [sp, #8]
 80042d4:	2b00      	cmp	r3, #0
 80042d6:	4607      	mov	r7, r0
 80042d8:	f300 808e 	bgt.w	80043f8 <_dtoa_r+0x990>
 80042dc:	9b06      	ldr	r3, [sp, #24]
 80042de:	2b02      	cmp	r3, #2
 80042e0:	dc51      	bgt.n	8004386 <_dtoa_r+0x91e>
 80042e2:	e089      	b.n	80043f8 <_dtoa_r+0x990>
 80042e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80042e6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80042ea:	e74b      	b.n	8004184 <_dtoa_r+0x71c>
 80042ec:	9b03      	ldr	r3, [sp, #12]
 80042ee:	1e5e      	subs	r6, r3, #1
 80042f0:	9b07      	ldr	r3, [sp, #28]
 80042f2:	42b3      	cmp	r3, r6
 80042f4:	bfbf      	itttt	lt
 80042f6:	9b07      	ldrlt	r3, [sp, #28]
 80042f8:	9607      	strlt	r6, [sp, #28]
 80042fa:	1af2      	sublt	r2, r6, r3
 80042fc:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80042fe:	bfb6      	itet	lt
 8004300:	189b      	addlt	r3, r3, r2
 8004302:	1b9e      	subge	r6, r3, r6
 8004304:	930a      	strlt	r3, [sp, #40]	; 0x28
 8004306:	9b03      	ldr	r3, [sp, #12]
 8004308:	bfb8      	it	lt
 800430a:	2600      	movlt	r6, #0
 800430c:	2b00      	cmp	r3, #0
 800430e:	bfb7      	itett	lt
 8004310:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8004314:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8004318:	1a9d      	sublt	r5, r3, r2
 800431a:	2300      	movlt	r3, #0
 800431c:	e734      	b.n	8004188 <_dtoa_r+0x720>
 800431e:	9e07      	ldr	r6, [sp, #28]
 8004320:	9d04      	ldr	r5, [sp, #16]
 8004322:	9f08      	ldr	r7, [sp, #32]
 8004324:	e73b      	b.n	800419e <_dtoa_r+0x736>
 8004326:	9a07      	ldr	r2, [sp, #28]
 8004328:	e767      	b.n	80041fa <_dtoa_r+0x792>
 800432a:	9b06      	ldr	r3, [sp, #24]
 800432c:	2b01      	cmp	r3, #1
 800432e:	dc18      	bgt.n	8004362 <_dtoa_r+0x8fa>
 8004330:	f1ba 0f00 	cmp.w	sl, #0
 8004334:	d115      	bne.n	8004362 <_dtoa_r+0x8fa>
 8004336:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800433a:	b993      	cbnz	r3, 8004362 <_dtoa_r+0x8fa>
 800433c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004340:	0d1b      	lsrs	r3, r3, #20
 8004342:	051b      	lsls	r3, r3, #20
 8004344:	b183      	cbz	r3, 8004368 <_dtoa_r+0x900>
 8004346:	9b04      	ldr	r3, [sp, #16]
 8004348:	3301      	adds	r3, #1
 800434a:	9304      	str	r3, [sp, #16]
 800434c:	9b05      	ldr	r3, [sp, #20]
 800434e:	3301      	adds	r3, #1
 8004350:	9305      	str	r3, [sp, #20]
 8004352:	f04f 0801 	mov.w	r8, #1
 8004356:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004358:	2b00      	cmp	r3, #0
 800435a:	f47f af6a 	bne.w	8004232 <_dtoa_r+0x7ca>
 800435e:	2001      	movs	r0, #1
 8004360:	e76f      	b.n	8004242 <_dtoa_r+0x7da>
 8004362:	f04f 0800 	mov.w	r8, #0
 8004366:	e7f6      	b.n	8004356 <_dtoa_r+0x8ee>
 8004368:	4698      	mov	r8, r3
 800436a:	e7f4      	b.n	8004356 <_dtoa_r+0x8ee>
 800436c:	f43f af7d 	beq.w	800426a <_dtoa_r+0x802>
 8004370:	4618      	mov	r0, r3
 8004372:	301c      	adds	r0, #28
 8004374:	e772      	b.n	800425c <_dtoa_r+0x7f4>
 8004376:	9b03      	ldr	r3, [sp, #12]
 8004378:	2b00      	cmp	r3, #0
 800437a:	dc37      	bgt.n	80043ec <_dtoa_r+0x984>
 800437c:	9b06      	ldr	r3, [sp, #24]
 800437e:	2b02      	cmp	r3, #2
 8004380:	dd34      	ble.n	80043ec <_dtoa_r+0x984>
 8004382:	9b03      	ldr	r3, [sp, #12]
 8004384:	9302      	str	r3, [sp, #8]
 8004386:	9b02      	ldr	r3, [sp, #8]
 8004388:	b96b      	cbnz	r3, 80043a6 <_dtoa_r+0x93e>
 800438a:	4631      	mov	r1, r6
 800438c:	2205      	movs	r2, #5
 800438e:	4620      	mov	r0, r4
 8004390:	f000 fd56 	bl	8004e40 <__multadd>
 8004394:	4601      	mov	r1, r0
 8004396:	4606      	mov	r6, r0
 8004398:	ee18 0a10 	vmov	r0, s16
 800439c:	f000 ffba 	bl	8005314 <__mcmp>
 80043a0:	2800      	cmp	r0, #0
 80043a2:	f73f adbb 	bgt.w	8003f1c <_dtoa_r+0x4b4>
 80043a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043a8:	9d01      	ldr	r5, [sp, #4]
 80043aa:	43db      	mvns	r3, r3
 80043ac:	9300      	str	r3, [sp, #0]
 80043ae:	f04f 0800 	mov.w	r8, #0
 80043b2:	4631      	mov	r1, r6
 80043b4:	4620      	mov	r0, r4
 80043b6:	f000 fd21 	bl	8004dfc <_Bfree>
 80043ba:	2f00      	cmp	r7, #0
 80043bc:	f43f aea4 	beq.w	8004108 <_dtoa_r+0x6a0>
 80043c0:	f1b8 0f00 	cmp.w	r8, #0
 80043c4:	d005      	beq.n	80043d2 <_dtoa_r+0x96a>
 80043c6:	45b8      	cmp	r8, r7
 80043c8:	d003      	beq.n	80043d2 <_dtoa_r+0x96a>
 80043ca:	4641      	mov	r1, r8
 80043cc:	4620      	mov	r0, r4
 80043ce:	f000 fd15 	bl	8004dfc <_Bfree>
 80043d2:	4639      	mov	r1, r7
 80043d4:	4620      	mov	r0, r4
 80043d6:	f000 fd11 	bl	8004dfc <_Bfree>
 80043da:	e695      	b.n	8004108 <_dtoa_r+0x6a0>
 80043dc:	2600      	movs	r6, #0
 80043de:	4637      	mov	r7, r6
 80043e0:	e7e1      	b.n	80043a6 <_dtoa_r+0x93e>
 80043e2:	9700      	str	r7, [sp, #0]
 80043e4:	4637      	mov	r7, r6
 80043e6:	e599      	b.n	8003f1c <_dtoa_r+0x4b4>
 80043e8:	40240000 	.word	0x40240000
 80043ec:	9b08      	ldr	r3, [sp, #32]
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	f000 80ca 	beq.w	8004588 <_dtoa_r+0xb20>
 80043f4:	9b03      	ldr	r3, [sp, #12]
 80043f6:	9302      	str	r3, [sp, #8]
 80043f8:	2d00      	cmp	r5, #0
 80043fa:	dd05      	ble.n	8004408 <_dtoa_r+0x9a0>
 80043fc:	4639      	mov	r1, r7
 80043fe:	462a      	mov	r2, r5
 8004400:	4620      	mov	r0, r4
 8004402:	f000 ff17 	bl	8005234 <__lshift>
 8004406:	4607      	mov	r7, r0
 8004408:	f1b8 0f00 	cmp.w	r8, #0
 800440c:	d05b      	beq.n	80044c6 <_dtoa_r+0xa5e>
 800440e:	6879      	ldr	r1, [r7, #4]
 8004410:	4620      	mov	r0, r4
 8004412:	f000 fcb3 	bl	8004d7c <_Balloc>
 8004416:	4605      	mov	r5, r0
 8004418:	b928      	cbnz	r0, 8004426 <_dtoa_r+0x9be>
 800441a:	4b87      	ldr	r3, [pc, #540]	; (8004638 <_dtoa_r+0xbd0>)
 800441c:	4602      	mov	r2, r0
 800441e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004422:	f7ff bb3b 	b.w	8003a9c <_dtoa_r+0x34>
 8004426:	693a      	ldr	r2, [r7, #16]
 8004428:	3202      	adds	r2, #2
 800442a:	0092      	lsls	r2, r2, #2
 800442c:	f107 010c 	add.w	r1, r7, #12
 8004430:	300c      	adds	r0, #12
 8004432:	f000 fc95 	bl	8004d60 <memcpy>
 8004436:	2201      	movs	r2, #1
 8004438:	4629      	mov	r1, r5
 800443a:	4620      	mov	r0, r4
 800443c:	f000 fefa 	bl	8005234 <__lshift>
 8004440:	9b01      	ldr	r3, [sp, #4]
 8004442:	f103 0901 	add.w	r9, r3, #1
 8004446:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800444a:	4413      	add	r3, r2
 800444c:	9305      	str	r3, [sp, #20]
 800444e:	f00a 0301 	and.w	r3, sl, #1
 8004452:	46b8      	mov	r8, r7
 8004454:	9304      	str	r3, [sp, #16]
 8004456:	4607      	mov	r7, r0
 8004458:	4631      	mov	r1, r6
 800445a:	ee18 0a10 	vmov	r0, s16
 800445e:	f7ff fa77 	bl	8003950 <quorem>
 8004462:	4641      	mov	r1, r8
 8004464:	9002      	str	r0, [sp, #8]
 8004466:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800446a:	ee18 0a10 	vmov	r0, s16
 800446e:	f000 ff51 	bl	8005314 <__mcmp>
 8004472:	463a      	mov	r2, r7
 8004474:	9003      	str	r0, [sp, #12]
 8004476:	4631      	mov	r1, r6
 8004478:	4620      	mov	r0, r4
 800447a:	f000 ff67 	bl	800534c <__mdiff>
 800447e:	68c2      	ldr	r2, [r0, #12]
 8004480:	f109 3bff 	add.w	fp, r9, #4294967295
 8004484:	4605      	mov	r5, r0
 8004486:	bb02      	cbnz	r2, 80044ca <_dtoa_r+0xa62>
 8004488:	4601      	mov	r1, r0
 800448a:	ee18 0a10 	vmov	r0, s16
 800448e:	f000 ff41 	bl	8005314 <__mcmp>
 8004492:	4602      	mov	r2, r0
 8004494:	4629      	mov	r1, r5
 8004496:	4620      	mov	r0, r4
 8004498:	9207      	str	r2, [sp, #28]
 800449a:	f000 fcaf 	bl	8004dfc <_Bfree>
 800449e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80044a2:	ea43 0102 	orr.w	r1, r3, r2
 80044a6:	9b04      	ldr	r3, [sp, #16]
 80044a8:	430b      	orrs	r3, r1
 80044aa:	464d      	mov	r5, r9
 80044ac:	d10f      	bne.n	80044ce <_dtoa_r+0xa66>
 80044ae:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80044b2:	d02a      	beq.n	800450a <_dtoa_r+0xaa2>
 80044b4:	9b03      	ldr	r3, [sp, #12]
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	dd02      	ble.n	80044c0 <_dtoa_r+0xa58>
 80044ba:	9b02      	ldr	r3, [sp, #8]
 80044bc:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80044c0:	f88b a000 	strb.w	sl, [fp]
 80044c4:	e775      	b.n	80043b2 <_dtoa_r+0x94a>
 80044c6:	4638      	mov	r0, r7
 80044c8:	e7ba      	b.n	8004440 <_dtoa_r+0x9d8>
 80044ca:	2201      	movs	r2, #1
 80044cc:	e7e2      	b.n	8004494 <_dtoa_r+0xa2c>
 80044ce:	9b03      	ldr	r3, [sp, #12]
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	db04      	blt.n	80044de <_dtoa_r+0xa76>
 80044d4:	9906      	ldr	r1, [sp, #24]
 80044d6:	430b      	orrs	r3, r1
 80044d8:	9904      	ldr	r1, [sp, #16]
 80044da:	430b      	orrs	r3, r1
 80044dc:	d122      	bne.n	8004524 <_dtoa_r+0xabc>
 80044de:	2a00      	cmp	r2, #0
 80044e0:	ddee      	ble.n	80044c0 <_dtoa_r+0xa58>
 80044e2:	ee18 1a10 	vmov	r1, s16
 80044e6:	2201      	movs	r2, #1
 80044e8:	4620      	mov	r0, r4
 80044ea:	f000 fea3 	bl	8005234 <__lshift>
 80044ee:	4631      	mov	r1, r6
 80044f0:	ee08 0a10 	vmov	s16, r0
 80044f4:	f000 ff0e 	bl	8005314 <__mcmp>
 80044f8:	2800      	cmp	r0, #0
 80044fa:	dc03      	bgt.n	8004504 <_dtoa_r+0xa9c>
 80044fc:	d1e0      	bne.n	80044c0 <_dtoa_r+0xa58>
 80044fe:	f01a 0f01 	tst.w	sl, #1
 8004502:	d0dd      	beq.n	80044c0 <_dtoa_r+0xa58>
 8004504:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8004508:	d1d7      	bne.n	80044ba <_dtoa_r+0xa52>
 800450a:	2339      	movs	r3, #57	; 0x39
 800450c:	f88b 3000 	strb.w	r3, [fp]
 8004510:	462b      	mov	r3, r5
 8004512:	461d      	mov	r5, r3
 8004514:	3b01      	subs	r3, #1
 8004516:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800451a:	2a39      	cmp	r2, #57	; 0x39
 800451c:	d071      	beq.n	8004602 <_dtoa_r+0xb9a>
 800451e:	3201      	adds	r2, #1
 8004520:	701a      	strb	r2, [r3, #0]
 8004522:	e746      	b.n	80043b2 <_dtoa_r+0x94a>
 8004524:	2a00      	cmp	r2, #0
 8004526:	dd07      	ble.n	8004538 <_dtoa_r+0xad0>
 8004528:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800452c:	d0ed      	beq.n	800450a <_dtoa_r+0xaa2>
 800452e:	f10a 0301 	add.w	r3, sl, #1
 8004532:	f88b 3000 	strb.w	r3, [fp]
 8004536:	e73c      	b.n	80043b2 <_dtoa_r+0x94a>
 8004538:	9b05      	ldr	r3, [sp, #20]
 800453a:	f809 ac01 	strb.w	sl, [r9, #-1]
 800453e:	4599      	cmp	r9, r3
 8004540:	d047      	beq.n	80045d2 <_dtoa_r+0xb6a>
 8004542:	ee18 1a10 	vmov	r1, s16
 8004546:	2300      	movs	r3, #0
 8004548:	220a      	movs	r2, #10
 800454a:	4620      	mov	r0, r4
 800454c:	f000 fc78 	bl	8004e40 <__multadd>
 8004550:	45b8      	cmp	r8, r7
 8004552:	ee08 0a10 	vmov	s16, r0
 8004556:	f04f 0300 	mov.w	r3, #0
 800455a:	f04f 020a 	mov.w	r2, #10
 800455e:	4641      	mov	r1, r8
 8004560:	4620      	mov	r0, r4
 8004562:	d106      	bne.n	8004572 <_dtoa_r+0xb0a>
 8004564:	f000 fc6c 	bl	8004e40 <__multadd>
 8004568:	4680      	mov	r8, r0
 800456a:	4607      	mov	r7, r0
 800456c:	f109 0901 	add.w	r9, r9, #1
 8004570:	e772      	b.n	8004458 <_dtoa_r+0x9f0>
 8004572:	f000 fc65 	bl	8004e40 <__multadd>
 8004576:	4639      	mov	r1, r7
 8004578:	4680      	mov	r8, r0
 800457a:	2300      	movs	r3, #0
 800457c:	220a      	movs	r2, #10
 800457e:	4620      	mov	r0, r4
 8004580:	f000 fc5e 	bl	8004e40 <__multadd>
 8004584:	4607      	mov	r7, r0
 8004586:	e7f1      	b.n	800456c <_dtoa_r+0xb04>
 8004588:	9b03      	ldr	r3, [sp, #12]
 800458a:	9302      	str	r3, [sp, #8]
 800458c:	9d01      	ldr	r5, [sp, #4]
 800458e:	ee18 0a10 	vmov	r0, s16
 8004592:	4631      	mov	r1, r6
 8004594:	f7ff f9dc 	bl	8003950 <quorem>
 8004598:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800459c:	9b01      	ldr	r3, [sp, #4]
 800459e:	f805 ab01 	strb.w	sl, [r5], #1
 80045a2:	1aea      	subs	r2, r5, r3
 80045a4:	9b02      	ldr	r3, [sp, #8]
 80045a6:	4293      	cmp	r3, r2
 80045a8:	dd09      	ble.n	80045be <_dtoa_r+0xb56>
 80045aa:	ee18 1a10 	vmov	r1, s16
 80045ae:	2300      	movs	r3, #0
 80045b0:	220a      	movs	r2, #10
 80045b2:	4620      	mov	r0, r4
 80045b4:	f000 fc44 	bl	8004e40 <__multadd>
 80045b8:	ee08 0a10 	vmov	s16, r0
 80045bc:	e7e7      	b.n	800458e <_dtoa_r+0xb26>
 80045be:	9b02      	ldr	r3, [sp, #8]
 80045c0:	2b00      	cmp	r3, #0
 80045c2:	bfc8      	it	gt
 80045c4:	461d      	movgt	r5, r3
 80045c6:	9b01      	ldr	r3, [sp, #4]
 80045c8:	bfd8      	it	le
 80045ca:	2501      	movle	r5, #1
 80045cc:	441d      	add	r5, r3
 80045ce:	f04f 0800 	mov.w	r8, #0
 80045d2:	ee18 1a10 	vmov	r1, s16
 80045d6:	2201      	movs	r2, #1
 80045d8:	4620      	mov	r0, r4
 80045da:	f000 fe2b 	bl	8005234 <__lshift>
 80045de:	4631      	mov	r1, r6
 80045e0:	ee08 0a10 	vmov	s16, r0
 80045e4:	f000 fe96 	bl	8005314 <__mcmp>
 80045e8:	2800      	cmp	r0, #0
 80045ea:	dc91      	bgt.n	8004510 <_dtoa_r+0xaa8>
 80045ec:	d102      	bne.n	80045f4 <_dtoa_r+0xb8c>
 80045ee:	f01a 0f01 	tst.w	sl, #1
 80045f2:	d18d      	bne.n	8004510 <_dtoa_r+0xaa8>
 80045f4:	462b      	mov	r3, r5
 80045f6:	461d      	mov	r5, r3
 80045f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80045fc:	2a30      	cmp	r2, #48	; 0x30
 80045fe:	d0fa      	beq.n	80045f6 <_dtoa_r+0xb8e>
 8004600:	e6d7      	b.n	80043b2 <_dtoa_r+0x94a>
 8004602:	9a01      	ldr	r2, [sp, #4]
 8004604:	429a      	cmp	r2, r3
 8004606:	d184      	bne.n	8004512 <_dtoa_r+0xaaa>
 8004608:	9b00      	ldr	r3, [sp, #0]
 800460a:	3301      	adds	r3, #1
 800460c:	9300      	str	r3, [sp, #0]
 800460e:	2331      	movs	r3, #49	; 0x31
 8004610:	7013      	strb	r3, [r2, #0]
 8004612:	e6ce      	b.n	80043b2 <_dtoa_r+0x94a>
 8004614:	4b09      	ldr	r3, [pc, #36]	; (800463c <_dtoa_r+0xbd4>)
 8004616:	f7ff ba95 	b.w	8003b44 <_dtoa_r+0xdc>
 800461a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800461c:	2b00      	cmp	r3, #0
 800461e:	f47f aa6e 	bne.w	8003afe <_dtoa_r+0x96>
 8004622:	4b07      	ldr	r3, [pc, #28]	; (8004640 <_dtoa_r+0xbd8>)
 8004624:	f7ff ba8e 	b.w	8003b44 <_dtoa_r+0xdc>
 8004628:	9b02      	ldr	r3, [sp, #8]
 800462a:	2b00      	cmp	r3, #0
 800462c:	dcae      	bgt.n	800458c <_dtoa_r+0xb24>
 800462e:	9b06      	ldr	r3, [sp, #24]
 8004630:	2b02      	cmp	r3, #2
 8004632:	f73f aea8 	bgt.w	8004386 <_dtoa_r+0x91e>
 8004636:	e7a9      	b.n	800458c <_dtoa_r+0xb24>
 8004638:	08006a28 	.word	0x08006a28
 800463c:	0800682c 	.word	0x0800682c
 8004640:	080069a9 	.word	0x080069a9

08004644 <rshift>:
 8004644:	6903      	ldr	r3, [r0, #16]
 8004646:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800464a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800464e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8004652:	f100 0414 	add.w	r4, r0, #20
 8004656:	dd45      	ble.n	80046e4 <rshift+0xa0>
 8004658:	f011 011f 	ands.w	r1, r1, #31
 800465c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8004660:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8004664:	d10c      	bne.n	8004680 <rshift+0x3c>
 8004666:	f100 0710 	add.w	r7, r0, #16
 800466a:	4629      	mov	r1, r5
 800466c:	42b1      	cmp	r1, r6
 800466e:	d334      	bcc.n	80046da <rshift+0x96>
 8004670:	1a9b      	subs	r3, r3, r2
 8004672:	009b      	lsls	r3, r3, #2
 8004674:	1eea      	subs	r2, r5, #3
 8004676:	4296      	cmp	r6, r2
 8004678:	bf38      	it	cc
 800467a:	2300      	movcc	r3, #0
 800467c:	4423      	add	r3, r4
 800467e:	e015      	b.n	80046ac <rshift+0x68>
 8004680:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8004684:	f1c1 0820 	rsb	r8, r1, #32
 8004688:	40cf      	lsrs	r7, r1
 800468a:	f105 0e04 	add.w	lr, r5, #4
 800468e:	46a1      	mov	r9, r4
 8004690:	4576      	cmp	r6, lr
 8004692:	46f4      	mov	ip, lr
 8004694:	d815      	bhi.n	80046c2 <rshift+0x7e>
 8004696:	1a9a      	subs	r2, r3, r2
 8004698:	0092      	lsls	r2, r2, #2
 800469a:	3a04      	subs	r2, #4
 800469c:	3501      	adds	r5, #1
 800469e:	42ae      	cmp	r6, r5
 80046a0:	bf38      	it	cc
 80046a2:	2200      	movcc	r2, #0
 80046a4:	18a3      	adds	r3, r4, r2
 80046a6:	50a7      	str	r7, [r4, r2]
 80046a8:	b107      	cbz	r7, 80046ac <rshift+0x68>
 80046aa:	3304      	adds	r3, #4
 80046ac:	1b1a      	subs	r2, r3, r4
 80046ae:	42a3      	cmp	r3, r4
 80046b0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80046b4:	bf08      	it	eq
 80046b6:	2300      	moveq	r3, #0
 80046b8:	6102      	str	r2, [r0, #16]
 80046ba:	bf08      	it	eq
 80046bc:	6143      	streq	r3, [r0, #20]
 80046be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80046c2:	f8dc c000 	ldr.w	ip, [ip]
 80046c6:	fa0c fc08 	lsl.w	ip, ip, r8
 80046ca:	ea4c 0707 	orr.w	r7, ip, r7
 80046ce:	f849 7b04 	str.w	r7, [r9], #4
 80046d2:	f85e 7b04 	ldr.w	r7, [lr], #4
 80046d6:	40cf      	lsrs	r7, r1
 80046d8:	e7da      	b.n	8004690 <rshift+0x4c>
 80046da:	f851 cb04 	ldr.w	ip, [r1], #4
 80046de:	f847 cf04 	str.w	ip, [r7, #4]!
 80046e2:	e7c3      	b.n	800466c <rshift+0x28>
 80046e4:	4623      	mov	r3, r4
 80046e6:	e7e1      	b.n	80046ac <rshift+0x68>

080046e8 <__hexdig_fun>:
 80046e8:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80046ec:	2b09      	cmp	r3, #9
 80046ee:	d802      	bhi.n	80046f6 <__hexdig_fun+0xe>
 80046f0:	3820      	subs	r0, #32
 80046f2:	b2c0      	uxtb	r0, r0
 80046f4:	4770      	bx	lr
 80046f6:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80046fa:	2b05      	cmp	r3, #5
 80046fc:	d801      	bhi.n	8004702 <__hexdig_fun+0x1a>
 80046fe:	3847      	subs	r0, #71	; 0x47
 8004700:	e7f7      	b.n	80046f2 <__hexdig_fun+0xa>
 8004702:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8004706:	2b05      	cmp	r3, #5
 8004708:	d801      	bhi.n	800470e <__hexdig_fun+0x26>
 800470a:	3827      	subs	r0, #39	; 0x27
 800470c:	e7f1      	b.n	80046f2 <__hexdig_fun+0xa>
 800470e:	2000      	movs	r0, #0
 8004710:	4770      	bx	lr
	...

08004714 <__gethex>:
 8004714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004718:	ed2d 8b02 	vpush	{d8}
 800471c:	b089      	sub	sp, #36	; 0x24
 800471e:	ee08 0a10 	vmov	s16, r0
 8004722:	9304      	str	r3, [sp, #16]
 8004724:	4bb4      	ldr	r3, [pc, #720]	; (80049f8 <__gethex+0x2e4>)
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	9301      	str	r3, [sp, #4]
 800472a:	4618      	mov	r0, r3
 800472c:	468b      	mov	fp, r1
 800472e:	4690      	mov	r8, r2
 8004730:	f7fb fd56 	bl	80001e0 <strlen>
 8004734:	9b01      	ldr	r3, [sp, #4]
 8004736:	f8db 2000 	ldr.w	r2, [fp]
 800473a:	4403      	add	r3, r0
 800473c:	4682      	mov	sl, r0
 800473e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004742:	9305      	str	r3, [sp, #20]
 8004744:	1c93      	adds	r3, r2, #2
 8004746:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800474a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800474e:	32fe      	adds	r2, #254	; 0xfe
 8004750:	18d1      	adds	r1, r2, r3
 8004752:	461f      	mov	r7, r3
 8004754:	f813 0b01 	ldrb.w	r0, [r3], #1
 8004758:	9100      	str	r1, [sp, #0]
 800475a:	2830      	cmp	r0, #48	; 0x30
 800475c:	d0f8      	beq.n	8004750 <__gethex+0x3c>
 800475e:	f7ff ffc3 	bl	80046e8 <__hexdig_fun>
 8004762:	4604      	mov	r4, r0
 8004764:	2800      	cmp	r0, #0
 8004766:	d13a      	bne.n	80047de <__gethex+0xca>
 8004768:	9901      	ldr	r1, [sp, #4]
 800476a:	4652      	mov	r2, sl
 800476c:	4638      	mov	r0, r7
 800476e:	f001 fa33 	bl	8005bd8 <strncmp>
 8004772:	4605      	mov	r5, r0
 8004774:	2800      	cmp	r0, #0
 8004776:	d168      	bne.n	800484a <__gethex+0x136>
 8004778:	f817 000a 	ldrb.w	r0, [r7, sl]
 800477c:	eb07 060a 	add.w	r6, r7, sl
 8004780:	f7ff ffb2 	bl	80046e8 <__hexdig_fun>
 8004784:	2800      	cmp	r0, #0
 8004786:	d062      	beq.n	800484e <__gethex+0x13a>
 8004788:	4633      	mov	r3, r6
 800478a:	7818      	ldrb	r0, [r3, #0]
 800478c:	2830      	cmp	r0, #48	; 0x30
 800478e:	461f      	mov	r7, r3
 8004790:	f103 0301 	add.w	r3, r3, #1
 8004794:	d0f9      	beq.n	800478a <__gethex+0x76>
 8004796:	f7ff ffa7 	bl	80046e8 <__hexdig_fun>
 800479a:	2301      	movs	r3, #1
 800479c:	fab0 f480 	clz	r4, r0
 80047a0:	0964      	lsrs	r4, r4, #5
 80047a2:	4635      	mov	r5, r6
 80047a4:	9300      	str	r3, [sp, #0]
 80047a6:	463a      	mov	r2, r7
 80047a8:	4616      	mov	r6, r2
 80047aa:	3201      	adds	r2, #1
 80047ac:	7830      	ldrb	r0, [r6, #0]
 80047ae:	f7ff ff9b 	bl	80046e8 <__hexdig_fun>
 80047b2:	2800      	cmp	r0, #0
 80047b4:	d1f8      	bne.n	80047a8 <__gethex+0x94>
 80047b6:	9901      	ldr	r1, [sp, #4]
 80047b8:	4652      	mov	r2, sl
 80047ba:	4630      	mov	r0, r6
 80047bc:	f001 fa0c 	bl	8005bd8 <strncmp>
 80047c0:	b980      	cbnz	r0, 80047e4 <__gethex+0xd0>
 80047c2:	b94d      	cbnz	r5, 80047d8 <__gethex+0xc4>
 80047c4:	eb06 050a 	add.w	r5, r6, sl
 80047c8:	462a      	mov	r2, r5
 80047ca:	4616      	mov	r6, r2
 80047cc:	3201      	adds	r2, #1
 80047ce:	7830      	ldrb	r0, [r6, #0]
 80047d0:	f7ff ff8a 	bl	80046e8 <__hexdig_fun>
 80047d4:	2800      	cmp	r0, #0
 80047d6:	d1f8      	bne.n	80047ca <__gethex+0xb6>
 80047d8:	1bad      	subs	r5, r5, r6
 80047da:	00ad      	lsls	r5, r5, #2
 80047dc:	e004      	b.n	80047e8 <__gethex+0xd4>
 80047de:	2400      	movs	r4, #0
 80047e0:	4625      	mov	r5, r4
 80047e2:	e7e0      	b.n	80047a6 <__gethex+0x92>
 80047e4:	2d00      	cmp	r5, #0
 80047e6:	d1f7      	bne.n	80047d8 <__gethex+0xc4>
 80047e8:	7833      	ldrb	r3, [r6, #0]
 80047ea:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80047ee:	2b50      	cmp	r3, #80	; 0x50
 80047f0:	d13b      	bne.n	800486a <__gethex+0x156>
 80047f2:	7873      	ldrb	r3, [r6, #1]
 80047f4:	2b2b      	cmp	r3, #43	; 0x2b
 80047f6:	d02c      	beq.n	8004852 <__gethex+0x13e>
 80047f8:	2b2d      	cmp	r3, #45	; 0x2d
 80047fa:	d02e      	beq.n	800485a <__gethex+0x146>
 80047fc:	1c71      	adds	r1, r6, #1
 80047fe:	f04f 0900 	mov.w	r9, #0
 8004802:	7808      	ldrb	r0, [r1, #0]
 8004804:	f7ff ff70 	bl	80046e8 <__hexdig_fun>
 8004808:	1e43      	subs	r3, r0, #1
 800480a:	b2db      	uxtb	r3, r3
 800480c:	2b18      	cmp	r3, #24
 800480e:	d82c      	bhi.n	800486a <__gethex+0x156>
 8004810:	f1a0 0210 	sub.w	r2, r0, #16
 8004814:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8004818:	f7ff ff66 	bl	80046e8 <__hexdig_fun>
 800481c:	1e43      	subs	r3, r0, #1
 800481e:	b2db      	uxtb	r3, r3
 8004820:	2b18      	cmp	r3, #24
 8004822:	d91d      	bls.n	8004860 <__gethex+0x14c>
 8004824:	f1b9 0f00 	cmp.w	r9, #0
 8004828:	d000      	beq.n	800482c <__gethex+0x118>
 800482a:	4252      	negs	r2, r2
 800482c:	4415      	add	r5, r2
 800482e:	f8cb 1000 	str.w	r1, [fp]
 8004832:	b1e4      	cbz	r4, 800486e <__gethex+0x15a>
 8004834:	9b00      	ldr	r3, [sp, #0]
 8004836:	2b00      	cmp	r3, #0
 8004838:	bf14      	ite	ne
 800483a:	2700      	movne	r7, #0
 800483c:	2706      	moveq	r7, #6
 800483e:	4638      	mov	r0, r7
 8004840:	b009      	add	sp, #36	; 0x24
 8004842:	ecbd 8b02 	vpop	{d8}
 8004846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800484a:	463e      	mov	r6, r7
 800484c:	4625      	mov	r5, r4
 800484e:	2401      	movs	r4, #1
 8004850:	e7ca      	b.n	80047e8 <__gethex+0xd4>
 8004852:	f04f 0900 	mov.w	r9, #0
 8004856:	1cb1      	adds	r1, r6, #2
 8004858:	e7d3      	b.n	8004802 <__gethex+0xee>
 800485a:	f04f 0901 	mov.w	r9, #1
 800485e:	e7fa      	b.n	8004856 <__gethex+0x142>
 8004860:	230a      	movs	r3, #10
 8004862:	fb03 0202 	mla	r2, r3, r2, r0
 8004866:	3a10      	subs	r2, #16
 8004868:	e7d4      	b.n	8004814 <__gethex+0x100>
 800486a:	4631      	mov	r1, r6
 800486c:	e7df      	b.n	800482e <__gethex+0x11a>
 800486e:	1bf3      	subs	r3, r6, r7
 8004870:	3b01      	subs	r3, #1
 8004872:	4621      	mov	r1, r4
 8004874:	2b07      	cmp	r3, #7
 8004876:	dc0b      	bgt.n	8004890 <__gethex+0x17c>
 8004878:	ee18 0a10 	vmov	r0, s16
 800487c:	f000 fa7e 	bl	8004d7c <_Balloc>
 8004880:	4604      	mov	r4, r0
 8004882:	b940      	cbnz	r0, 8004896 <__gethex+0x182>
 8004884:	4b5d      	ldr	r3, [pc, #372]	; (80049fc <__gethex+0x2e8>)
 8004886:	4602      	mov	r2, r0
 8004888:	21de      	movs	r1, #222	; 0xde
 800488a:	485d      	ldr	r0, [pc, #372]	; (8004a00 <__gethex+0x2ec>)
 800488c:	f001 f9c6 	bl	8005c1c <__assert_func>
 8004890:	3101      	adds	r1, #1
 8004892:	105b      	asrs	r3, r3, #1
 8004894:	e7ee      	b.n	8004874 <__gethex+0x160>
 8004896:	f100 0914 	add.w	r9, r0, #20
 800489a:	f04f 0b00 	mov.w	fp, #0
 800489e:	f1ca 0301 	rsb	r3, sl, #1
 80048a2:	f8cd 9008 	str.w	r9, [sp, #8]
 80048a6:	f8cd b000 	str.w	fp, [sp]
 80048aa:	9306      	str	r3, [sp, #24]
 80048ac:	42b7      	cmp	r7, r6
 80048ae:	d340      	bcc.n	8004932 <__gethex+0x21e>
 80048b0:	9802      	ldr	r0, [sp, #8]
 80048b2:	9b00      	ldr	r3, [sp, #0]
 80048b4:	f840 3b04 	str.w	r3, [r0], #4
 80048b8:	eba0 0009 	sub.w	r0, r0, r9
 80048bc:	1080      	asrs	r0, r0, #2
 80048be:	0146      	lsls	r6, r0, #5
 80048c0:	6120      	str	r0, [r4, #16]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 fb4c 	bl	8004f60 <__hi0bits>
 80048c8:	1a30      	subs	r0, r6, r0
 80048ca:	f8d8 6000 	ldr.w	r6, [r8]
 80048ce:	42b0      	cmp	r0, r6
 80048d0:	dd63      	ble.n	800499a <__gethex+0x286>
 80048d2:	1b87      	subs	r7, r0, r6
 80048d4:	4639      	mov	r1, r7
 80048d6:	4620      	mov	r0, r4
 80048d8:	f000 fef0 	bl	80056bc <__any_on>
 80048dc:	4682      	mov	sl, r0
 80048de:	b1a8      	cbz	r0, 800490c <__gethex+0x1f8>
 80048e0:	1e7b      	subs	r3, r7, #1
 80048e2:	1159      	asrs	r1, r3, #5
 80048e4:	f003 021f 	and.w	r2, r3, #31
 80048e8:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80048ec:	f04f 0a01 	mov.w	sl, #1
 80048f0:	fa0a f202 	lsl.w	r2, sl, r2
 80048f4:	420a      	tst	r2, r1
 80048f6:	d009      	beq.n	800490c <__gethex+0x1f8>
 80048f8:	4553      	cmp	r3, sl
 80048fa:	dd05      	ble.n	8004908 <__gethex+0x1f4>
 80048fc:	1eb9      	subs	r1, r7, #2
 80048fe:	4620      	mov	r0, r4
 8004900:	f000 fedc 	bl	80056bc <__any_on>
 8004904:	2800      	cmp	r0, #0
 8004906:	d145      	bne.n	8004994 <__gethex+0x280>
 8004908:	f04f 0a02 	mov.w	sl, #2
 800490c:	4639      	mov	r1, r7
 800490e:	4620      	mov	r0, r4
 8004910:	f7ff fe98 	bl	8004644 <rshift>
 8004914:	443d      	add	r5, r7
 8004916:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800491a:	42ab      	cmp	r3, r5
 800491c:	da4c      	bge.n	80049b8 <__gethex+0x2a4>
 800491e:	ee18 0a10 	vmov	r0, s16
 8004922:	4621      	mov	r1, r4
 8004924:	f000 fa6a 	bl	8004dfc <_Bfree>
 8004928:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800492a:	2300      	movs	r3, #0
 800492c:	6013      	str	r3, [r2, #0]
 800492e:	27a3      	movs	r7, #163	; 0xa3
 8004930:	e785      	b.n	800483e <__gethex+0x12a>
 8004932:	1e73      	subs	r3, r6, #1
 8004934:	9a05      	ldr	r2, [sp, #20]
 8004936:	9303      	str	r3, [sp, #12]
 8004938:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800493c:	4293      	cmp	r3, r2
 800493e:	d019      	beq.n	8004974 <__gethex+0x260>
 8004940:	f1bb 0f20 	cmp.w	fp, #32
 8004944:	d107      	bne.n	8004956 <__gethex+0x242>
 8004946:	9b02      	ldr	r3, [sp, #8]
 8004948:	9a00      	ldr	r2, [sp, #0]
 800494a:	f843 2b04 	str.w	r2, [r3], #4
 800494e:	9302      	str	r3, [sp, #8]
 8004950:	2300      	movs	r3, #0
 8004952:	9300      	str	r3, [sp, #0]
 8004954:	469b      	mov	fp, r3
 8004956:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800495a:	f7ff fec5 	bl	80046e8 <__hexdig_fun>
 800495e:	9b00      	ldr	r3, [sp, #0]
 8004960:	f000 000f 	and.w	r0, r0, #15
 8004964:	fa00 f00b 	lsl.w	r0, r0, fp
 8004968:	4303      	orrs	r3, r0
 800496a:	9300      	str	r3, [sp, #0]
 800496c:	f10b 0b04 	add.w	fp, fp, #4
 8004970:	9b03      	ldr	r3, [sp, #12]
 8004972:	e00d      	b.n	8004990 <__gethex+0x27c>
 8004974:	9b03      	ldr	r3, [sp, #12]
 8004976:	9a06      	ldr	r2, [sp, #24]
 8004978:	4413      	add	r3, r2
 800497a:	42bb      	cmp	r3, r7
 800497c:	d3e0      	bcc.n	8004940 <__gethex+0x22c>
 800497e:	4618      	mov	r0, r3
 8004980:	9901      	ldr	r1, [sp, #4]
 8004982:	9307      	str	r3, [sp, #28]
 8004984:	4652      	mov	r2, sl
 8004986:	f001 f927 	bl	8005bd8 <strncmp>
 800498a:	9b07      	ldr	r3, [sp, #28]
 800498c:	2800      	cmp	r0, #0
 800498e:	d1d7      	bne.n	8004940 <__gethex+0x22c>
 8004990:	461e      	mov	r6, r3
 8004992:	e78b      	b.n	80048ac <__gethex+0x198>
 8004994:	f04f 0a03 	mov.w	sl, #3
 8004998:	e7b8      	b.n	800490c <__gethex+0x1f8>
 800499a:	da0a      	bge.n	80049b2 <__gethex+0x29e>
 800499c:	1a37      	subs	r7, r6, r0
 800499e:	4621      	mov	r1, r4
 80049a0:	ee18 0a10 	vmov	r0, s16
 80049a4:	463a      	mov	r2, r7
 80049a6:	f000 fc45 	bl	8005234 <__lshift>
 80049aa:	1bed      	subs	r5, r5, r7
 80049ac:	4604      	mov	r4, r0
 80049ae:	f100 0914 	add.w	r9, r0, #20
 80049b2:	f04f 0a00 	mov.w	sl, #0
 80049b6:	e7ae      	b.n	8004916 <__gethex+0x202>
 80049b8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80049bc:	42a8      	cmp	r0, r5
 80049be:	dd72      	ble.n	8004aa6 <__gethex+0x392>
 80049c0:	1b45      	subs	r5, r0, r5
 80049c2:	42ae      	cmp	r6, r5
 80049c4:	dc36      	bgt.n	8004a34 <__gethex+0x320>
 80049c6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80049ca:	2b02      	cmp	r3, #2
 80049cc:	d02a      	beq.n	8004a24 <__gethex+0x310>
 80049ce:	2b03      	cmp	r3, #3
 80049d0:	d02c      	beq.n	8004a2c <__gethex+0x318>
 80049d2:	2b01      	cmp	r3, #1
 80049d4:	d11c      	bne.n	8004a10 <__gethex+0x2fc>
 80049d6:	42ae      	cmp	r6, r5
 80049d8:	d11a      	bne.n	8004a10 <__gethex+0x2fc>
 80049da:	2e01      	cmp	r6, #1
 80049dc:	d112      	bne.n	8004a04 <__gethex+0x2f0>
 80049de:	9a04      	ldr	r2, [sp, #16]
 80049e0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80049e4:	6013      	str	r3, [r2, #0]
 80049e6:	2301      	movs	r3, #1
 80049e8:	6123      	str	r3, [r4, #16]
 80049ea:	f8c9 3000 	str.w	r3, [r9]
 80049ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80049f0:	2762      	movs	r7, #98	; 0x62
 80049f2:	601c      	str	r4, [r3, #0]
 80049f4:	e723      	b.n	800483e <__gethex+0x12a>
 80049f6:	bf00      	nop
 80049f8:	08006aa0 	.word	0x08006aa0
 80049fc:	08006a28 	.word	0x08006a28
 8004a00:	08006a39 	.word	0x08006a39
 8004a04:	1e71      	subs	r1, r6, #1
 8004a06:	4620      	mov	r0, r4
 8004a08:	f000 fe58 	bl	80056bc <__any_on>
 8004a0c:	2800      	cmp	r0, #0
 8004a0e:	d1e6      	bne.n	80049de <__gethex+0x2ca>
 8004a10:	ee18 0a10 	vmov	r0, s16
 8004a14:	4621      	mov	r1, r4
 8004a16:	f000 f9f1 	bl	8004dfc <_Bfree>
 8004a1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004a1c:	2300      	movs	r3, #0
 8004a1e:	6013      	str	r3, [r2, #0]
 8004a20:	2750      	movs	r7, #80	; 0x50
 8004a22:	e70c      	b.n	800483e <__gethex+0x12a>
 8004a24:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d1f2      	bne.n	8004a10 <__gethex+0x2fc>
 8004a2a:	e7d8      	b.n	80049de <__gethex+0x2ca>
 8004a2c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d1d5      	bne.n	80049de <__gethex+0x2ca>
 8004a32:	e7ed      	b.n	8004a10 <__gethex+0x2fc>
 8004a34:	1e6f      	subs	r7, r5, #1
 8004a36:	f1ba 0f00 	cmp.w	sl, #0
 8004a3a:	d131      	bne.n	8004aa0 <__gethex+0x38c>
 8004a3c:	b127      	cbz	r7, 8004a48 <__gethex+0x334>
 8004a3e:	4639      	mov	r1, r7
 8004a40:	4620      	mov	r0, r4
 8004a42:	f000 fe3b 	bl	80056bc <__any_on>
 8004a46:	4682      	mov	sl, r0
 8004a48:	117b      	asrs	r3, r7, #5
 8004a4a:	2101      	movs	r1, #1
 8004a4c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8004a50:	f007 071f 	and.w	r7, r7, #31
 8004a54:	fa01 f707 	lsl.w	r7, r1, r7
 8004a58:	421f      	tst	r7, r3
 8004a5a:	4629      	mov	r1, r5
 8004a5c:	4620      	mov	r0, r4
 8004a5e:	bf18      	it	ne
 8004a60:	f04a 0a02 	orrne.w	sl, sl, #2
 8004a64:	1b76      	subs	r6, r6, r5
 8004a66:	f7ff fded 	bl	8004644 <rshift>
 8004a6a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8004a6e:	2702      	movs	r7, #2
 8004a70:	f1ba 0f00 	cmp.w	sl, #0
 8004a74:	d048      	beq.n	8004b08 <__gethex+0x3f4>
 8004a76:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004a7a:	2b02      	cmp	r3, #2
 8004a7c:	d015      	beq.n	8004aaa <__gethex+0x396>
 8004a7e:	2b03      	cmp	r3, #3
 8004a80:	d017      	beq.n	8004ab2 <__gethex+0x39e>
 8004a82:	2b01      	cmp	r3, #1
 8004a84:	d109      	bne.n	8004a9a <__gethex+0x386>
 8004a86:	f01a 0f02 	tst.w	sl, #2
 8004a8a:	d006      	beq.n	8004a9a <__gethex+0x386>
 8004a8c:	f8d9 0000 	ldr.w	r0, [r9]
 8004a90:	ea4a 0a00 	orr.w	sl, sl, r0
 8004a94:	f01a 0f01 	tst.w	sl, #1
 8004a98:	d10e      	bne.n	8004ab8 <__gethex+0x3a4>
 8004a9a:	f047 0710 	orr.w	r7, r7, #16
 8004a9e:	e033      	b.n	8004b08 <__gethex+0x3f4>
 8004aa0:	f04f 0a01 	mov.w	sl, #1
 8004aa4:	e7d0      	b.n	8004a48 <__gethex+0x334>
 8004aa6:	2701      	movs	r7, #1
 8004aa8:	e7e2      	b.n	8004a70 <__gethex+0x35c>
 8004aaa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004aac:	f1c3 0301 	rsb	r3, r3, #1
 8004ab0:	9315      	str	r3, [sp, #84]	; 0x54
 8004ab2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d0f0      	beq.n	8004a9a <__gethex+0x386>
 8004ab8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8004abc:	f104 0314 	add.w	r3, r4, #20
 8004ac0:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8004ac4:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8004ac8:	f04f 0c00 	mov.w	ip, #0
 8004acc:	4618      	mov	r0, r3
 8004ace:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ad2:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004ad6:	d01c      	beq.n	8004b12 <__gethex+0x3fe>
 8004ad8:	3201      	adds	r2, #1
 8004ada:	6002      	str	r2, [r0, #0]
 8004adc:	2f02      	cmp	r7, #2
 8004ade:	f104 0314 	add.w	r3, r4, #20
 8004ae2:	d13f      	bne.n	8004b64 <__gethex+0x450>
 8004ae4:	f8d8 2000 	ldr.w	r2, [r8]
 8004ae8:	3a01      	subs	r2, #1
 8004aea:	42b2      	cmp	r2, r6
 8004aec:	d10a      	bne.n	8004b04 <__gethex+0x3f0>
 8004aee:	1171      	asrs	r1, r6, #5
 8004af0:	2201      	movs	r2, #1
 8004af2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004af6:	f006 061f 	and.w	r6, r6, #31
 8004afa:	fa02 f606 	lsl.w	r6, r2, r6
 8004afe:	421e      	tst	r6, r3
 8004b00:	bf18      	it	ne
 8004b02:	4617      	movne	r7, r2
 8004b04:	f047 0720 	orr.w	r7, r7, #32
 8004b08:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004b0a:	601c      	str	r4, [r3, #0]
 8004b0c:	9b04      	ldr	r3, [sp, #16]
 8004b0e:	601d      	str	r5, [r3, #0]
 8004b10:	e695      	b.n	800483e <__gethex+0x12a>
 8004b12:	4299      	cmp	r1, r3
 8004b14:	f843 cc04 	str.w	ip, [r3, #-4]
 8004b18:	d8d8      	bhi.n	8004acc <__gethex+0x3b8>
 8004b1a:	68a3      	ldr	r3, [r4, #8]
 8004b1c:	459b      	cmp	fp, r3
 8004b1e:	db19      	blt.n	8004b54 <__gethex+0x440>
 8004b20:	6861      	ldr	r1, [r4, #4]
 8004b22:	ee18 0a10 	vmov	r0, s16
 8004b26:	3101      	adds	r1, #1
 8004b28:	f000 f928 	bl	8004d7c <_Balloc>
 8004b2c:	4681      	mov	r9, r0
 8004b2e:	b918      	cbnz	r0, 8004b38 <__gethex+0x424>
 8004b30:	4b1a      	ldr	r3, [pc, #104]	; (8004b9c <__gethex+0x488>)
 8004b32:	4602      	mov	r2, r0
 8004b34:	2184      	movs	r1, #132	; 0x84
 8004b36:	e6a8      	b.n	800488a <__gethex+0x176>
 8004b38:	6922      	ldr	r2, [r4, #16]
 8004b3a:	3202      	adds	r2, #2
 8004b3c:	f104 010c 	add.w	r1, r4, #12
 8004b40:	0092      	lsls	r2, r2, #2
 8004b42:	300c      	adds	r0, #12
 8004b44:	f000 f90c 	bl	8004d60 <memcpy>
 8004b48:	4621      	mov	r1, r4
 8004b4a:	ee18 0a10 	vmov	r0, s16
 8004b4e:	f000 f955 	bl	8004dfc <_Bfree>
 8004b52:	464c      	mov	r4, r9
 8004b54:	6923      	ldr	r3, [r4, #16]
 8004b56:	1c5a      	adds	r2, r3, #1
 8004b58:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004b5c:	6122      	str	r2, [r4, #16]
 8004b5e:	2201      	movs	r2, #1
 8004b60:	615a      	str	r2, [r3, #20]
 8004b62:	e7bb      	b.n	8004adc <__gethex+0x3c8>
 8004b64:	6922      	ldr	r2, [r4, #16]
 8004b66:	455a      	cmp	r2, fp
 8004b68:	dd0b      	ble.n	8004b82 <__gethex+0x46e>
 8004b6a:	2101      	movs	r1, #1
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	f7ff fd69 	bl	8004644 <rshift>
 8004b72:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004b76:	3501      	adds	r5, #1
 8004b78:	42ab      	cmp	r3, r5
 8004b7a:	f6ff aed0 	blt.w	800491e <__gethex+0x20a>
 8004b7e:	2701      	movs	r7, #1
 8004b80:	e7c0      	b.n	8004b04 <__gethex+0x3f0>
 8004b82:	f016 061f 	ands.w	r6, r6, #31
 8004b86:	d0fa      	beq.n	8004b7e <__gethex+0x46a>
 8004b88:	4453      	add	r3, sl
 8004b8a:	f1c6 0620 	rsb	r6, r6, #32
 8004b8e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8004b92:	f000 f9e5 	bl	8004f60 <__hi0bits>
 8004b96:	42b0      	cmp	r0, r6
 8004b98:	dbe7      	blt.n	8004b6a <__gethex+0x456>
 8004b9a:	e7f0      	b.n	8004b7e <__gethex+0x46a>
 8004b9c:	08006a28 	.word	0x08006a28

08004ba0 <L_shift>:
 8004ba0:	f1c2 0208 	rsb	r2, r2, #8
 8004ba4:	0092      	lsls	r2, r2, #2
 8004ba6:	b570      	push	{r4, r5, r6, lr}
 8004ba8:	f1c2 0620 	rsb	r6, r2, #32
 8004bac:	6843      	ldr	r3, [r0, #4]
 8004bae:	6804      	ldr	r4, [r0, #0]
 8004bb0:	fa03 f506 	lsl.w	r5, r3, r6
 8004bb4:	432c      	orrs	r4, r5
 8004bb6:	40d3      	lsrs	r3, r2
 8004bb8:	6004      	str	r4, [r0, #0]
 8004bba:	f840 3f04 	str.w	r3, [r0, #4]!
 8004bbe:	4288      	cmp	r0, r1
 8004bc0:	d3f4      	bcc.n	8004bac <L_shift+0xc>
 8004bc2:	bd70      	pop	{r4, r5, r6, pc}

08004bc4 <__match>:
 8004bc4:	b530      	push	{r4, r5, lr}
 8004bc6:	6803      	ldr	r3, [r0, #0]
 8004bc8:	3301      	adds	r3, #1
 8004bca:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004bce:	b914      	cbnz	r4, 8004bd6 <__match+0x12>
 8004bd0:	6003      	str	r3, [r0, #0]
 8004bd2:	2001      	movs	r0, #1
 8004bd4:	bd30      	pop	{r4, r5, pc}
 8004bd6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004bda:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8004bde:	2d19      	cmp	r5, #25
 8004be0:	bf98      	it	ls
 8004be2:	3220      	addls	r2, #32
 8004be4:	42a2      	cmp	r2, r4
 8004be6:	d0f0      	beq.n	8004bca <__match+0x6>
 8004be8:	2000      	movs	r0, #0
 8004bea:	e7f3      	b.n	8004bd4 <__match+0x10>

08004bec <__hexnan>:
 8004bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004bf0:	680b      	ldr	r3, [r1, #0]
 8004bf2:	115e      	asrs	r6, r3, #5
 8004bf4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8004bf8:	f013 031f 	ands.w	r3, r3, #31
 8004bfc:	b087      	sub	sp, #28
 8004bfe:	bf18      	it	ne
 8004c00:	3604      	addne	r6, #4
 8004c02:	2500      	movs	r5, #0
 8004c04:	1f37      	subs	r7, r6, #4
 8004c06:	4690      	mov	r8, r2
 8004c08:	6802      	ldr	r2, [r0, #0]
 8004c0a:	9301      	str	r3, [sp, #4]
 8004c0c:	4682      	mov	sl, r0
 8004c0e:	f846 5c04 	str.w	r5, [r6, #-4]
 8004c12:	46b9      	mov	r9, r7
 8004c14:	463c      	mov	r4, r7
 8004c16:	9502      	str	r5, [sp, #8]
 8004c18:	46ab      	mov	fp, r5
 8004c1a:	7851      	ldrb	r1, [r2, #1]
 8004c1c:	1c53      	adds	r3, r2, #1
 8004c1e:	9303      	str	r3, [sp, #12]
 8004c20:	b341      	cbz	r1, 8004c74 <__hexnan+0x88>
 8004c22:	4608      	mov	r0, r1
 8004c24:	9205      	str	r2, [sp, #20]
 8004c26:	9104      	str	r1, [sp, #16]
 8004c28:	f7ff fd5e 	bl	80046e8 <__hexdig_fun>
 8004c2c:	2800      	cmp	r0, #0
 8004c2e:	d14f      	bne.n	8004cd0 <__hexnan+0xe4>
 8004c30:	9904      	ldr	r1, [sp, #16]
 8004c32:	9a05      	ldr	r2, [sp, #20]
 8004c34:	2920      	cmp	r1, #32
 8004c36:	d818      	bhi.n	8004c6a <__hexnan+0x7e>
 8004c38:	9b02      	ldr	r3, [sp, #8]
 8004c3a:	459b      	cmp	fp, r3
 8004c3c:	dd13      	ble.n	8004c66 <__hexnan+0x7a>
 8004c3e:	454c      	cmp	r4, r9
 8004c40:	d206      	bcs.n	8004c50 <__hexnan+0x64>
 8004c42:	2d07      	cmp	r5, #7
 8004c44:	dc04      	bgt.n	8004c50 <__hexnan+0x64>
 8004c46:	462a      	mov	r2, r5
 8004c48:	4649      	mov	r1, r9
 8004c4a:	4620      	mov	r0, r4
 8004c4c:	f7ff ffa8 	bl	8004ba0 <L_shift>
 8004c50:	4544      	cmp	r4, r8
 8004c52:	d950      	bls.n	8004cf6 <__hexnan+0x10a>
 8004c54:	2300      	movs	r3, #0
 8004c56:	f1a4 0904 	sub.w	r9, r4, #4
 8004c5a:	f844 3c04 	str.w	r3, [r4, #-4]
 8004c5e:	f8cd b008 	str.w	fp, [sp, #8]
 8004c62:	464c      	mov	r4, r9
 8004c64:	461d      	mov	r5, r3
 8004c66:	9a03      	ldr	r2, [sp, #12]
 8004c68:	e7d7      	b.n	8004c1a <__hexnan+0x2e>
 8004c6a:	2929      	cmp	r1, #41	; 0x29
 8004c6c:	d156      	bne.n	8004d1c <__hexnan+0x130>
 8004c6e:	3202      	adds	r2, #2
 8004c70:	f8ca 2000 	str.w	r2, [sl]
 8004c74:	f1bb 0f00 	cmp.w	fp, #0
 8004c78:	d050      	beq.n	8004d1c <__hexnan+0x130>
 8004c7a:	454c      	cmp	r4, r9
 8004c7c:	d206      	bcs.n	8004c8c <__hexnan+0xa0>
 8004c7e:	2d07      	cmp	r5, #7
 8004c80:	dc04      	bgt.n	8004c8c <__hexnan+0xa0>
 8004c82:	462a      	mov	r2, r5
 8004c84:	4649      	mov	r1, r9
 8004c86:	4620      	mov	r0, r4
 8004c88:	f7ff ff8a 	bl	8004ba0 <L_shift>
 8004c8c:	4544      	cmp	r4, r8
 8004c8e:	d934      	bls.n	8004cfa <__hexnan+0x10e>
 8004c90:	f1a8 0204 	sub.w	r2, r8, #4
 8004c94:	4623      	mov	r3, r4
 8004c96:	f853 1b04 	ldr.w	r1, [r3], #4
 8004c9a:	f842 1f04 	str.w	r1, [r2, #4]!
 8004c9e:	429f      	cmp	r7, r3
 8004ca0:	d2f9      	bcs.n	8004c96 <__hexnan+0xaa>
 8004ca2:	1b3b      	subs	r3, r7, r4
 8004ca4:	f023 0303 	bic.w	r3, r3, #3
 8004ca8:	3304      	adds	r3, #4
 8004caa:	3401      	adds	r4, #1
 8004cac:	3e03      	subs	r6, #3
 8004cae:	42b4      	cmp	r4, r6
 8004cb0:	bf88      	it	hi
 8004cb2:	2304      	movhi	r3, #4
 8004cb4:	4443      	add	r3, r8
 8004cb6:	2200      	movs	r2, #0
 8004cb8:	f843 2b04 	str.w	r2, [r3], #4
 8004cbc:	429f      	cmp	r7, r3
 8004cbe:	d2fb      	bcs.n	8004cb8 <__hexnan+0xcc>
 8004cc0:	683b      	ldr	r3, [r7, #0]
 8004cc2:	b91b      	cbnz	r3, 8004ccc <__hexnan+0xe0>
 8004cc4:	4547      	cmp	r7, r8
 8004cc6:	d127      	bne.n	8004d18 <__hexnan+0x12c>
 8004cc8:	2301      	movs	r3, #1
 8004cca:	603b      	str	r3, [r7, #0]
 8004ccc:	2005      	movs	r0, #5
 8004cce:	e026      	b.n	8004d1e <__hexnan+0x132>
 8004cd0:	3501      	adds	r5, #1
 8004cd2:	2d08      	cmp	r5, #8
 8004cd4:	f10b 0b01 	add.w	fp, fp, #1
 8004cd8:	dd06      	ble.n	8004ce8 <__hexnan+0xfc>
 8004cda:	4544      	cmp	r4, r8
 8004cdc:	d9c3      	bls.n	8004c66 <__hexnan+0x7a>
 8004cde:	2300      	movs	r3, #0
 8004ce0:	f844 3c04 	str.w	r3, [r4, #-4]
 8004ce4:	2501      	movs	r5, #1
 8004ce6:	3c04      	subs	r4, #4
 8004ce8:	6822      	ldr	r2, [r4, #0]
 8004cea:	f000 000f 	and.w	r0, r0, #15
 8004cee:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8004cf2:	6022      	str	r2, [r4, #0]
 8004cf4:	e7b7      	b.n	8004c66 <__hexnan+0x7a>
 8004cf6:	2508      	movs	r5, #8
 8004cf8:	e7b5      	b.n	8004c66 <__hexnan+0x7a>
 8004cfa:	9b01      	ldr	r3, [sp, #4]
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d0df      	beq.n	8004cc0 <__hexnan+0xd4>
 8004d00:	f04f 32ff 	mov.w	r2, #4294967295
 8004d04:	f1c3 0320 	rsb	r3, r3, #32
 8004d08:	fa22 f303 	lsr.w	r3, r2, r3
 8004d0c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004d10:	401a      	ands	r2, r3
 8004d12:	f846 2c04 	str.w	r2, [r6, #-4]
 8004d16:	e7d3      	b.n	8004cc0 <__hexnan+0xd4>
 8004d18:	3f04      	subs	r7, #4
 8004d1a:	e7d1      	b.n	8004cc0 <__hexnan+0xd4>
 8004d1c:	2004      	movs	r0, #4
 8004d1e:	b007      	add	sp, #28
 8004d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004d24 <_localeconv_r>:
 8004d24:	4800      	ldr	r0, [pc, #0]	; (8004d28 <_localeconv_r+0x4>)
 8004d26:	4770      	bx	lr
 8004d28:	2000015c 	.word	0x2000015c

08004d2c <malloc>:
 8004d2c:	4b02      	ldr	r3, [pc, #8]	; (8004d38 <malloc+0xc>)
 8004d2e:	4601      	mov	r1, r0
 8004d30:	6818      	ldr	r0, [r3, #0]
 8004d32:	f000 bd67 	b.w	8005804 <_malloc_r>
 8004d36:	bf00      	nop
 8004d38:	20000004 	.word	0x20000004

08004d3c <__ascii_mbtowc>:
 8004d3c:	b082      	sub	sp, #8
 8004d3e:	b901      	cbnz	r1, 8004d42 <__ascii_mbtowc+0x6>
 8004d40:	a901      	add	r1, sp, #4
 8004d42:	b142      	cbz	r2, 8004d56 <__ascii_mbtowc+0x1a>
 8004d44:	b14b      	cbz	r3, 8004d5a <__ascii_mbtowc+0x1e>
 8004d46:	7813      	ldrb	r3, [r2, #0]
 8004d48:	600b      	str	r3, [r1, #0]
 8004d4a:	7812      	ldrb	r2, [r2, #0]
 8004d4c:	1e10      	subs	r0, r2, #0
 8004d4e:	bf18      	it	ne
 8004d50:	2001      	movne	r0, #1
 8004d52:	b002      	add	sp, #8
 8004d54:	4770      	bx	lr
 8004d56:	4610      	mov	r0, r2
 8004d58:	e7fb      	b.n	8004d52 <__ascii_mbtowc+0x16>
 8004d5a:	f06f 0001 	mvn.w	r0, #1
 8004d5e:	e7f8      	b.n	8004d52 <__ascii_mbtowc+0x16>

08004d60 <memcpy>:
 8004d60:	440a      	add	r2, r1
 8004d62:	4291      	cmp	r1, r2
 8004d64:	f100 33ff 	add.w	r3, r0, #4294967295
 8004d68:	d100      	bne.n	8004d6c <memcpy+0xc>
 8004d6a:	4770      	bx	lr
 8004d6c:	b510      	push	{r4, lr}
 8004d6e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004d72:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004d76:	4291      	cmp	r1, r2
 8004d78:	d1f9      	bne.n	8004d6e <memcpy+0xe>
 8004d7a:	bd10      	pop	{r4, pc}

08004d7c <_Balloc>:
 8004d7c:	b570      	push	{r4, r5, r6, lr}
 8004d7e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004d80:	4604      	mov	r4, r0
 8004d82:	460d      	mov	r5, r1
 8004d84:	b976      	cbnz	r6, 8004da4 <_Balloc+0x28>
 8004d86:	2010      	movs	r0, #16
 8004d88:	f7ff ffd0 	bl	8004d2c <malloc>
 8004d8c:	4602      	mov	r2, r0
 8004d8e:	6260      	str	r0, [r4, #36]	; 0x24
 8004d90:	b920      	cbnz	r0, 8004d9c <_Balloc+0x20>
 8004d92:	4b18      	ldr	r3, [pc, #96]	; (8004df4 <_Balloc+0x78>)
 8004d94:	4818      	ldr	r0, [pc, #96]	; (8004df8 <_Balloc+0x7c>)
 8004d96:	2166      	movs	r1, #102	; 0x66
 8004d98:	f000 ff40 	bl	8005c1c <__assert_func>
 8004d9c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004da0:	6006      	str	r6, [r0, #0]
 8004da2:	60c6      	str	r6, [r0, #12]
 8004da4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8004da6:	68f3      	ldr	r3, [r6, #12]
 8004da8:	b183      	cbz	r3, 8004dcc <_Balloc+0x50>
 8004daa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004dac:	68db      	ldr	r3, [r3, #12]
 8004dae:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004db2:	b9b8      	cbnz	r0, 8004de4 <_Balloc+0x68>
 8004db4:	2101      	movs	r1, #1
 8004db6:	fa01 f605 	lsl.w	r6, r1, r5
 8004dba:	1d72      	adds	r2, r6, #5
 8004dbc:	0092      	lsls	r2, r2, #2
 8004dbe:	4620      	mov	r0, r4
 8004dc0:	f000 fc9d 	bl	80056fe <_calloc_r>
 8004dc4:	b160      	cbz	r0, 8004de0 <_Balloc+0x64>
 8004dc6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004dca:	e00e      	b.n	8004dea <_Balloc+0x6e>
 8004dcc:	2221      	movs	r2, #33	; 0x21
 8004dce:	2104      	movs	r1, #4
 8004dd0:	4620      	mov	r0, r4
 8004dd2:	f000 fc94 	bl	80056fe <_calloc_r>
 8004dd6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004dd8:	60f0      	str	r0, [r6, #12]
 8004dda:	68db      	ldr	r3, [r3, #12]
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d1e4      	bne.n	8004daa <_Balloc+0x2e>
 8004de0:	2000      	movs	r0, #0
 8004de2:	bd70      	pop	{r4, r5, r6, pc}
 8004de4:	6802      	ldr	r2, [r0, #0]
 8004de6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004dea:	2300      	movs	r3, #0
 8004dec:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004df0:	e7f7      	b.n	8004de2 <_Balloc+0x66>
 8004df2:	bf00      	nop
 8004df4:	080069b6 	.word	0x080069b6
 8004df8:	08006ab4 	.word	0x08006ab4

08004dfc <_Bfree>:
 8004dfc:	b570      	push	{r4, r5, r6, lr}
 8004dfe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004e00:	4605      	mov	r5, r0
 8004e02:	460c      	mov	r4, r1
 8004e04:	b976      	cbnz	r6, 8004e24 <_Bfree+0x28>
 8004e06:	2010      	movs	r0, #16
 8004e08:	f7ff ff90 	bl	8004d2c <malloc>
 8004e0c:	4602      	mov	r2, r0
 8004e0e:	6268      	str	r0, [r5, #36]	; 0x24
 8004e10:	b920      	cbnz	r0, 8004e1c <_Bfree+0x20>
 8004e12:	4b09      	ldr	r3, [pc, #36]	; (8004e38 <_Bfree+0x3c>)
 8004e14:	4809      	ldr	r0, [pc, #36]	; (8004e3c <_Bfree+0x40>)
 8004e16:	218a      	movs	r1, #138	; 0x8a
 8004e18:	f000 ff00 	bl	8005c1c <__assert_func>
 8004e1c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004e20:	6006      	str	r6, [r0, #0]
 8004e22:	60c6      	str	r6, [r0, #12]
 8004e24:	b13c      	cbz	r4, 8004e36 <_Bfree+0x3a>
 8004e26:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004e28:	6862      	ldr	r2, [r4, #4]
 8004e2a:	68db      	ldr	r3, [r3, #12]
 8004e2c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004e30:	6021      	str	r1, [r4, #0]
 8004e32:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004e36:	bd70      	pop	{r4, r5, r6, pc}
 8004e38:	080069b6 	.word	0x080069b6
 8004e3c:	08006ab4 	.word	0x08006ab4

08004e40 <__multadd>:
 8004e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e44:	690d      	ldr	r5, [r1, #16]
 8004e46:	4607      	mov	r7, r0
 8004e48:	460c      	mov	r4, r1
 8004e4a:	461e      	mov	r6, r3
 8004e4c:	f101 0c14 	add.w	ip, r1, #20
 8004e50:	2000      	movs	r0, #0
 8004e52:	f8dc 3000 	ldr.w	r3, [ip]
 8004e56:	b299      	uxth	r1, r3
 8004e58:	fb02 6101 	mla	r1, r2, r1, r6
 8004e5c:	0c1e      	lsrs	r6, r3, #16
 8004e5e:	0c0b      	lsrs	r3, r1, #16
 8004e60:	fb02 3306 	mla	r3, r2, r6, r3
 8004e64:	b289      	uxth	r1, r1
 8004e66:	3001      	adds	r0, #1
 8004e68:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004e6c:	4285      	cmp	r5, r0
 8004e6e:	f84c 1b04 	str.w	r1, [ip], #4
 8004e72:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004e76:	dcec      	bgt.n	8004e52 <__multadd+0x12>
 8004e78:	b30e      	cbz	r6, 8004ebe <__multadd+0x7e>
 8004e7a:	68a3      	ldr	r3, [r4, #8]
 8004e7c:	42ab      	cmp	r3, r5
 8004e7e:	dc19      	bgt.n	8004eb4 <__multadd+0x74>
 8004e80:	6861      	ldr	r1, [r4, #4]
 8004e82:	4638      	mov	r0, r7
 8004e84:	3101      	adds	r1, #1
 8004e86:	f7ff ff79 	bl	8004d7c <_Balloc>
 8004e8a:	4680      	mov	r8, r0
 8004e8c:	b928      	cbnz	r0, 8004e9a <__multadd+0x5a>
 8004e8e:	4602      	mov	r2, r0
 8004e90:	4b0c      	ldr	r3, [pc, #48]	; (8004ec4 <__multadd+0x84>)
 8004e92:	480d      	ldr	r0, [pc, #52]	; (8004ec8 <__multadd+0x88>)
 8004e94:	21b5      	movs	r1, #181	; 0xb5
 8004e96:	f000 fec1 	bl	8005c1c <__assert_func>
 8004e9a:	6922      	ldr	r2, [r4, #16]
 8004e9c:	3202      	adds	r2, #2
 8004e9e:	f104 010c 	add.w	r1, r4, #12
 8004ea2:	0092      	lsls	r2, r2, #2
 8004ea4:	300c      	adds	r0, #12
 8004ea6:	f7ff ff5b 	bl	8004d60 <memcpy>
 8004eaa:	4621      	mov	r1, r4
 8004eac:	4638      	mov	r0, r7
 8004eae:	f7ff ffa5 	bl	8004dfc <_Bfree>
 8004eb2:	4644      	mov	r4, r8
 8004eb4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004eb8:	3501      	adds	r5, #1
 8004eba:	615e      	str	r6, [r3, #20]
 8004ebc:	6125      	str	r5, [r4, #16]
 8004ebe:	4620      	mov	r0, r4
 8004ec0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ec4:	08006a28 	.word	0x08006a28
 8004ec8:	08006ab4 	.word	0x08006ab4

08004ecc <__s2b>:
 8004ecc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004ed0:	460c      	mov	r4, r1
 8004ed2:	4615      	mov	r5, r2
 8004ed4:	461f      	mov	r7, r3
 8004ed6:	2209      	movs	r2, #9
 8004ed8:	3308      	adds	r3, #8
 8004eda:	4606      	mov	r6, r0
 8004edc:	fb93 f3f2 	sdiv	r3, r3, r2
 8004ee0:	2100      	movs	r1, #0
 8004ee2:	2201      	movs	r2, #1
 8004ee4:	429a      	cmp	r2, r3
 8004ee6:	db09      	blt.n	8004efc <__s2b+0x30>
 8004ee8:	4630      	mov	r0, r6
 8004eea:	f7ff ff47 	bl	8004d7c <_Balloc>
 8004eee:	b940      	cbnz	r0, 8004f02 <__s2b+0x36>
 8004ef0:	4602      	mov	r2, r0
 8004ef2:	4b19      	ldr	r3, [pc, #100]	; (8004f58 <__s2b+0x8c>)
 8004ef4:	4819      	ldr	r0, [pc, #100]	; (8004f5c <__s2b+0x90>)
 8004ef6:	21ce      	movs	r1, #206	; 0xce
 8004ef8:	f000 fe90 	bl	8005c1c <__assert_func>
 8004efc:	0052      	lsls	r2, r2, #1
 8004efe:	3101      	adds	r1, #1
 8004f00:	e7f0      	b.n	8004ee4 <__s2b+0x18>
 8004f02:	9b08      	ldr	r3, [sp, #32]
 8004f04:	6143      	str	r3, [r0, #20]
 8004f06:	2d09      	cmp	r5, #9
 8004f08:	f04f 0301 	mov.w	r3, #1
 8004f0c:	6103      	str	r3, [r0, #16]
 8004f0e:	dd16      	ble.n	8004f3e <__s2b+0x72>
 8004f10:	f104 0909 	add.w	r9, r4, #9
 8004f14:	46c8      	mov	r8, r9
 8004f16:	442c      	add	r4, r5
 8004f18:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004f1c:	4601      	mov	r1, r0
 8004f1e:	3b30      	subs	r3, #48	; 0x30
 8004f20:	220a      	movs	r2, #10
 8004f22:	4630      	mov	r0, r6
 8004f24:	f7ff ff8c 	bl	8004e40 <__multadd>
 8004f28:	45a0      	cmp	r8, r4
 8004f2a:	d1f5      	bne.n	8004f18 <__s2b+0x4c>
 8004f2c:	f1a5 0408 	sub.w	r4, r5, #8
 8004f30:	444c      	add	r4, r9
 8004f32:	1b2d      	subs	r5, r5, r4
 8004f34:	1963      	adds	r3, r4, r5
 8004f36:	42bb      	cmp	r3, r7
 8004f38:	db04      	blt.n	8004f44 <__s2b+0x78>
 8004f3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f3e:	340a      	adds	r4, #10
 8004f40:	2509      	movs	r5, #9
 8004f42:	e7f6      	b.n	8004f32 <__s2b+0x66>
 8004f44:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004f48:	4601      	mov	r1, r0
 8004f4a:	3b30      	subs	r3, #48	; 0x30
 8004f4c:	220a      	movs	r2, #10
 8004f4e:	4630      	mov	r0, r6
 8004f50:	f7ff ff76 	bl	8004e40 <__multadd>
 8004f54:	e7ee      	b.n	8004f34 <__s2b+0x68>
 8004f56:	bf00      	nop
 8004f58:	08006a28 	.word	0x08006a28
 8004f5c:	08006ab4 	.word	0x08006ab4

08004f60 <__hi0bits>:
 8004f60:	0c03      	lsrs	r3, r0, #16
 8004f62:	041b      	lsls	r3, r3, #16
 8004f64:	b9d3      	cbnz	r3, 8004f9c <__hi0bits+0x3c>
 8004f66:	0400      	lsls	r0, r0, #16
 8004f68:	2310      	movs	r3, #16
 8004f6a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8004f6e:	bf04      	itt	eq
 8004f70:	0200      	lsleq	r0, r0, #8
 8004f72:	3308      	addeq	r3, #8
 8004f74:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8004f78:	bf04      	itt	eq
 8004f7a:	0100      	lsleq	r0, r0, #4
 8004f7c:	3304      	addeq	r3, #4
 8004f7e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8004f82:	bf04      	itt	eq
 8004f84:	0080      	lsleq	r0, r0, #2
 8004f86:	3302      	addeq	r3, #2
 8004f88:	2800      	cmp	r0, #0
 8004f8a:	db05      	blt.n	8004f98 <__hi0bits+0x38>
 8004f8c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8004f90:	f103 0301 	add.w	r3, r3, #1
 8004f94:	bf08      	it	eq
 8004f96:	2320      	moveq	r3, #32
 8004f98:	4618      	mov	r0, r3
 8004f9a:	4770      	bx	lr
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	e7e4      	b.n	8004f6a <__hi0bits+0xa>

08004fa0 <__lo0bits>:
 8004fa0:	6803      	ldr	r3, [r0, #0]
 8004fa2:	f013 0207 	ands.w	r2, r3, #7
 8004fa6:	4601      	mov	r1, r0
 8004fa8:	d00b      	beq.n	8004fc2 <__lo0bits+0x22>
 8004faa:	07da      	lsls	r2, r3, #31
 8004fac:	d423      	bmi.n	8004ff6 <__lo0bits+0x56>
 8004fae:	0798      	lsls	r0, r3, #30
 8004fb0:	bf49      	itett	mi
 8004fb2:	085b      	lsrmi	r3, r3, #1
 8004fb4:	089b      	lsrpl	r3, r3, #2
 8004fb6:	2001      	movmi	r0, #1
 8004fb8:	600b      	strmi	r3, [r1, #0]
 8004fba:	bf5c      	itt	pl
 8004fbc:	600b      	strpl	r3, [r1, #0]
 8004fbe:	2002      	movpl	r0, #2
 8004fc0:	4770      	bx	lr
 8004fc2:	b298      	uxth	r0, r3
 8004fc4:	b9a8      	cbnz	r0, 8004ff2 <__lo0bits+0x52>
 8004fc6:	0c1b      	lsrs	r3, r3, #16
 8004fc8:	2010      	movs	r0, #16
 8004fca:	b2da      	uxtb	r2, r3
 8004fcc:	b90a      	cbnz	r2, 8004fd2 <__lo0bits+0x32>
 8004fce:	3008      	adds	r0, #8
 8004fd0:	0a1b      	lsrs	r3, r3, #8
 8004fd2:	071a      	lsls	r2, r3, #28
 8004fd4:	bf04      	itt	eq
 8004fd6:	091b      	lsreq	r3, r3, #4
 8004fd8:	3004      	addeq	r0, #4
 8004fda:	079a      	lsls	r2, r3, #30
 8004fdc:	bf04      	itt	eq
 8004fde:	089b      	lsreq	r3, r3, #2
 8004fe0:	3002      	addeq	r0, #2
 8004fe2:	07da      	lsls	r2, r3, #31
 8004fe4:	d403      	bmi.n	8004fee <__lo0bits+0x4e>
 8004fe6:	085b      	lsrs	r3, r3, #1
 8004fe8:	f100 0001 	add.w	r0, r0, #1
 8004fec:	d005      	beq.n	8004ffa <__lo0bits+0x5a>
 8004fee:	600b      	str	r3, [r1, #0]
 8004ff0:	4770      	bx	lr
 8004ff2:	4610      	mov	r0, r2
 8004ff4:	e7e9      	b.n	8004fca <__lo0bits+0x2a>
 8004ff6:	2000      	movs	r0, #0
 8004ff8:	4770      	bx	lr
 8004ffa:	2020      	movs	r0, #32
 8004ffc:	4770      	bx	lr
	...

08005000 <__i2b>:
 8005000:	b510      	push	{r4, lr}
 8005002:	460c      	mov	r4, r1
 8005004:	2101      	movs	r1, #1
 8005006:	f7ff feb9 	bl	8004d7c <_Balloc>
 800500a:	4602      	mov	r2, r0
 800500c:	b928      	cbnz	r0, 800501a <__i2b+0x1a>
 800500e:	4b05      	ldr	r3, [pc, #20]	; (8005024 <__i2b+0x24>)
 8005010:	4805      	ldr	r0, [pc, #20]	; (8005028 <__i2b+0x28>)
 8005012:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005016:	f000 fe01 	bl	8005c1c <__assert_func>
 800501a:	2301      	movs	r3, #1
 800501c:	6144      	str	r4, [r0, #20]
 800501e:	6103      	str	r3, [r0, #16]
 8005020:	bd10      	pop	{r4, pc}
 8005022:	bf00      	nop
 8005024:	08006a28 	.word	0x08006a28
 8005028:	08006ab4 	.word	0x08006ab4

0800502c <__multiply>:
 800502c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005030:	4691      	mov	r9, r2
 8005032:	690a      	ldr	r2, [r1, #16]
 8005034:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005038:	429a      	cmp	r2, r3
 800503a:	bfb8      	it	lt
 800503c:	460b      	movlt	r3, r1
 800503e:	460c      	mov	r4, r1
 8005040:	bfbc      	itt	lt
 8005042:	464c      	movlt	r4, r9
 8005044:	4699      	movlt	r9, r3
 8005046:	6927      	ldr	r7, [r4, #16]
 8005048:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800504c:	68a3      	ldr	r3, [r4, #8]
 800504e:	6861      	ldr	r1, [r4, #4]
 8005050:	eb07 060a 	add.w	r6, r7, sl
 8005054:	42b3      	cmp	r3, r6
 8005056:	b085      	sub	sp, #20
 8005058:	bfb8      	it	lt
 800505a:	3101      	addlt	r1, #1
 800505c:	f7ff fe8e 	bl	8004d7c <_Balloc>
 8005060:	b930      	cbnz	r0, 8005070 <__multiply+0x44>
 8005062:	4602      	mov	r2, r0
 8005064:	4b44      	ldr	r3, [pc, #272]	; (8005178 <__multiply+0x14c>)
 8005066:	4845      	ldr	r0, [pc, #276]	; (800517c <__multiply+0x150>)
 8005068:	f240 115d 	movw	r1, #349	; 0x15d
 800506c:	f000 fdd6 	bl	8005c1c <__assert_func>
 8005070:	f100 0514 	add.w	r5, r0, #20
 8005074:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8005078:	462b      	mov	r3, r5
 800507a:	2200      	movs	r2, #0
 800507c:	4543      	cmp	r3, r8
 800507e:	d321      	bcc.n	80050c4 <__multiply+0x98>
 8005080:	f104 0314 	add.w	r3, r4, #20
 8005084:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8005088:	f109 0314 	add.w	r3, r9, #20
 800508c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8005090:	9202      	str	r2, [sp, #8]
 8005092:	1b3a      	subs	r2, r7, r4
 8005094:	3a15      	subs	r2, #21
 8005096:	f022 0203 	bic.w	r2, r2, #3
 800509a:	3204      	adds	r2, #4
 800509c:	f104 0115 	add.w	r1, r4, #21
 80050a0:	428f      	cmp	r7, r1
 80050a2:	bf38      	it	cc
 80050a4:	2204      	movcc	r2, #4
 80050a6:	9201      	str	r2, [sp, #4]
 80050a8:	9a02      	ldr	r2, [sp, #8]
 80050aa:	9303      	str	r3, [sp, #12]
 80050ac:	429a      	cmp	r2, r3
 80050ae:	d80c      	bhi.n	80050ca <__multiply+0x9e>
 80050b0:	2e00      	cmp	r6, #0
 80050b2:	dd03      	ble.n	80050bc <__multiply+0x90>
 80050b4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80050b8:	2b00      	cmp	r3, #0
 80050ba:	d05a      	beq.n	8005172 <__multiply+0x146>
 80050bc:	6106      	str	r6, [r0, #16]
 80050be:	b005      	add	sp, #20
 80050c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050c4:	f843 2b04 	str.w	r2, [r3], #4
 80050c8:	e7d8      	b.n	800507c <__multiply+0x50>
 80050ca:	f8b3 a000 	ldrh.w	sl, [r3]
 80050ce:	f1ba 0f00 	cmp.w	sl, #0
 80050d2:	d024      	beq.n	800511e <__multiply+0xf2>
 80050d4:	f104 0e14 	add.w	lr, r4, #20
 80050d8:	46a9      	mov	r9, r5
 80050da:	f04f 0c00 	mov.w	ip, #0
 80050de:	f85e 2b04 	ldr.w	r2, [lr], #4
 80050e2:	f8d9 1000 	ldr.w	r1, [r9]
 80050e6:	fa1f fb82 	uxth.w	fp, r2
 80050ea:	b289      	uxth	r1, r1
 80050ec:	fb0a 110b 	mla	r1, sl, fp, r1
 80050f0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80050f4:	f8d9 2000 	ldr.w	r2, [r9]
 80050f8:	4461      	add	r1, ip
 80050fa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80050fe:	fb0a c20b 	mla	r2, sl, fp, ip
 8005102:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8005106:	b289      	uxth	r1, r1
 8005108:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800510c:	4577      	cmp	r7, lr
 800510e:	f849 1b04 	str.w	r1, [r9], #4
 8005112:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8005116:	d8e2      	bhi.n	80050de <__multiply+0xb2>
 8005118:	9a01      	ldr	r2, [sp, #4]
 800511a:	f845 c002 	str.w	ip, [r5, r2]
 800511e:	9a03      	ldr	r2, [sp, #12]
 8005120:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8005124:	3304      	adds	r3, #4
 8005126:	f1b9 0f00 	cmp.w	r9, #0
 800512a:	d020      	beq.n	800516e <__multiply+0x142>
 800512c:	6829      	ldr	r1, [r5, #0]
 800512e:	f104 0c14 	add.w	ip, r4, #20
 8005132:	46ae      	mov	lr, r5
 8005134:	f04f 0a00 	mov.w	sl, #0
 8005138:	f8bc b000 	ldrh.w	fp, [ip]
 800513c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8005140:	fb09 220b 	mla	r2, r9, fp, r2
 8005144:	4492      	add	sl, r2
 8005146:	b289      	uxth	r1, r1
 8005148:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800514c:	f84e 1b04 	str.w	r1, [lr], #4
 8005150:	f85c 2b04 	ldr.w	r2, [ip], #4
 8005154:	f8be 1000 	ldrh.w	r1, [lr]
 8005158:	0c12      	lsrs	r2, r2, #16
 800515a:	fb09 1102 	mla	r1, r9, r2, r1
 800515e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8005162:	4567      	cmp	r7, ip
 8005164:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005168:	d8e6      	bhi.n	8005138 <__multiply+0x10c>
 800516a:	9a01      	ldr	r2, [sp, #4]
 800516c:	50a9      	str	r1, [r5, r2]
 800516e:	3504      	adds	r5, #4
 8005170:	e79a      	b.n	80050a8 <__multiply+0x7c>
 8005172:	3e01      	subs	r6, #1
 8005174:	e79c      	b.n	80050b0 <__multiply+0x84>
 8005176:	bf00      	nop
 8005178:	08006a28 	.word	0x08006a28
 800517c:	08006ab4 	.word	0x08006ab4

08005180 <__pow5mult>:
 8005180:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005184:	4615      	mov	r5, r2
 8005186:	f012 0203 	ands.w	r2, r2, #3
 800518a:	4606      	mov	r6, r0
 800518c:	460f      	mov	r7, r1
 800518e:	d007      	beq.n	80051a0 <__pow5mult+0x20>
 8005190:	4c25      	ldr	r4, [pc, #148]	; (8005228 <__pow5mult+0xa8>)
 8005192:	3a01      	subs	r2, #1
 8005194:	2300      	movs	r3, #0
 8005196:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800519a:	f7ff fe51 	bl	8004e40 <__multadd>
 800519e:	4607      	mov	r7, r0
 80051a0:	10ad      	asrs	r5, r5, #2
 80051a2:	d03d      	beq.n	8005220 <__pow5mult+0xa0>
 80051a4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80051a6:	b97c      	cbnz	r4, 80051c8 <__pow5mult+0x48>
 80051a8:	2010      	movs	r0, #16
 80051aa:	f7ff fdbf 	bl	8004d2c <malloc>
 80051ae:	4602      	mov	r2, r0
 80051b0:	6270      	str	r0, [r6, #36]	; 0x24
 80051b2:	b928      	cbnz	r0, 80051c0 <__pow5mult+0x40>
 80051b4:	4b1d      	ldr	r3, [pc, #116]	; (800522c <__pow5mult+0xac>)
 80051b6:	481e      	ldr	r0, [pc, #120]	; (8005230 <__pow5mult+0xb0>)
 80051b8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80051bc:	f000 fd2e 	bl	8005c1c <__assert_func>
 80051c0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80051c4:	6004      	str	r4, [r0, #0]
 80051c6:	60c4      	str	r4, [r0, #12]
 80051c8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80051cc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80051d0:	b94c      	cbnz	r4, 80051e6 <__pow5mult+0x66>
 80051d2:	f240 2171 	movw	r1, #625	; 0x271
 80051d6:	4630      	mov	r0, r6
 80051d8:	f7ff ff12 	bl	8005000 <__i2b>
 80051dc:	2300      	movs	r3, #0
 80051de:	f8c8 0008 	str.w	r0, [r8, #8]
 80051e2:	4604      	mov	r4, r0
 80051e4:	6003      	str	r3, [r0, #0]
 80051e6:	f04f 0900 	mov.w	r9, #0
 80051ea:	07eb      	lsls	r3, r5, #31
 80051ec:	d50a      	bpl.n	8005204 <__pow5mult+0x84>
 80051ee:	4639      	mov	r1, r7
 80051f0:	4622      	mov	r2, r4
 80051f2:	4630      	mov	r0, r6
 80051f4:	f7ff ff1a 	bl	800502c <__multiply>
 80051f8:	4639      	mov	r1, r7
 80051fa:	4680      	mov	r8, r0
 80051fc:	4630      	mov	r0, r6
 80051fe:	f7ff fdfd 	bl	8004dfc <_Bfree>
 8005202:	4647      	mov	r7, r8
 8005204:	106d      	asrs	r5, r5, #1
 8005206:	d00b      	beq.n	8005220 <__pow5mult+0xa0>
 8005208:	6820      	ldr	r0, [r4, #0]
 800520a:	b938      	cbnz	r0, 800521c <__pow5mult+0x9c>
 800520c:	4622      	mov	r2, r4
 800520e:	4621      	mov	r1, r4
 8005210:	4630      	mov	r0, r6
 8005212:	f7ff ff0b 	bl	800502c <__multiply>
 8005216:	6020      	str	r0, [r4, #0]
 8005218:	f8c0 9000 	str.w	r9, [r0]
 800521c:	4604      	mov	r4, r0
 800521e:	e7e4      	b.n	80051ea <__pow5mult+0x6a>
 8005220:	4638      	mov	r0, r7
 8005222:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005226:	bf00      	nop
 8005228:	08006c00 	.word	0x08006c00
 800522c:	080069b6 	.word	0x080069b6
 8005230:	08006ab4 	.word	0x08006ab4

08005234 <__lshift>:
 8005234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005238:	460c      	mov	r4, r1
 800523a:	6849      	ldr	r1, [r1, #4]
 800523c:	6923      	ldr	r3, [r4, #16]
 800523e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8005242:	68a3      	ldr	r3, [r4, #8]
 8005244:	4607      	mov	r7, r0
 8005246:	4691      	mov	r9, r2
 8005248:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800524c:	f108 0601 	add.w	r6, r8, #1
 8005250:	42b3      	cmp	r3, r6
 8005252:	db0b      	blt.n	800526c <__lshift+0x38>
 8005254:	4638      	mov	r0, r7
 8005256:	f7ff fd91 	bl	8004d7c <_Balloc>
 800525a:	4605      	mov	r5, r0
 800525c:	b948      	cbnz	r0, 8005272 <__lshift+0x3e>
 800525e:	4602      	mov	r2, r0
 8005260:	4b2a      	ldr	r3, [pc, #168]	; (800530c <__lshift+0xd8>)
 8005262:	482b      	ldr	r0, [pc, #172]	; (8005310 <__lshift+0xdc>)
 8005264:	f240 11d9 	movw	r1, #473	; 0x1d9
 8005268:	f000 fcd8 	bl	8005c1c <__assert_func>
 800526c:	3101      	adds	r1, #1
 800526e:	005b      	lsls	r3, r3, #1
 8005270:	e7ee      	b.n	8005250 <__lshift+0x1c>
 8005272:	2300      	movs	r3, #0
 8005274:	f100 0114 	add.w	r1, r0, #20
 8005278:	f100 0210 	add.w	r2, r0, #16
 800527c:	4618      	mov	r0, r3
 800527e:	4553      	cmp	r3, sl
 8005280:	db37      	blt.n	80052f2 <__lshift+0xbe>
 8005282:	6920      	ldr	r0, [r4, #16]
 8005284:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005288:	f104 0314 	add.w	r3, r4, #20
 800528c:	f019 091f 	ands.w	r9, r9, #31
 8005290:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005294:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8005298:	d02f      	beq.n	80052fa <__lshift+0xc6>
 800529a:	f1c9 0e20 	rsb	lr, r9, #32
 800529e:	468a      	mov	sl, r1
 80052a0:	f04f 0c00 	mov.w	ip, #0
 80052a4:	681a      	ldr	r2, [r3, #0]
 80052a6:	fa02 f209 	lsl.w	r2, r2, r9
 80052aa:	ea42 020c 	orr.w	r2, r2, ip
 80052ae:	f84a 2b04 	str.w	r2, [sl], #4
 80052b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80052b6:	4298      	cmp	r0, r3
 80052b8:	fa22 fc0e 	lsr.w	ip, r2, lr
 80052bc:	d8f2      	bhi.n	80052a4 <__lshift+0x70>
 80052be:	1b03      	subs	r3, r0, r4
 80052c0:	3b15      	subs	r3, #21
 80052c2:	f023 0303 	bic.w	r3, r3, #3
 80052c6:	3304      	adds	r3, #4
 80052c8:	f104 0215 	add.w	r2, r4, #21
 80052cc:	4290      	cmp	r0, r2
 80052ce:	bf38      	it	cc
 80052d0:	2304      	movcc	r3, #4
 80052d2:	f841 c003 	str.w	ip, [r1, r3]
 80052d6:	f1bc 0f00 	cmp.w	ip, #0
 80052da:	d001      	beq.n	80052e0 <__lshift+0xac>
 80052dc:	f108 0602 	add.w	r6, r8, #2
 80052e0:	3e01      	subs	r6, #1
 80052e2:	4638      	mov	r0, r7
 80052e4:	612e      	str	r6, [r5, #16]
 80052e6:	4621      	mov	r1, r4
 80052e8:	f7ff fd88 	bl	8004dfc <_Bfree>
 80052ec:	4628      	mov	r0, r5
 80052ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80052f2:	f842 0f04 	str.w	r0, [r2, #4]!
 80052f6:	3301      	adds	r3, #1
 80052f8:	e7c1      	b.n	800527e <__lshift+0x4a>
 80052fa:	3904      	subs	r1, #4
 80052fc:	f853 2b04 	ldr.w	r2, [r3], #4
 8005300:	f841 2f04 	str.w	r2, [r1, #4]!
 8005304:	4298      	cmp	r0, r3
 8005306:	d8f9      	bhi.n	80052fc <__lshift+0xc8>
 8005308:	e7ea      	b.n	80052e0 <__lshift+0xac>
 800530a:	bf00      	nop
 800530c:	08006a28 	.word	0x08006a28
 8005310:	08006ab4 	.word	0x08006ab4

08005314 <__mcmp>:
 8005314:	b530      	push	{r4, r5, lr}
 8005316:	6902      	ldr	r2, [r0, #16]
 8005318:	690c      	ldr	r4, [r1, #16]
 800531a:	1b12      	subs	r2, r2, r4
 800531c:	d10e      	bne.n	800533c <__mcmp+0x28>
 800531e:	f100 0314 	add.w	r3, r0, #20
 8005322:	3114      	adds	r1, #20
 8005324:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8005328:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800532c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8005330:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8005334:	42a5      	cmp	r5, r4
 8005336:	d003      	beq.n	8005340 <__mcmp+0x2c>
 8005338:	d305      	bcc.n	8005346 <__mcmp+0x32>
 800533a:	2201      	movs	r2, #1
 800533c:	4610      	mov	r0, r2
 800533e:	bd30      	pop	{r4, r5, pc}
 8005340:	4283      	cmp	r3, r0
 8005342:	d3f3      	bcc.n	800532c <__mcmp+0x18>
 8005344:	e7fa      	b.n	800533c <__mcmp+0x28>
 8005346:	f04f 32ff 	mov.w	r2, #4294967295
 800534a:	e7f7      	b.n	800533c <__mcmp+0x28>

0800534c <__mdiff>:
 800534c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005350:	460c      	mov	r4, r1
 8005352:	4606      	mov	r6, r0
 8005354:	4611      	mov	r1, r2
 8005356:	4620      	mov	r0, r4
 8005358:	4690      	mov	r8, r2
 800535a:	f7ff ffdb 	bl	8005314 <__mcmp>
 800535e:	1e05      	subs	r5, r0, #0
 8005360:	d110      	bne.n	8005384 <__mdiff+0x38>
 8005362:	4629      	mov	r1, r5
 8005364:	4630      	mov	r0, r6
 8005366:	f7ff fd09 	bl	8004d7c <_Balloc>
 800536a:	b930      	cbnz	r0, 800537a <__mdiff+0x2e>
 800536c:	4b3a      	ldr	r3, [pc, #232]	; (8005458 <__mdiff+0x10c>)
 800536e:	4602      	mov	r2, r0
 8005370:	f240 2132 	movw	r1, #562	; 0x232
 8005374:	4839      	ldr	r0, [pc, #228]	; (800545c <__mdiff+0x110>)
 8005376:	f000 fc51 	bl	8005c1c <__assert_func>
 800537a:	2301      	movs	r3, #1
 800537c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8005380:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005384:	bfa4      	itt	ge
 8005386:	4643      	movge	r3, r8
 8005388:	46a0      	movge	r8, r4
 800538a:	4630      	mov	r0, r6
 800538c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8005390:	bfa6      	itte	ge
 8005392:	461c      	movge	r4, r3
 8005394:	2500      	movge	r5, #0
 8005396:	2501      	movlt	r5, #1
 8005398:	f7ff fcf0 	bl	8004d7c <_Balloc>
 800539c:	b920      	cbnz	r0, 80053a8 <__mdiff+0x5c>
 800539e:	4b2e      	ldr	r3, [pc, #184]	; (8005458 <__mdiff+0x10c>)
 80053a0:	4602      	mov	r2, r0
 80053a2:	f44f 7110 	mov.w	r1, #576	; 0x240
 80053a6:	e7e5      	b.n	8005374 <__mdiff+0x28>
 80053a8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80053ac:	6926      	ldr	r6, [r4, #16]
 80053ae:	60c5      	str	r5, [r0, #12]
 80053b0:	f104 0914 	add.w	r9, r4, #20
 80053b4:	f108 0514 	add.w	r5, r8, #20
 80053b8:	f100 0e14 	add.w	lr, r0, #20
 80053bc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80053c0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80053c4:	f108 0210 	add.w	r2, r8, #16
 80053c8:	46f2      	mov	sl, lr
 80053ca:	2100      	movs	r1, #0
 80053cc:	f859 3b04 	ldr.w	r3, [r9], #4
 80053d0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80053d4:	fa1f f883 	uxth.w	r8, r3
 80053d8:	fa11 f18b 	uxtah	r1, r1, fp
 80053dc:	0c1b      	lsrs	r3, r3, #16
 80053de:	eba1 0808 	sub.w	r8, r1, r8
 80053e2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80053e6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80053ea:	fa1f f888 	uxth.w	r8, r8
 80053ee:	1419      	asrs	r1, r3, #16
 80053f0:	454e      	cmp	r6, r9
 80053f2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80053f6:	f84a 3b04 	str.w	r3, [sl], #4
 80053fa:	d8e7      	bhi.n	80053cc <__mdiff+0x80>
 80053fc:	1b33      	subs	r3, r6, r4
 80053fe:	3b15      	subs	r3, #21
 8005400:	f023 0303 	bic.w	r3, r3, #3
 8005404:	3304      	adds	r3, #4
 8005406:	3415      	adds	r4, #21
 8005408:	42a6      	cmp	r6, r4
 800540a:	bf38      	it	cc
 800540c:	2304      	movcc	r3, #4
 800540e:	441d      	add	r5, r3
 8005410:	4473      	add	r3, lr
 8005412:	469e      	mov	lr, r3
 8005414:	462e      	mov	r6, r5
 8005416:	4566      	cmp	r6, ip
 8005418:	d30e      	bcc.n	8005438 <__mdiff+0xec>
 800541a:	f10c 0203 	add.w	r2, ip, #3
 800541e:	1b52      	subs	r2, r2, r5
 8005420:	f022 0203 	bic.w	r2, r2, #3
 8005424:	3d03      	subs	r5, #3
 8005426:	45ac      	cmp	ip, r5
 8005428:	bf38      	it	cc
 800542a:	2200      	movcc	r2, #0
 800542c:	441a      	add	r2, r3
 800542e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8005432:	b17b      	cbz	r3, 8005454 <__mdiff+0x108>
 8005434:	6107      	str	r7, [r0, #16]
 8005436:	e7a3      	b.n	8005380 <__mdiff+0x34>
 8005438:	f856 8b04 	ldr.w	r8, [r6], #4
 800543c:	fa11 f288 	uxtah	r2, r1, r8
 8005440:	1414      	asrs	r4, r2, #16
 8005442:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8005446:	b292      	uxth	r2, r2
 8005448:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800544c:	f84e 2b04 	str.w	r2, [lr], #4
 8005450:	1421      	asrs	r1, r4, #16
 8005452:	e7e0      	b.n	8005416 <__mdiff+0xca>
 8005454:	3f01      	subs	r7, #1
 8005456:	e7ea      	b.n	800542e <__mdiff+0xe2>
 8005458:	08006a28 	.word	0x08006a28
 800545c:	08006ab4 	.word	0x08006ab4

08005460 <__ulp>:
 8005460:	b082      	sub	sp, #8
 8005462:	ed8d 0b00 	vstr	d0, [sp]
 8005466:	9b01      	ldr	r3, [sp, #4]
 8005468:	4912      	ldr	r1, [pc, #72]	; (80054b4 <__ulp+0x54>)
 800546a:	4019      	ands	r1, r3
 800546c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8005470:	2900      	cmp	r1, #0
 8005472:	dd05      	ble.n	8005480 <__ulp+0x20>
 8005474:	2200      	movs	r2, #0
 8005476:	460b      	mov	r3, r1
 8005478:	ec43 2b10 	vmov	d0, r2, r3
 800547c:	b002      	add	sp, #8
 800547e:	4770      	bx	lr
 8005480:	4249      	negs	r1, r1
 8005482:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8005486:	ea4f 5021 	mov.w	r0, r1, asr #20
 800548a:	f04f 0200 	mov.w	r2, #0
 800548e:	f04f 0300 	mov.w	r3, #0
 8005492:	da04      	bge.n	800549e <__ulp+0x3e>
 8005494:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8005498:	fa41 f300 	asr.w	r3, r1, r0
 800549c:	e7ec      	b.n	8005478 <__ulp+0x18>
 800549e:	f1a0 0114 	sub.w	r1, r0, #20
 80054a2:	291e      	cmp	r1, #30
 80054a4:	bfda      	itte	le
 80054a6:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 80054aa:	fa20 f101 	lsrle.w	r1, r0, r1
 80054ae:	2101      	movgt	r1, #1
 80054b0:	460a      	mov	r2, r1
 80054b2:	e7e1      	b.n	8005478 <__ulp+0x18>
 80054b4:	7ff00000 	.word	0x7ff00000

080054b8 <__b2d>:
 80054b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054ba:	6905      	ldr	r5, [r0, #16]
 80054bc:	f100 0714 	add.w	r7, r0, #20
 80054c0:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80054c4:	1f2e      	subs	r6, r5, #4
 80054c6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80054ca:	4620      	mov	r0, r4
 80054cc:	f7ff fd48 	bl	8004f60 <__hi0bits>
 80054d0:	f1c0 0320 	rsb	r3, r0, #32
 80054d4:	280a      	cmp	r0, #10
 80054d6:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8005554 <__b2d+0x9c>
 80054da:	600b      	str	r3, [r1, #0]
 80054dc:	dc14      	bgt.n	8005508 <__b2d+0x50>
 80054de:	f1c0 0e0b 	rsb	lr, r0, #11
 80054e2:	fa24 f10e 	lsr.w	r1, r4, lr
 80054e6:	42b7      	cmp	r7, r6
 80054e8:	ea41 030c 	orr.w	r3, r1, ip
 80054ec:	bf34      	ite	cc
 80054ee:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80054f2:	2100      	movcs	r1, #0
 80054f4:	3015      	adds	r0, #21
 80054f6:	fa04 f000 	lsl.w	r0, r4, r0
 80054fa:	fa21 f10e 	lsr.w	r1, r1, lr
 80054fe:	ea40 0201 	orr.w	r2, r0, r1
 8005502:	ec43 2b10 	vmov	d0, r2, r3
 8005506:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005508:	42b7      	cmp	r7, r6
 800550a:	bf3a      	itte	cc
 800550c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8005510:	f1a5 0608 	subcc.w	r6, r5, #8
 8005514:	2100      	movcs	r1, #0
 8005516:	380b      	subs	r0, #11
 8005518:	d017      	beq.n	800554a <__b2d+0x92>
 800551a:	f1c0 0c20 	rsb	ip, r0, #32
 800551e:	fa04 f500 	lsl.w	r5, r4, r0
 8005522:	42be      	cmp	r6, r7
 8005524:	fa21 f40c 	lsr.w	r4, r1, ip
 8005528:	ea45 0504 	orr.w	r5, r5, r4
 800552c:	bf8c      	ite	hi
 800552e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8005532:	2400      	movls	r4, #0
 8005534:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8005538:	fa01 f000 	lsl.w	r0, r1, r0
 800553c:	fa24 f40c 	lsr.w	r4, r4, ip
 8005540:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8005544:	ea40 0204 	orr.w	r2, r0, r4
 8005548:	e7db      	b.n	8005502 <__b2d+0x4a>
 800554a:	ea44 030c 	orr.w	r3, r4, ip
 800554e:	460a      	mov	r2, r1
 8005550:	e7d7      	b.n	8005502 <__b2d+0x4a>
 8005552:	bf00      	nop
 8005554:	3ff00000 	.word	0x3ff00000

08005558 <__d2b>:
 8005558:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800555c:	4689      	mov	r9, r1
 800555e:	2101      	movs	r1, #1
 8005560:	ec57 6b10 	vmov	r6, r7, d0
 8005564:	4690      	mov	r8, r2
 8005566:	f7ff fc09 	bl	8004d7c <_Balloc>
 800556a:	4604      	mov	r4, r0
 800556c:	b930      	cbnz	r0, 800557c <__d2b+0x24>
 800556e:	4602      	mov	r2, r0
 8005570:	4b25      	ldr	r3, [pc, #148]	; (8005608 <__d2b+0xb0>)
 8005572:	4826      	ldr	r0, [pc, #152]	; (800560c <__d2b+0xb4>)
 8005574:	f240 310a 	movw	r1, #778	; 0x30a
 8005578:	f000 fb50 	bl	8005c1c <__assert_func>
 800557c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8005580:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8005584:	bb35      	cbnz	r5, 80055d4 <__d2b+0x7c>
 8005586:	2e00      	cmp	r6, #0
 8005588:	9301      	str	r3, [sp, #4]
 800558a:	d028      	beq.n	80055de <__d2b+0x86>
 800558c:	4668      	mov	r0, sp
 800558e:	9600      	str	r6, [sp, #0]
 8005590:	f7ff fd06 	bl	8004fa0 <__lo0bits>
 8005594:	9900      	ldr	r1, [sp, #0]
 8005596:	b300      	cbz	r0, 80055da <__d2b+0x82>
 8005598:	9a01      	ldr	r2, [sp, #4]
 800559a:	f1c0 0320 	rsb	r3, r0, #32
 800559e:	fa02 f303 	lsl.w	r3, r2, r3
 80055a2:	430b      	orrs	r3, r1
 80055a4:	40c2      	lsrs	r2, r0
 80055a6:	6163      	str	r3, [r4, #20]
 80055a8:	9201      	str	r2, [sp, #4]
 80055aa:	9b01      	ldr	r3, [sp, #4]
 80055ac:	61a3      	str	r3, [r4, #24]
 80055ae:	2b00      	cmp	r3, #0
 80055b0:	bf14      	ite	ne
 80055b2:	2202      	movne	r2, #2
 80055b4:	2201      	moveq	r2, #1
 80055b6:	6122      	str	r2, [r4, #16]
 80055b8:	b1d5      	cbz	r5, 80055f0 <__d2b+0x98>
 80055ba:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80055be:	4405      	add	r5, r0
 80055c0:	f8c9 5000 	str.w	r5, [r9]
 80055c4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80055c8:	f8c8 0000 	str.w	r0, [r8]
 80055cc:	4620      	mov	r0, r4
 80055ce:	b003      	add	sp, #12
 80055d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80055d4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80055d8:	e7d5      	b.n	8005586 <__d2b+0x2e>
 80055da:	6161      	str	r1, [r4, #20]
 80055dc:	e7e5      	b.n	80055aa <__d2b+0x52>
 80055de:	a801      	add	r0, sp, #4
 80055e0:	f7ff fcde 	bl	8004fa0 <__lo0bits>
 80055e4:	9b01      	ldr	r3, [sp, #4]
 80055e6:	6163      	str	r3, [r4, #20]
 80055e8:	2201      	movs	r2, #1
 80055ea:	6122      	str	r2, [r4, #16]
 80055ec:	3020      	adds	r0, #32
 80055ee:	e7e3      	b.n	80055b8 <__d2b+0x60>
 80055f0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80055f4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80055f8:	f8c9 0000 	str.w	r0, [r9]
 80055fc:	6918      	ldr	r0, [r3, #16]
 80055fe:	f7ff fcaf 	bl	8004f60 <__hi0bits>
 8005602:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8005606:	e7df      	b.n	80055c8 <__d2b+0x70>
 8005608:	08006a28 	.word	0x08006a28
 800560c:	08006ab4 	.word	0x08006ab4

08005610 <__ratio>:
 8005610:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005614:	4688      	mov	r8, r1
 8005616:	4669      	mov	r1, sp
 8005618:	4681      	mov	r9, r0
 800561a:	f7ff ff4d 	bl	80054b8 <__b2d>
 800561e:	a901      	add	r1, sp, #4
 8005620:	4640      	mov	r0, r8
 8005622:	ec55 4b10 	vmov	r4, r5, d0
 8005626:	f7ff ff47 	bl	80054b8 <__b2d>
 800562a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800562e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005632:	eba3 0c02 	sub.w	ip, r3, r2
 8005636:	e9dd 3200 	ldrd	r3, r2, [sp]
 800563a:	1a9b      	subs	r3, r3, r2
 800563c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8005640:	ec51 0b10 	vmov	r0, r1, d0
 8005644:	2b00      	cmp	r3, #0
 8005646:	bfd6      	itet	le
 8005648:	460a      	movle	r2, r1
 800564a:	462a      	movgt	r2, r5
 800564c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005650:	468b      	mov	fp, r1
 8005652:	462f      	mov	r7, r5
 8005654:	bfd4      	ite	le
 8005656:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800565a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800565e:	4620      	mov	r0, r4
 8005660:	ee10 2a10 	vmov	r2, s0
 8005664:	465b      	mov	r3, fp
 8005666:	4639      	mov	r1, r7
 8005668:	f7fb f8f8 	bl	800085c <__aeabi_ddiv>
 800566c:	ec41 0b10 	vmov	d0, r0, r1
 8005670:	b003      	add	sp, #12
 8005672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005676 <__copybits>:
 8005676:	3901      	subs	r1, #1
 8005678:	b570      	push	{r4, r5, r6, lr}
 800567a:	1149      	asrs	r1, r1, #5
 800567c:	6914      	ldr	r4, [r2, #16]
 800567e:	3101      	adds	r1, #1
 8005680:	f102 0314 	add.w	r3, r2, #20
 8005684:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005688:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800568c:	1f05      	subs	r5, r0, #4
 800568e:	42a3      	cmp	r3, r4
 8005690:	d30c      	bcc.n	80056ac <__copybits+0x36>
 8005692:	1aa3      	subs	r3, r4, r2
 8005694:	3b11      	subs	r3, #17
 8005696:	f023 0303 	bic.w	r3, r3, #3
 800569a:	3211      	adds	r2, #17
 800569c:	42a2      	cmp	r2, r4
 800569e:	bf88      	it	hi
 80056a0:	2300      	movhi	r3, #0
 80056a2:	4418      	add	r0, r3
 80056a4:	2300      	movs	r3, #0
 80056a6:	4288      	cmp	r0, r1
 80056a8:	d305      	bcc.n	80056b6 <__copybits+0x40>
 80056aa:	bd70      	pop	{r4, r5, r6, pc}
 80056ac:	f853 6b04 	ldr.w	r6, [r3], #4
 80056b0:	f845 6f04 	str.w	r6, [r5, #4]!
 80056b4:	e7eb      	b.n	800568e <__copybits+0x18>
 80056b6:	f840 3b04 	str.w	r3, [r0], #4
 80056ba:	e7f4      	b.n	80056a6 <__copybits+0x30>

080056bc <__any_on>:
 80056bc:	f100 0214 	add.w	r2, r0, #20
 80056c0:	6900      	ldr	r0, [r0, #16]
 80056c2:	114b      	asrs	r3, r1, #5
 80056c4:	4298      	cmp	r0, r3
 80056c6:	b510      	push	{r4, lr}
 80056c8:	db11      	blt.n	80056ee <__any_on+0x32>
 80056ca:	dd0a      	ble.n	80056e2 <__any_on+0x26>
 80056cc:	f011 011f 	ands.w	r1, r1, #31
 80056d0:	d007      	beq.n	80056e2 <__any_on+0x26>
 80056d2:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80056d6:	fa24 f001 	lsr.w	r0, r4, r1
 80056da:	fa00 f101 	lsl.w	r1, r0, r1
 80056de:	428c      	cmp	r4, r1
 80056e0:	d10b      	bne.n	80056fa <__any_on+0x3e>
 80056e2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80056e6:	4293      	cmp	r3, r2
 80056e8:	d803      	bhi.n	80056f2 <__any_on+0x36>
 80056ea:	2000      	movs	r0, #0
 80056ec:	bd10      	pop	{r4, pc}
 80056ee:	4603      	mov	r3, r0
 80056f0:	e7f7      	b.n	80056e2 <__any_on+0x26>
 80056f2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80056f6:	2900      	cmp	r1, #0
 80056f8:	d0f5      	beq.n	80056e6 <__any_on+0x2a>
 80056fa:	2001      	movs	r0, #1
 80056fc:	e7f6      	b.n	80056ec <__any_on+0x30>

080056fe <_calloc_r>:
 80056fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005700:	fba1 2402 	umull	r2, r4, r1, r2
 8005704:	b94c      	cbnz	r4, 800571a <_calloc_r+0x1c>
 8005706:	4611      	mov	r1, r2
 8005708:	9201      	str	r2, [sp, #4]
 800570a:	f000 f87b 	bl	8005804 <_malloc_r>
 800570e:	9a01      	ldr	r2, [sp, #4]
 8005710:	4605      	mov	r5, r0
 8005712:	b930      	cbnz	r0, 8005722 <_calloc_r+0x24>
 8005714:	4628      	mov	r0, r5
 8005716:	b003      	add	sp, #12
 8005718:	bd30      	pop	{r4, r5, pc}
 800571a:	220c      	movs	r2, #12
 800571c:	6002      	str	r2, [r0, #0]
 800571e:	2500      	movs	r5, #0
 8005720:	e7f8      	b.n	8005714 <_calloc_r+0x16>
 8005722:	4621      	mov	r1, r4
 8005724:	f7fc fb9e 	bl	8001e64 <memset>
 8005728:	e7f4      	b.n	8005714 <_calloc_r+0x16>
	...

0800572c <_free_r>:
 800572c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800572e:	2900      	cmp	r1, #0
 8005730:	d044      	beq.n	80057bc <_free_r+0x90>
 8005732:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005736:	9001      	str	r0, [sp, #4]
 8005738:	2b00      	cmp	r3, #0
 800573a:	f1a1 0404 	sub.w	r4, r1, #4
 800573e:	bfb8      	it	lt
 8005740:	18e4      	addlt	r4, r4, r3
 8005742:	f000 fab5 	bl	8005cb0 <__malloc_lock>
 8005746:	4a1e      	ldr	r2, [pc, #120]	; (80057c0 <_free_r+0x94>)
 8005748:	9801      	ldr	r0, [sp, #4]
 800574a:	6813      	ldr	r3, [r2, #0]
 800574c:	b933      	cbnz	r3, 800575c <_free_r+0x30>
 800574e:	6063      	str	r3, [r4, #4]
 8005750:	6014      	str	r4, [r2, #0]
 8005752:	b003      	add	sp, #12
 8005754:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005758:	f000 bab0 	b.w	8005cbc <__malloc_unlock>
 800575c:	42a3      	cmp	r3, r4
 800575e:	d908      	bls.n	8005772 <_free_r+0x46>
 8005760:	6825      	ldr	r5, [r4, #0]
 8005762:	1961      	adds	r1, r4, r5
 8005764:	428b      	cmp	r3, r1
 8005766:	bf01      	itttt	eq
 8005768:	6819      	ldreq	r1, [r3, #0]
 800576a:	685b      	ldreq	r3, [r3, #4]
 800576c:	1949      	addeq	r1, r1, r5
 800576e:	6021      	streq	r1, [r4, #0]
 8005770:	e7ed      	b.n	800574e <_free_r+0x22>
 8005772:	461a      	mov	r2, r3
 8005774:	685b      	ldr	r3, [r3, #4]
 8005776:	b10b      	cbz	r3, 800577c <_free_r+0x50>
 8005778:	42a3      	cmp	r3, r4
 800577a:	d9fa      	bls.n	8005772 <_free_r+0x46>
 800577c:	6811      	ldr	r1, [r2, #0]
 800577e:	1855      	adds	r5, r2, r1
 8005780:	42a5      	cmp	r5, r4
 8005782:	d10b      	bne.n	800579c <_free_r+0x70>
 8005784:	6824      	ldr	r4, [r4, #0]
 8005786:	4421      	add	r1, r4
 8005788:	1854      	adds	r4, r2, r1
 800578a:	42a3      	cmp	r3, r4
 800578c:	6011      	str	r1, [r2, #0]
 800578e:	d1e0      	bne.n	8005752 <_free_r+0x26>
 8005790:	681c      	ldr	r4, [r3, #0]
 8005792:	685b      	ldr	r3, [r3, #4]
 8005794:	6053      	str	r3, [r2, #4]
 8005796:	4421      	add	r1, r4
 8005798:	6011      	str	r1, [r2, #0]
 800579a:	e7da      	b.n	8005752 <_free_r+0x26>
 800579c:	d902      	bls.n	80057a4 <_free_r+0x78>
 800579e:	230c      	movs	r3, #12
 80057a0:	6003      	str	r3, [r0, #0]
 80057a2:	e7d6      	b.n	8005752 <_free_r+0x26>
 80057a4:	6825      	ldr	r5, [r4, #0]
 80057a6:	1961      	adds	r1, r4, r5
 80057a8:	428b      	cmp	r3, r1
 80057aa:	bf04      	itt	eq
 80057ac:	6819      	ldreq	r1, [r3, #0]
 80057ae:	685b      	ldreq	r3, [r3, #4]
 80057b0:	6063      	str	r3, [r4, #4]
 80057b2:	bf04      	itt	eq
 80057b4:	1949      	addeq	r1, r1, r5
 80057b6:	6021      	streq	r1, [r4, #0]
 80057b8:	6054      	str	r4, [r2, #4]
 80057ba:	e7ca      	b.n	8005752 <_free_r+0x26>
 80057bc:	b003      	add	sp, #12
 80057be:	bd30      	pop	{r4, r5, pc}
 80057c0:	2000021c 	.word	0x2000021c

080057c4 <sbrk_aligned>:
 80057c4:	b570      	push	{r4, r5, r6, lr}
 80057c6:	4e0e      	ldr	r6, [pc, #56]	; (8005800 <sbrk_aligned+0x3c>)
 80057c8:	460c      	mov	r4, r1
 80057ca:	6831      	ldr	r1, [r6, #0]
 80057cc:	4605      	mov	r5, r0
 80057ce:	b911      	cbnz	r1, 80057d6 <sbrk_aligned+0x12>
 80057d0:	f000 f9f2 	bl	8005bb8 <_sbrk_r>
 80057d4:	6030      	str	r0, [r6, #0]
 80057d6:	4621      	mov	r1, r4
 80057d8:	4628      	mov	r0, r5
 80057da:	f000 f9ed 	bl	8005bb8 <_sbrk_r>
 80057de:	1c43      	adds	r3, r0, #1
 80057e0:	d00a      	beq.n	80057f8 <sbrk_aligned+0x34>
 80057e2:	1cc4      	adds	r4, r0, #3
 80057e4:	f024 0403 	bic.w	r4, r4, #3
 80057e8:	42a0      	cmp	r0, r4
 80057ea:	d007      	beq.n	80057fc <sbrk_aligned+0x38>
 80057ec:	1a21      	subs	r1, r4, r0
 80057ee:	4628      	mov	r0, r5
 80057f0:	f000 f9e2 	bl	8005bb8 <_sbrk_r>
 80057f4:	3001      	adds	r0, #1
 80057f6:	d101      	bne.n	80057fc <sbrk_aligned+0x38>
 80057f8:	f04f 34ff 	mov.w	r4, #4294967295
 80057fc:	4620      	mov	r0, r4
 80057fe:	bd70      	pop	{r4, r5, r6, pc}
 8005800:	20000220 	.word	0x20000220

08005804 <_malloc_r>:
 8005804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005808:	1ccd      	adds	r5, r1, #3
 800580a:	f025 0503 	bic.w	r5, r5, #3
 800580e:	3508      	adds	r5, #8
 8005810:	2d0c      	cmp	r5, #12
 8005812:	bf38      	it	cc
 8005814:	250c      	movcc	r5, #12
 8005816:	2d00      	cmp	r5, #0
 8005818:	4607      	mov	r7, r0
 800581a:	db01      	blt.n	8005820 <_malloc_r+0x1c>
 800581c:	42a9      	cmp	r1, r5
 800581e:	d905      	bls.n	800582c <_malloc_r+0x28>
 8005820:	230c      	movs	r3, #12
 8005822:	603b      	str	r3, [r7, #0]
 8005824:	2600      	movs	r6, #0
 8005826:	4630      	mov	r0, r6
 8005828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800582c:	4e2e      	ldr	r6, [pc, #184]	; (80058e8 <_malloc_r+0xe4>)
 800582e:	f000 fa3f 	bl	8005cb0 <__malloc_lock>
 8005832:	6833      	ldr	r3, [r6, #0]
 8005834:	461c      	mov	r4, r3
 8005836:	bb34      	cbnz	r4, 8005886 <_malloc_r+0x82>
 8005838:	4629      	mov	r1, r5
 800583a:	4638      	mov	r0, r7
 800583c:	f7ff ffc2 	bl	80057c4 <sbrk_aligned>
 8005840:	1c43      	adds	r3, r0, #1
 8005842:	4604      	mov	r4, r0
 8005844:	d14d      	bne.n	80058e2 <_malloc_r+0xde>
 8005846:	6834      	ldr	r4, [r6, #0]
 8005848:	4626      	mov	r6, r4
 800584a:	2e00      	cmp	r6, #0
 800584c:	d140      	bne.n	80058d0 <_malloc_r+0xcc>
 800584e:	6823      	ldr	r3, [r4, #0]
 8005850:	4631      	mov	r1, r6
 8005852:	4638      	mov	r0, r7
 8005854:	eb04 0803 	add.w	r8, r4, r3
 8005858:	f000 f9ae 	bl	8005bb8 <_sbrk_r>
 800585c:	4580      	cmp	r8, r0
 800585e:	d13a      	bne.n	80058d6 <_malloc_r+0xd2>
 8005860:	6821      	ldr	r1, [r4, #0]
 8005862:	3503      	adds	r5, #3
 8005864:	1a6d      	subs	r5, r5, r1
 8005866:	f025 0503 	bic.w	r5, r5, #3
 800586a:	3508      	adds	r5, #8
 800586c:	2d0c      	cmp	r5, #12
 800586e:	bf38      	it	cc
 8005870:	250c      	movcc	r5, #12
 8005872:	4629      	mov	r1, r5
 8005874:	4638      	mov	r0, r7
 8005876:	f7ff ffa5 	bl	80057c4 <sbrk_aligned>
 800587a:	3001      	adds	r0, #1
 800587c:	d02b      	beq.n	80058d6 <_malloc_r+0xd2>
 800587e:	6823      	ldr	r3, [r4, #0]
 8005880:	442b      	add	r3, r5
 8005882:	6023      	str	r3, [r4, #0]
 8005884:	e00e      	b.n	80058a4 <_malloc_r+0xa0>
 8005886:	6822      	ldr	r2, [r4, #0]
 8005888:	1b52      	subs	r2, r2, r5
 800588a:	d41e      	bmi.n	80058ca <_malloc_r+0xc6>
 800588c:	2a0b      	cmp	r2, #11
 800588e:	d916      	bls.n	80058be <_malloc_r+0xba>
 8005890:	1961      	adds	r1, r4, r5
 8005892:	42a3      	cmp	r3, r4
 8005894:	6025      	str	r5, [r4, #0]
 8005896:	bf18      	it	ne
 8005898:	6059      	strne	r1, [r3, #4]
 800589a:	6863      	ldr	r3, [r4, #4]
 800589c:	bf08      	it	eq
 800589e:	6031      	streq	r1, [r6, #0]
 80058a0:	5162      	str	r2, [r4, r5]
 80058a2:	604b      	str	r3, [r1, #4]
 80058a4:	4638      	mov	r0, r7
 80058a6:	f104 060b 	add.w	r6, r4, #11
 80058aa:	f000 fa07 	bl	8005cbc <__malloc_unlock>
 80058ae:	f026 0607 	bic.w	r6, r6, #7
 80058b2:	1d23      	adds	r3, r4, #4
 80058b4:	1af2      	subs	r2, r6, r3
 80058b6:	d0b6      	beq.n	8005826 <_malloc_r+0x22>
 80058b8:	1b9b      	subs	r3, r3, r6
 80058ba:	50a3      	str	r3, [r4, r2]
 80058bc:	e7b3      	b.n	8005826 <_malloc_r+0x22>
 80058be:	6862      	ldr	r2, [r4, #4]
 80058c0:	42a3      	cmp	r3, r4
 80058c2:	bf0c      	ite	eq
 80058c4:	6032      	streq	r2, [r6, #0]
 80058c6:	605a      	strne	r2, [r3, #4]
 80058c8:	e7ec      	b.n	80058a4 <_malloc_r+0xa0>
 80058ca:	4623      	mov	r3, r4
 80058cc:	6864      	ldr	r4, [r4, #4]
 80058ce:	e7b2      	b.n	8005836 <_malloc_r+0x32>
 80058d0:	4634      	mov	r4, r6
 80058d2:	6876      	ldr	r6, [r6, #4]
 80058d4:	e7b9      	b.n	800584a <_malloc_r+0x46>
 80058d6:	230c      	movs	r3, #12
 80058d8:	603b      	str	r3, [r7, #0]
 80058da:	4638      	mov	r0, r7
 80058dc:	f000 f9ee 	bl	8005cbc <__malloc_unlock>
 80058e0:	e7a1      	b.n	8005826 <_malloc_r+0x22>
 80058e2:	6025      	str	r5, [r4, #0]
 80058e4:	e7de      	b.n	80058a4 <_malloc_r+0xa0>
 80058e6:	bf00      	nop
 80058e8:	2000021c 	.word	0x2000021c

080058ec <__ssputs_r>:
 80058ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058f0:	688e      	ldr	r6, [r1, #8]
 80058f2:	429e      	cmp	r6, r3
 80058f4:	4682      	mov	sl, r0
 80058f6:	460c      	mov	r4, r1
 80058f8:	4690      	mov	r8, r2
 80058fa:	461f      	mov	r7, r3
 80058fc:	d838      	bhi.n	8005970 <__ssputs_r+0x84>
 80058fe:	898a      	ldrh	r2, [r1, #12]
 8005900:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005904:	d032      	beq.n	800596c <__ssputs_r+0x80>
 8005906:	6825      	ldr	r5, [r4, #0]
 8005908:	6909      	ldr	r1, [r1, #16]
 800590a:	eba5 0901 	sub.w	r9, r5, r1
 800590e:	6965      	ldr	r5, [r4, #20]
 8005910:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005914:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005918:	3301      	adds	r3, #1
 800591a:	444b      	add	r3, r9
 800591c:	106d      	asrs	r5, r5, #1
 800591e:	429d      	cmp	r5, r3
 8005920:	bf38      	it	cc
 8005922:	461d      	movcc	r5, r3
 8005924:	0553      	lsls	r3, r2, #21
 8005926:	d531      	bpl.n	800598c <__ssputs_r+0xa0>
 8005928:	4629      	mov	r1, r5
 800592a:	f7ff ff6b 	bl	8005804 <_malloc_r>
 800592e:	4606      	mov	r6, r0
 8005930:	b950      	cbnz	r0, 8005948 <__ssputs_r+0x5c>
 8005932:	230c      	movs	r3, #12
 8005934:	f8ca 3000 	str.w	r3, [sl]
 8005938:	89a3      	ldrh	r3, [r4, #12]
 800593a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800593e:	81a3      	strh	r3, [r4, #12]
 8005940:	f04f 30ff 	mov.w	r0, #4294967295
 8005944:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005948:	6921      	ldr	r1, [r4, #16]
 800594a:	464a      	mov	r2, r9
 800594c:	f7ff fa08 	bl	8004d60 <memcpy>
 8005950:	89a3      	ldrh	r3, [r4, #12]
 8005952:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005956:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800595a:	81a3      	strh	r3, [r4, #12]
 800595c:	6126      	str	r6, [r4, #16]
 800595e:	6165      	str	r5, [r4, #20]
 8005960:	444e      	add	r6, r9
 8005962:	eba5 0509 	sub.w	r5, r5, r9
 8005966:	6026      	str	r6, [r4, #0]
 8005968:	60a5      	str	r5, [r4, #8]
 800596a:	463e      	mov	r6, r7
 800596c:	42be      	cmp	r6, r7
 800596e:	d900      	bls.n	8005972 <__ssputs_r+0x86>
 8005970:	463e      	mov	r6, r7
 8005972:	6820      	ldr	r0, [r4, #0]
 8005974:	4632      	mov	r2, r6
 8005976:	4641      	mov	r1, r8
 8005978:	f000 f980 	bl	8005c7c <memmove>
 800597c:	68a3      	ldr	r3, [r4, #8]
 800597e:	1b9b      	subs	r3, r3, r6
 8005980:	60a3      	str	r3, [r4, #8]
 8005982:	6823      	ldr	r3, [r4, #0]
 8005984:	4433      	add	r3, r6
 8005986:	6023      	str	r3, [r4, #0]
 8005988:	2000      	movs	r0, #0
 800598a:	e7db      	b.n	8005944 <__ssputs_r+0x58>
 800598c:	462a      	mov	r2, r5
 800598e:	f000 f99b 	bl	8005cc8 <_realloc_r>
 8005992:	4606      	mov	r6, r0
 8005994:	2800      	cmp	r0, #0
 8005996:	d1e1      	bne.n	800595c <__ssputs_r+0x70>
 8005998:	6921      	ldr	r1, [r4, #16]
 800599a:	4650      	mov	r0, sl
 800599c:	f7ff fec6 	bl	800572c <_free_r>
 80059a0:	e7c7      	b.n	8005932 <__ssputs_r+0x46>
	...

080059a4 <_svfiprintf_r>:
 80059a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059a8:	4698      	mov	r8, r3
 80059aa:	898b      	ldrh	r3, [r1, #12]
 80059ac:	061b      	lsls	r3, r3, #24
 80059ae:	b09d      	sub	sp, #116	; 0x74
 80059b0:	4607      	mov	r7, r0
 80059b2:	460d      	mov	r5, r1
 80059b4:	4614      	mov	r4, r2
 80059b6:	d50e      	bpl.n	80059d6 <_svfiprintf_r+0x32>
 80059b8:	690b      	ldr	r3, [r1, #16]
 80059ba:	b963      	cbnz	r3, 80059d6 <_svfiprintf_r+0x32>
 80059bc:	2140      	movs	r1, #64	; 0x40
 80059be:	f7ff ff21 	bl	8005804 <_malloc_r>
 80059c2:	6028      	str	r0, [r5, #0]
 80059c4:	6128      	str	r0, [r5, #16]
 80059c6:	b920      	cbnz	r0, 80059d2 <_svfiprintf_r+0x2e>
 80059c8:	230c      	movs	r3, #12
 80059ca:	603b      	str	r3, [r7, #0]
 80059cc:	f04f 30ff 	mov.w	r0, #4294967295
 80059d0:	e0d1      	b.n	8005b76 <_svfiprintf_r+0x1d2>
 80059d2:	2340      	movs	r3, #64	; 0x40
 80059d4:	616b      	str	r3, [r5, #20]
 80059d6:	2300      	movs	r3, #0
 80059d8:	9309      	str	r3, [sp, #36]	; 0x24
 80059da:	2320      	movs	r3, #32
 80059dc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80059e0:	f8cd 800c 	str.w	r8, [sp, #12]
 80059e4:	2330      	movs	r3, #48	; 0x30
 80059e6:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8005b90 <_svfiprintf_r+0x1ec>
 80059ea:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80059ee:	f04f 0901 	mov.w	r9, #1
 80059f2:	4623      	mov	r3, r4
 80059f4:	469a      	mov	sl, r3
 80059f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80059fa:	b10a      	cbz	r2, 8005a00 <_svfiprintf_r+0x5c>
 80059fc:	2a25      	cmp	r2, #37	; 0x25
 80059fe:	d1f9      	bne.n	80059f4 <_svfiprintf_r+0x50>
 8005a00:	ebba 0b04 	subs.w	fp, sl, r4
 8005a04:	d00b      	beq.n	8005a1e <_svfiprintf_r+0x7a>
 8005a06:	465b      	mov	r3, fp
 8005a08:	4622      	mov	r2, r4
 8005a0a:	4629      	mov	r1, r5
 8005a0c:	4638      	mov	r0, r7
 8005a0e:	f7ff ff6d 	bl	80058ec <__ssputs_r>
 8005a12:	3001      	adds	r0, #1
 8005a14:	f000 80aa 	beq.w	8005b6c <_svfiprintf_r+0x1c8>
 8005a18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005a1a:	445a      	add	r2, fp
 8005a1c:	9209      	str	r2, [sp, #36]	; 0x24
 8005a1e:	f89a 3000 	ldrb.w	r3, [sl]
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	f000 80a2 	beq.w	8005b6c <_svfiprintf_r+0x1c8>
 8005a28:	2300      	movs	r3, #0
 8005a2a:	f04f 32ff 	mov.w	r2, #4294967295
 8005a2e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005a32:	f10a 0a01 	add.w	sl, sl, #1
 8005a36:	9304      	str	r3, [sp, #16]
 8005a38:	9307      	str	r3, [sp, #28]
 8005a3a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005a3e:	931a      	str	r3, [sp, #104]	; 0x68
 8005a40:	4654      	mov	r4, sl
 8005a42:	2205      	movs	r2, #5
 8005a44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a48:	4851      	ldr	r0, [pc, #324]	; (8005b90 <_svfiprintf_r+0x1ec>)
 8005a4a:	f7fa fbd1 	bl	80001f0 <memchr>
 8005a4e:	9a04      	ldr	r2, [sp, #16]
 8005a50:	b9d8      	cbnz	r0, 8005a8a <_svfiprintf_r+0xe6>
 8005a52:	06d0      	lsls	r0, r2, #27
 8005a54:	bf44      	itt	mi
 8005a56:	2320      	movmi	r3, #32
 8005a58:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a5c:	0711      	lsls	r1, r2, #28
 8005a5e:	bf44      	itt	mi
 8005a60:	232b      	movmi	r3, #43	; 0x2b
 8005a62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a66:	f89a 3000 	ldrb.w	r3, [sl]
 8005a6a:	2b2a      	cmp	r3, #42	; 0x2a
 8005a6c:	d015      	beq.n	8005a9a <_svfiprintf_r+0xf6>
 8005a6e:	9a07      	ldr	r2, [sp, #28]
 8005a70:	4654      	mov	r4, sl
 8005a72:	2000      	movs	r0, #0
 8005a74:	f04f 0c0a 	mov.w	ip, #10
 8005a78:	4621      	mov	r1, r4
 8005a7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005a7e:	3b30      	subs	r3, #48	; 0x30
 8005a80:	2b09      	cmp	r3, #9
 8005a82:	d94e      	bls.n	8005b22 <_svfiprintf_r+0x17e>
 8005a84:	b1b0      	cbz	r0, 8005ab4 <_svfiprintf_r+0x110>
 8005a86:	9207      	str	r2, [sp, #28]
 8005a88:	e014      	b.n	8005ab4 <_svfiprintf_r+0x110>
 8005a8a:	eba0 0308 	sub.w	r3, r0, r8
 8005a8e:	fa09 f303 	lsl.w	r3, r9, r3
 8005a92:	4313      	orrs	r3, r2
 8005a94:	9304      	str	r3, [sp, #16]
 8005a96:	46a2      	mov	sl, r4
 8005a98:	e7d2      	b.n	8005a40 <_svfiprintf_r+0x9c>
 8005a9a:	9b03      	ldr	r3, [sp, #12]
 8005a9c:	1d19      	adds	r1, r3, #4
 8005a9e:	681b      	ldr	r3, [r3, #0]
 8005aa0:	9103      	str	r1, [sp, #12]
 8005aa2:	2b00      	cmp	r3, #0
 8005aa4:	bfbb      	ittet	lt
 8005aa6:	425b      	neglt	r3, r3
 8005aa8:	f042 0202 	orrlt.w	r2, r2, #2
 8005aac:	9307      	strge	r3, [sp, #28]
 8005aae:	9307      	strlt	r3, [sp, #28]
 8005ab0:	bfb8      	it	lt
 8005ab2:	9204      	strlt	r2, [sp, #16]
 8005ab4:	7823      	ldrb	r3, [r4, #0]
 8005ab6:	2b2e      	cmp	r3, #46	; 0x2e
 8005ab8:	d10c      	bne.n	8005ad4 <_svfiprintf_r+0x130>
 8005aba:	7863      	ldrb	r3, [r4, #1]
 8005abc:	2b2a      	cmp	r3, #42	; 0x2a
 8005abe:	d135      	bne.n	8005b2c <_svfiprintf_r+0x188>
 8005ac0:	9b03      	ldr	r3, [sp, #12]
 8005ac2:	1d1a      	adds	r2, r3, #4
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	9203      	str	r2, [sp, #12]
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	bfb8      	it	lt
 8005acc:	f04f 33ff 	movlt.w	r3, #4294967295
 8005ad0:	3402      	adds	r4, #2
 8005ad2:	9305      	str	r3, [sp, #20]
 8005ad4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8005ba0 <_svfiprintf_r+0x1fc>
 8005ad8:	7821      	ldrb	r1, [r4, #0]
 8005ada:	2203      	movs	r2, #3
 8005adc:	4650      	mov	r0, sl
 8005ade:	f7fa fb87 	bl	80001f0 <memchr>
 8005ae2:	b140      	cbz	r0, 8005af6 <_svfiprintf_r+0x152>
 8005ae4:	2340      	movs	r3, #64	; 0x40
 8005ae6:	eba0 000a 	sub.w	r0, r0, sl
 8005aea:	fa03 f000 	lsl.w	r0, r3, r0
 8005aee:	9b04      	ldr	r3, [sp, #16]
 8005af0:	4303      	orrs	r3, r0
 8005af2:	3401      	adds	r4, #1
 8005af4:	9304      	str	r3, [sp, #16]
 8005af6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005afa:	4826      	ldr	r0, [pc, #152]	; (8005b94 <_svfiprintf_r+0x1f0>)
 8005afc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005b00:	2206      	movs	r2, #6
 8005b02:	f7fa fb75 	bl	80001f0 <memchr>
 8005b06:	2800      	cmp	r0, #0
 8005b08:	d038      	beq.n	8005b7c <_svfiprintf_r+0x1d8>
 8005b0a:	4b23      	ldr	r3, [pc, #140]	; (8005b98 <_svfiprintf_r+0x1f4>)
 8005b0c:	bb1b      	cbnz	r3, 8005b56 <_svfiprintf_r+0x1b2>
 8005b0e:	9b03      	ldr	r3, [sp, #12]
 8005b10:	3307      	adds	r3, #7
 8005b12:	f023 0307 	bic.w	r3, r3, #7
 8005b16:	3308      	adds	r3, #8
 8005b18:	9303      	str	r3, [sp, #12]
 8005b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b1c:	4433      	add	r3, r6
 8005b1e:	9309      	str	r3, [sp, #36]	; 0x24
 8005b20:	e767      	b.n	80059f2 <_svfiprintf_r+0x4e>
 8005b22:	fb0c 3202 	mla	r2, ip, r2, r3
 8005b26:	460c      	mov	r4, r1
 8005b28:	2001      	movs	r0, #1
 8005b2a:	e7a5      	b.n	8005a78 <_svfiprintf_r+0xd4>
 8005b2c:	2300      	movs	r3, #0
 8005b2e:	3401      	adds	r4, #1
 8005b30:	9305      	str	r3, [sp, #20]
 8005b32:	4619      	mov	r1, r3
 8005b34:	f04f 0c0a 	mov.w	ip, #10
 8005b38:	4620      	mov	r0, r4
 8005b3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005b3e:	3a30      	subs	r2, #48	; 0x30
 8005b40:	2a09      	cmp	r2, #9
 8005b42:	d903      	bls.n	8005b4c <_svfiprintf_r+0x1a8>
 8005b44:	2b00      	cmp	r3, #0
 8005b46:	d0c5      	beq.n	8005ad4 <_svfiprintf_r+0x130>
 8005b48:	9105      	str	r1, [sp, #20]
 8005b4a:	e7c3      	b.n	8005ad4 <_svfiprintf_r+0x130>
 8005b4c:	fb0c 2101 	mla	r1, ip, r1, r2
 8005b50:	4604      	mov	r4, r0
 8005b52:	2301      	movs	r3, #1
 8005b54:	e7f0      	b.n	8005b38 <_svfiprintf_r+0x194>
 8005b56:	ab03      	add	r3, sp, #12
 8005b58:	9300      	str	r3, [sp, #0]
 8005b5a:	462a      	mov	r2, r5
 8005b5c:	4b0f      	ldr	r3, [pc, #60]	; (8005b9c <_svfiprintf_r+0x1f8>)
 8005b5e:	a904      	add	r1, sp, #16
 8005b60:	4638      	mov	r0, r7
 8005b62:	f7fc fa27 	bl	8001fb4 <_printf_float>
 8005b66:	1c42      	adds	r2, r0, #1
 8005b68:	4606      	mov	r6, r0
 8005b6a:	d1d6      	bne.n	8005b1a <_svfiprintf_r+0x176>
 8005b6c:	89ab      	ldrh	r3, [r5, #12]
 8005b6e:	065b      	lsls	r3, r3, #25
 8005b70:	f53f af2c 	bmi.w	80059cc <_svfiprintf_r+0x28>
 8005b74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005b76:	b01d      	add	sp, #116	; 0x74
 8005b78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b7c:	ab03      	add	r3, sp, #12
 8005b7e:	9300      	str	r3, [sp, #0]
 8005b80:	462a      	mov	r2, r5
 8005b82:	4b06      	ldr	r3, [pc, #24]	; (8005b9c <_svfiprintf_r+0x1f8>)
 8005b84:	a904      	add	r1, sp, #16
 8005b86:	4638      	mov	r0, r7
 8005b88:	f7fc fcb8 	bl	80024fc <_printf_i>
 8005b8c:	e7eb      	b.n	8005b66 <_svfiprintf_r+0x1c2>
 8005b8e:	bf00      	nop
 8005b90:	08006c0c 	.word	0x08006c0c
 8005b94:	08006c16 	.word	0x08006c16
 8005b98:	08001fb5 	.word	0x08001fb5
 8005b9c:	080058ed 	.word	0x080058ed
 8005ba0:	08006c12 	.word	0x08006c12
 8005ba4:	00000000 	.word	0x00000000

08005ba8 <nan>:
 8005ba8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8005bb0 <nan+0x8>
 8005bac:	4770      	bx	lr
 8005bae:	bf00      	nop
 8005bb0:	00000000 	.word	0x00000000
 8005bb4:	7ff80000 	.word	0x7ff80000

08005bb8 <_sbrk_r>:
 8005bb8:	b538      	push	{r3, r4, r5, lr}
 8005bba:	4d06      	ldr	r5, [pc, #24]	; (8005bd4 <_sbrk_r+0x1c>)
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	4604      	mov	r4, r0
 8005bc0:	4608      	mov	r0, r1
 8005bc2:	602b      	str	r3, [r5, #0]
 8005bc4:	f7fc f832 	bl	8001c2c <_sbrk>
 8005bc8:	1c43      	adds	r3, r0, #1
 8005bca:	d102      	bne.n	8005bd2 <_sbrk_r+0x1a>
 8005bcc:	682b      	ldr	r3, [r5, #0]
 8005bce:	b103      	cbz	r3, 8005bd2 <_sbrk_r+0x1a>
 8005bd0:	6023      	str	r3, [r4, #0]
 8005bd2:	bd38      	pop	{r3, r4, r5, pc}
 8005bd4:	20000224 	.word	0x20000224

08005bd8 <strncmp>:
 8005bd8:	b510      	push	{r4, lr}
 8005bda:	b17a      	cbz	r2, 8005bfc <strncmp+0x24>
 8005bdc:	4603      	mov	r3, r0
 8005bde:	3901      	subs	r1, #1
 8005be0:	1884      	adds	r4, r0, r2
 8005be2:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005be6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005bea:	4290      	cmp	r0, r2
 8005bec:	d101      	bne.n	8005bf2 <strncmp+0x1a>
 8005bee:	42a3      	cmp	r3, r4
 8005bf0:	d101      	bne.n	8005bf6 <strncmp+0x1e>
 8005bf2:	1a80      	subs	r0, r0, r2
 8005bf4:	bd10      	pop	{r4, pc}
 8005bf6:	2800      	cmp	r0, #0
 8005bf8:	d1f3      	bne.n	8005be2 <strncmp+0xa>
 8005bfa:	e7fa      	b.n	8005bf2 <strncmp+0x1a>
 8005bfc:	4610      	mov	r0, r2
 8005bfe:	e7f9      	b.n	8005bf4 <strncmp+0x1c>

08005c00 <__ascii_wctomb>:
 8005c00:	b149      	cbz	r1, 8005c16 <__ascii_wctomb+0x16>
 8005c02:	2aff      	cmp	r2, #255	; 0xff
 8005c04:	bf85      	ittet	hi
 8005c06:	238a      	movhi	r3, #138	; 0x8a
 8005c08:	6003      	strhi	r3, [r0, #0]
 8005c0a:	700a      	strbls	r2, [r1, #0]
 8005c0c:	f04f 30ff 	movhi.w	r0, #4294967295
 8005c10:	bf98      	it	ls
 8005c12:	2001      	movls	r0, #1
 8005c14:	4770      	bx	lr
 8005c16:	4608      	mov	r0, r1
 8005c18:	4770      	bx	lr
	...

08005c1c <__assert_func>:
 8005c1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005c1e:	4614      	mov	r4, r2
 8005c20:	461a      	mov	r2, r3
 8005c22:	4b09      	ldr	r3, [pc, #36]	; (8005c48 <__assert_func+0x2c>)
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	4605      	mov	r5, r0
 8005c28:	68d8      	ldr	r0, [r3, #12]
 8005c2a:	b14c      	cbz	r4, 8005c40 <__assert_func+0x24>
 8005c2c:	4b07      	ldr	r3, [pc, #28]	; (8005c4c <__assert_func+0x30>)
 8005c2e:	9100      	str	r1, [sp, #0]
 8005c30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005c34:	4906      	ldr	r1, [pc, #24]	; (8005c50 <__assert_func+0x34>)
 8005c36:	462b      	mov	r3, r5
 8005c38:	f000 f80e 	bl	8005c58 <fiprintf>
 8005c3c:	f000 fa8c 	bl	8006158 <abort>
 8005c40:	4b04      	ldr	r3, [pc, #16]	; (8005c54 <__assert_func+0x38>)
 8005c42:	461c      	mov	r4, r3
 8005c44:	e7f3      	b.n	8005c2e <__assert_func+0x12>
 8005c46:	bf00      	nop
 8005c48:	20000004 	.word	0x20000004
 8005c4c:	08006c1d 	.word	0x08006c1d
 8005c50:	08006c2a 	.word	0x08006c2a
 8005c54:	08006c58 	.word	0x08006c58

08005c58 <fiprintf>:
 8005c58:	b40e      	push	{r1, r2, r3}
 8005c5a:	b503      	push	{r0, r1, lr}
 8005c5c:	4601      	mov	r1, r0
 8005c5e:	ab03      	add	r3, sp, #12
 8005c60:	4805      	ldr	r0, [pc, #20]	; (8005c78 <fiprintf+0x20>)
 8005c62:	f853 2b04 	ldr.w	r2, [r3], #4
 8005c66:	6800      	ldr	r0, [r0, #0]
 8005c68:	9301      	str	r3, [sp, #4]
 8005c6a:	f000 f885 	bl	8005d78 <_vfiprintf_r>
 8005c6e:	b002      	add	sp, #8
 8005c70:	f85d eb04 	ldr.w	lr, [sp], #4
 8005c74:	b003      	add	sp, #12
 8005c76:	4770      	bx	lr
 8005c78:	20000004 	.word	0x20000004

08005c7c <memmove>:
 8005c7c:	4288      	cmp	r0, r1
 8005c7e:	b510      	push	{r4, lr}
 8005c80:	eb01 0402 	add.w	r4, r1, r2
 8005c84:	d902      	bls.n	8005c8c <memmove+0x10>
 8005c86:	4284      	cmp	r4, r0
 8005c88:	4623      	mov	r3, r4
 8005c8a:	d807      	bhi.n	8005c9c <memmove+0x20>
 8005c8c:	1e43      	subs	r3, r0, #1
 8005c8e:	42a1      	cmp	r1, r4
 8005c90:	d008      	beq.n	8005ca4 <memmove+0x28>
 8005c92:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005c96:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005c9a:	e7f8      	b.n	8005c8e <memmove+0x12>
 8005c9c:	4402      	add	r2, r0
 8005c9e:	4601      	mov	r1, r0
 8005ca0:	428a      	cmp	r2, r1
 8005ca2:	d100      	bne.n	8005ca6 <memmove+0x2a>
 8005ca4:	bd10      	pop	{r4, pc}
 8005ca6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005caa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005cae:	e7f7      	b.n	8005ca0 <memmove+0x24>

08005cb0 <__malloc_lock>:
 8005cb0:	4801      	ldr	r0, [pc, #4]	; (8005cb8 <__malloc_lock+0x8>)
 8005cb2:	f000 bc11 	b.w	80064d8 <__retarget_lock_acquire_recursive>
 8005cb6:	bf00      	nop
 8005cb8:	20000228 	.word	0x20000228

08005cbc <__malloc_unlock>:
 8005cbc:	4801      	ldr	r0, [pc, #4]	; (8005cc4 <__malloc_unlock+0x8>)
 8005cbe:	f000 bc0c 	b.w	80064da <__retarget_lock_release_recursive>
 8005cc2:	bf00      	nop
 8005cc4:	20000228 	.word	0x20000228

08005cc8 <_realloc_r>:
 8005cc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ccc:	4680      	mov	r8, r0
 8005cce:	4614      	mov	r4, r2
 8005cd0:	460e      	mov	r6, r1
 8005cd2:	b921      	cbnz	r1, 8005cde <_realloc_r+0x16>
 8005cd4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005cd8:	4611      	mov	r1, r2
 8005cda:	f7ff bd93 	b.w	8005804 <_malloc_r>
 8005cde:	b92a      	cbnz	r2, 8005cec <_realloc_r+0x24>
 8005ce0:	f7ff fd24 	bl	800572c <_free_r>
 8005ce4:	4625      	mov	r5, r4
 8005ce6:	4628      	mov	r0, r5
 8005ce8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005cec:	f000 fc5c 	bl	80065a8 <_malloc_usable_size_r>
 8005cf0:	4284      	cmp	r4, r0
 8005cf2:	4607      	mov	r7, r0
 8005cf4:	d802      	bhi.n	8005cfc <_realloc_r+0x34>
 8005cf6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005cfa:	d812      	bhi.n	8005d22 <_realloc_r+0x5a>
 8005cfc:	4621      	mov	r1, r4
 8005cfe:	4640      	mov	r0, r8
 8005d00:	f7ff fd80 	bl	8005804 <_malloc_r>
 8005d04:	4605      	mov	r5, r0
 8005d06:	2800      	cmp	r0, #0
 8005d08:	d0ed      	beq.n	8005ce6 <_realloc_r+0x1e>
 8005d0a:	42bc      	cmp	r4, r7
 8005d0c:	4622      	mov	r2, r4
 8005d0e:	4631      	mov	r1, r6
 8005d10:	bf28      	it	cs
 8005d12:	463a      	movcs	r2, r7
 8005d14:	f7ff f824 	bl	8004d60 <memcpy>
 8005d18:	4631      	mov	r1, r6
 8005d1a:	4640      	mov	r0, r8
 8005d1c:	f7ff fd06 	bl	800572c <_free_r>
 8005d20:	e7e1      	b.n	8005ce6 <_realloc_r+0x1e>
 8005d22:	4635      	mov	r5, r6
 8005d24:	e7df      	b.n	8005ce6 <_realloc_r+0x1e>

08005d26 <__sfputc_r>:
 8005d26:	6893      	ldr	r3, [r2, #8]
 8005d28:	3b01      	subs	r3, #1
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	b410      	push	{r4}
 8005d2e:	6093      	str	r3, [r2, #8]
 8005d30:	da08      	bge.n	8005d44 <__sfputc_r+0x1e>
 8005d32:	6994      	ldr	r4, [r2, #24]
 8005d34:	42a3      	cmp	r3, r4
 8005d36:	db01      	blt.n	8005d3c <__sfputc_r+0x16>
 8005d38:	290a      	cmp	r1, #10
 8005d3a:	d103      	bne.n	8005d44 <__sfputc_r+0x1e>
 8005d3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d40:	f000 b94a 	b.w	8005fd8 <__swbuf_r>
 8005d44:	6813      	ldr	r3, [r2, #0]
 8005d46:	1c58      	adds	r0, r3, #1
 8005d48:	6010      	str	r0, [r2, #0]
 8005d4a:	7019      	strb	r1, [r3, #0]
 8005d4c:	4608      	mov	r0, r1
 8005d4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005d52:	4770      	bx	lr

08005d54 <__sfputs_r>:
 8005d54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d56:	4606      	mov	r6, r0
 8005d58:	460f      	mov	r7, r1
 8005d5a:	4614      	mov	r4, r2
 8005d5c:	18d5      	adds	r5, r2, r3
 8005d5e:	42ac      	cmp	r4, r5
 8005d60:	d101      	bne.n	8005d66 <__sfputs_r+0x12>
 8005d62:	2000      	movs	r0, #0
 8005d64:	e007      	b.n	8005d76 <__sfputs_r+0x22>
 8005d66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005d6a:	463a      	mov	r2, r7
 8005d6c:	4630      	mov	r0, r6
 8005d6e:	f7ff ffda 	bl	8005d26 <__sfputc_r>
 8005d72:	1c43      	adds	r3, r0, #1
 8005d74:	d1f3      	bne.n	8005d5e <__sfputs_r+0xa>
 8005d76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005d78 <_vfiprintf_r>:
 8005d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d7c:	460d      	mov	r5, r1
 8005d7e:	b09d      	sub	sp, #116	; 0x74
 8005d80:	4614      	mov	r4, r2
 8005d82:	4698      	mov	r8, r3
 8005d84:	4606      	mov	r6, r0
 8005d86:	b118      	cbz	r0, 8005d90 <_vfiprintf_r+0x18>
 8005d88:	6983      	ldr	r3, [r0, #24]
 8005d8a:	b90b      	cbnz	r3, 8005d90 <_vfiprintf_r+0x18>
 8005d8c:	f000 fb06 	bl	800639c <__sinit>
 8005d90:	4b89      	ldr	r3, [pc, #548]	; (8005fb8 <_vfiprintf_r+0x240>)
 8005d92:	429d      	cmp	r5, r3
 8005d94:	d11b      	bne.n	8005dce <_vfiprintf_r+0x56>
 8005d96:	6875      	ldr	r5, [r6, #4]
 8005d98:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005d9a:	07d9      	lsls	r1, r3, #31
 8005d9c:	d405      	bmi.n	8005daa <_vfiprintf_r+0x32>
 8005d9e:	89ab      	ldrh	r3, [r5, #12]
 8005da0:	059a      	lsls	r2, r3, #22
 8005da2:	d402      	bmi.n	8005daa <_vfiprintf_r+0x32>
 8005da4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005da6:	f000 fb97 	bl	80064d8 <__retarget_lock_acquire_recursive>
 8005daa:	89ab      	ldrh	r3, [r5, #12]
 8005dac:	071b      	lsls	r3, r3, #28
 8005dae:	d501      	bpl.n	8005db4 <_vfiprintf_r+0x3c>
 8005db0:	692b      	ldr	r3, [r5, #16]
 8005db2:	b9eb      	cbnz	r3, 8005df0 <_vfiprintf_r+0x78>
 8005db4:	4629      	mov	r1, r5
 8005db6:	4630      	mov	r0, r6
 8005db8:	f000 f960 	bl	800607c <__swsetup_r>
 8005dbc:	b1c0      	cbz	r0, 8005df0 <_vfiprintf_r+0x78>
 8005dbe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005dc0:	07dc      	lsls	r4, r3, #31
 8005dc2:	d50e      	bpl.n	8005de2 <_vfiprintf_r+0x6a>
 8005dc4:	f04f 30ff 	mov.w	r0, #4294967295
 8005dc8:	b01d      	add	sp, #116	; 0x74
 8005dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dce:	4b7b      	ldr	r3, [pc, #492]	; (8005fbc <_vfiprintf_r+0x244>)
 8005dd0:	429d      	cmp	r5, r3
 8005dd2:	d101      	bne.n	8005dd8 <_vfiprintf_r+0x60>
 8005dd4:	68b5      	ldr	r5, [r6, #8]
 8005dd6:	e7df      	b.n	8005d98 <_vfiprintf_r+0x20>
 8005dd8:	4b79      	ldr	r3, [pc, #484]	; (8005fc0 <_vfiprintf_r+0x248>)
 8005dda:	429d      	cmp	r5, r3
 8005ddc:	bf08      	it	eq
 8005dde:	68f5      	ldreq	r5, [r6, #12]
 8005de0:	e7da      	b.n	8005d98 <_vfiprintf_r+0x20>
 8005de2:	89ab      	ldrh	r3, [r5, #12]
 8005de4:	0598      	lsls	r0, r3, #22
 8005de6:	d4ed      	bmi.n	8005dc4 <_vfiprintf_r+0x4c>
 8005de8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005dea:	f000 fb76 	bl	80064da <__retarget_lock_release_recursive>
 8005dee:	e7e9      	b.n	8005dc4 <_vfiprintf_r+0x4c>
 8005df0:	2300      	movs	r3, #0
 8005df2:	9309      	str	r3, [sp, #36]	; 0x24
 8005df4:	2320      	movs	r3, #32
 8005df6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005dfa:	f8cd 800c 	str.w	r8, [sp, #12]
 8005dfe:	2330      	movs	r3, #48	; 0x30
 8005e00:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005fc4 <_vfiprintf_r+0x24c>
 8005e04:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005e08:	f04f 0901 	mov.w	r9, #1
 8005e0c:	4623      	mov	r3, r4
 8005e0e:	469a      	mov	sl, r3
 8005e10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005e14:	b10a      	cbz	r2, 8005e1a <_vfiprintf_r+0xa2>
 8005e16:	2a25      	cmp	r2, #37	; 0x25
 8005e18:	d1f9      	bne.n	8005e0e <_vfiprintf_r+0x96>
 8005e1a:	ebba 0b04 	subs.w	fp, sl, r4
 8005e1e:	d00b      	beq.n	8005e38 <_vfiprintf_r+0xc0>
 8005e20:	465b      	mov	r3, fp
 8005e22:	4622      	mov	r2, r4
 8005e24:	4629      	mov	r1, r5
 8005e26:	4630      	mov	r0, r6
 8005e28:	f7ff ff94 	bl	8005d54 <__sfputs_r>
 8005e2c:	3001      	adds	r0, #1
 8005e2e:	f000 80aa 	beq.w	8005f86 <_vfiprintf_r+0x20e>
 8005e32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005e34:	445a      	add	r2, fp
 8005e36:	9209      	str	r2, [sp, #36]	; 0x24
 8005e38:	f89a 3000 	ldrb.w	r3, [sl]
 8005e3c:	2b00      	cmp	r3, #0
 8005e3e:	f000 80a2 	beq.w	8005f86 <_vfiprintf_r+0x20e>
 8005e42:	2300      	movs	r3, #0
 8005e44:	f04f 32ff 	mov.w	r2, #4294967295
 8005e48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005e4c:	f10a 0a01 	add.w	sl, sl, #1
 8005e50:	9304      	str	r3, [sp, #16]
 8005e52:	9307      	str	r3, [sp, #28]
 8005e54:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005e58:	931a      	str	r3, [sp, #104]	; 0x68
 8005e5a:	4654      	mov	r4, sl
 8005e5c:	2205      	movs	r2, #5
 8005e5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e62:	4858      	ldr	r0, [pc, #352]	; (8005fc4 <_vfiprintf_r+0x24c>)
 8005e64:	f7fa f9c4 	bl	80001f0 <memchr>
 8005e68:	9a04      	ldr	r2, [sp, #16]
 8005e6a:	b9d8      	cbnz	r0, 8005ea4 <_vfiprintf_r+0x12c>
 8005e6c:	06d1      	lsls	r1, r2, #27
 8005e6e:	bf44      	itt	mi
 8005e70:	2320      	movmi	r3, #32
 8005e72:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005e76:	0713      	lsls	r3, r2, #28
 8005e78:	bf44      	itt	mi
 8005e7a:	232b      	movmi	r3, #43	; 0x2b
 8005e7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005e80:	f89a 3000 	ldrb.w	r3, [sl]
 8005e84:	2b2a      	cmp	r3, #42	; 0x2a
 8005e86:	d015      	beq.n	8005eb4 <_vfiprintf_r+0x13c>
 8005e88:	9a07      	ldr	r2, [sp, #28]
 8005e8a:	4654      	mov	r4, sl
 8005e8c:	2000      	movs	r0, #0
 8005e8e:	f04f 0c0a 	mov.w	ip, #10
 8005e92:	4621      	mov	r1, r4
 8005e94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005e98:	3b30      	subs	r3, #48	; 0x30
 8005e9a:	2b09      	cmp	r3, #9
 8005e9c:	d94e      	bls.n	8005f3c <_vfiprintf_r+0x1c4>
 8005e9e:	b1b0      	cbz	r0, 8005ece <_vfiprintf_r+0x156>
 8005ea0:	9207      	str	r2, [sp, #28]
 8005ea2:	e014      	b.n	8005ece <_vfiprintf_r+0x156>
 8005ea4:	eba0 0308 	sub.w	r3, r0, r8
 8005ea8:	fa09 f303 	lsl.w	r3, r9, r3
 8005eac:	4313      	orrs	r3, r2
 8005eae:	9304      	str	r3, [sp, #16]
 8005eb0:	46a2      	mov	sl, r4
 8005eb2:	e7d2      	b.n	8005e5a <_vfiprintf_r+0xe2>
 8005eb4:	9b03      	ldr	r3, [sp, #12]
 8005eb6:	1d19      	adds	r1, r3, #4
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	9103      	str	r1, [sp, #12]
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	bfbb      	ittet	lt
 8005ec0:	425b      	neglt	r3, r3
 8005ec2:	f042 0202 	orrlt.w	r2, r2, #2
 8005ec6:	9307      	strge	r3, [sp, #28]
 8005ec8:	9307      	strlt	r3, [sp, #28]
 8005eca:	bfb8      	it	lt
 8005ecc:	9204      	strlt	r2, [sp, #16]
 8005ece:	7823      	ldrb	r3, [r4, #0]
 8005ed0:	2b2e      	cmp	r3, #46	; 0x2e
 8005ed2:	d10c      	bne.n	8005eee <_vfiprintf_r+0x176>
 8005ed4:	7863      	ldrb	r3, [r4, #1]
 8005ed6:	2b2a      	cmp	r3, #42	; 0x2a
 8005ed8:	d135      	bne.n	8005f46 <_vfiprintf_r+0x1ce>
 8005eda:	9b03      	ldr	r3, [sp, #12]
 8005edc:	1d1a      	adds	r2, r3, #4
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	9203      	str	r2, [sp, #12]
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	bfb8      	it	lt
 8005ee6:	f04f 33ff 	movlt.w	r3, #4294967295
 8005eea:	3402      	adds	r4, #2
 8005eec:	9305      	str	r3, [sp, #20]
 8005eee:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8005fd4 <_vfiprintf_r+0x25c>
 8005ef2:	7821      	ldrb	r1, [r4, #0]
 8005ef4:	2203      	movs	r2, #3
 8005ef6:	4650      	mov	r0, sl
 8005ef8:	f7fa f97a 	bl	80001f0 <memchr>
 8005efc:	b140      	cbz	r0, 8005f10 <_vfiprintf_r+0x198>
 8005efe:	2340      	movs	r3, #64	; 0x40
 8005f00:	eba0 000a 	sub.w	r0, r0, sl
 8005f04:	fa03 f000 	lsl.w	r0, r3, r0
 8005f08:	9b04      	ldr	r3, [sp, #16]
 8005f0a:	4303      	orrs	r3, r0
 8005f0c:	3401      	adds	r4, #1
 8005f0e:	9304      	str	r3, [sp, #16]
 8005f10:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005f14:	482c      	ldr	r0, [pc, #176]	; (8005fc8 <_vfiprintf_r+0x250>)
 8005f16:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005f1a:	2206      	movs	r2, #6
 8005f1c:	f7fa f968 	bl	80001f0 <memchr>
 8005f20:	2800      	cmp	r0, #0
 8005f22:	d03f      	beq.n	8005fa4 <_vfiprintf_r+0x22c>
 8005f24:	4b29      	ldr	r3, [pc, #164]	; (8005fcc <_vfiprintf_r+0x254>)
 8005f26:	bb1b      	cbnz	r3, 8005f70 <_vfiprintf_r+0x1f8>
 8005f28:	9b03      	ldr	r3, [sp, #12]
 8005f2a:	3307      	adds	r3, #7
 8005f2c:	f023 0307 	bic.w	r3, r3, #7
 8005f30:	3308      	adds	r3, #8
 8005f32:	9303      	str	r3, [sp, #12]
 8005f34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005f36:	443b      	add	r3, r7
 8005f38:	9309      	str	r3, [sp, #36]	; 0x24
 8005f3a:	e767      	b.n	8005e0c <_vfiprintf_r+0x94>
 8005f3c:	fb0c 3202 	mla	r2, ip, r2, r3
 8005f40:	460c      	mov	r4, r1
 8005f42:	2001      	movs	r0, #1
 8005f44:	e7a5      	b.n	8005e92 <_vfiprintf_r+0x11a>
 8005f46:	2300      	movs	r3, #0
 8005f48:	3401      	adds	r4, #1
 8005f4a:	9305      	str	r3, [sp, #20]
 8005f4c:	4619      	mov	r1, r3
 8005f4e:	f04f 0c0a 	mov.w	ip, #10
 8005f52:	4620      	mov	r0, r4
 8005f54:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005f58:	3a30      	subs	r2, #48	; 0x30
 8005f5a:	2a09      	cmp	r2, #9
 8005f5c:	d903      	bls.n	8005f66 <_vfiprintf_r+0x1ee>
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	d0c5      	beq.n	8005eee <_vfiprintf_r+0x176>
 8005f62:	9105      	str	r1, [sp, #20]
 8005f64:	e7c3      	b.n	8005eee <_vfiprintf_r+0x176>
 8005f66:	fb0c 2101 	mla	r1, ip, r1, r2
 8005f6a:	4604      	mov	r4, r0
 8005f6c:	2301      	movs	r3, #1
 8005f6e:	e7f0      	b.n	8005f52 <_vfiprintf_r+0x1da>
 8005f70:	ab03      	add	r3, sp, #12
 8005f72:	9300      	str	r3, [sp, #0]
 8005f74:	462a      	mov	r2, r5
 8005f76:	4b16      	ldr	r3, [pc, #88]	; (8005fd0 <_vfiprintf_r+0x258>)
 8005f78:	a904      	add	r1, sp, #16
 8005f7a:	4630      	mov	r0, r6
 8005f7c:	f7fc f81a 	bl	8001fb4 <_printf_float>
 8005f80:	4607      	mov	r7, r0
 8005f82:	1c78      	adds	r0, r7, #1
 8005f84:	d1d6      	bne.n	8005f34 <_vfiprintf_r+0x1bc>
 8005f86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005f88:	07d9      	lsls	r1, r3, #31
 8005f8a:	d405      	bmi.n	8005f98 <_vfiprintf_r+0x220>
 8005f8c:	89ab      	ldrh	r3, [r5, #12]
 8005f8e:	059a      	lsls	r2, r3, #22
 8005f90:	d402      	bmi.n	8005f98 <_vfiprintf_r+0x220>
 8005f92:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005f94:	f000 faa1 	bl	80064da <__retarget_lock_release_recursive>
 8005f98:	89ab      	ldrh	r3, [r5, #12]
 8005f9a:	065b      	lsls	r3, r3, #25
 8005f9c:	f53f af12 	bmi.w	8005dc4 <_vfiprintf_r+0x4c>
 8005fa0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005fa2:	e711      	b.n	8005dc8 <_vfiprintf_r+0x50>
 8005fa4:	ab03      	add	r3, sp, #12
 8005fa6:	9300      	str	r3, [sp, #0]
 8005fa8:	462a      	mov	r2, r5
 8005faa:	4b09      	ldr	r3, [pc, #36]	; (8005fd0 <_vfiprintf_r+0x258>)
 8005fac:	a904      	add	r1, sp, #16
 8005fae:	4630      	mov	r0, r6
 8005fb0:	f7fc faa4 	bl	80024fc <_printf_i>
 8005fb4:	e7e4      	b.n	8005f80 <_vfiprintf_r+0x208>
 8005fb6:	bf00      	nop
 8005fb8:	08006c7c 	.word	0x08006c7c
 8005fbc:	08006c9c 	.word	0x08006c9c
 8005fc0:	08006c5c 	.word	0x08006c5c
 8005fc4:	08006c0c 	.word	0x08006c0c
 8005fc8:	08006c16 	.word	0x08006c16
 8005fcc:	08001fb5 	.word	0x08001fb5
 8005fd0:	08005d55 	.word	0x08005d55
 8005fd4:	08006c12 	.word	0x08006c12

08005fd8 <__swbuf_r>:
 8005fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fda:	460e      	mov	r6, r1
 8005fdc:	4614      	mov	r4, r2
 8005fde:	4605      	mov	r5, r0
 8005fe0:	b118      	cbz	r0, 8005fea <__swbuf_r+0x12>
 8005fe2:	6983      	ldr	r3, [r0, #24]
 8005fe4:	b90b      	cbnz	r3, 8005fea <__swbuf_r+0x12>
 8005fe6:	f000 f9d9 	bl	800639c <__sinit>
 8005fea:	4b21      	ldr	r3, [pc, #132]	; (8006070 <__swbuf_r+0x98>)
 8005fec:	429c      	cmp	r4, r3
 8005fee:	d12b      	bne.n	8006048 <__swbuf_r+0x70>
 8005ff0:	686c      	ldr	r4, [r5, #4]
 8005ff2:	69a3      	ldr	r3, [r4, #24]
 8005ff4:	60a3      	str	r3, [r4, #8]
 8005ff6:	89a3      	ldrh	r3, [r4, #12]
 8005ff8:	071a      	lsls	r2, r3, #28
 8005ffa:	d52f      	bpl.n	800605c <__swbuf_r+0x84>
 8005ffc:	6923      	ldr	r3, [r4, #16]
 8005ffe:	b36b      	cbz	r3, 800605c <__swbuf_r+0x84>
 8006000:	6923      	ldr	r3, [r4, #16]
 8006002:	6820      	ldr	r0, [r4, #0]
 8006004:	1ac0      	subs	r0, r0, r3
 8006006:	6963      	ldr	r3, [r4, #20]
 8006008:	b2f6      	uxtb	r6, r6
 800600a:	4283      	cmp	r3, r0
 800600c:	4637      	mov	r7, r6
 800600e:	dc04      	bgt.n	800601a <__swbuf_r+0x42>
 8006010:	4621      	mov	r1, r4
 8006012:	4628      	mov	r0, r5
 8006014:	f000 f92e 	bl	8006274 <_fflush_r>
 8006018:	bb30      	cbnz	r0, 8006068 <__swbuf_r+0x90>
 800601a:	68a3      	ldr	r3, [r4, #8]
 800601c:	3b01      	subs	r3, #1
 800601e:	60a3      	str	r3, [r4, #8]
 8006020:	6823      	ldr	r3, [r4, #0]
 8006022:	1c5a      	adds	r2, r3, #1
 8006024:	6022      	str	r2, [r4, #0]
 8006026:	701e      	strb	r6, [r3, #0]
 8006028:	6963      	ldr	r3, [r4, #20]
 800602a:	3001      	adds	r0, #1
 800602c:	4283      	cmp	r3, r0
 800602e:	d004      	beq.n	800603a <__swbuf_r+0x62>
 8006030:	89a3      	ldrh	r3, [r4, #12]
 8006032:	07db      	lsls	r3, r3, #31
 8006034:	d506      	bpl.n	8006044 <__swbuf_r+0x6c>
 8006036:	2e0a      	cmp	r6, #10
 8006038:	d104      	bne.n	8006044 <__swbuf_r+0x6c>
 800603a:	4621      	mov	r1, r4
 800603c:	4628      	mov	r0, r5
 800603e:	f000 f919 	bl	8006274 <_fflush_r>
 8006042:	b988      	cbnz	r0, 8006068 <__swbuf_r+0x90>
 8006044:	4638      	mov	r0, r7
 8006046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006048:	4b0a      	ldr	r3, [pc, #40]	; (8006074 <__swbuf_r+0x9c>)
 800604a:	429c      	cmp	r4, r3
 800604c:	d101      	bne.n	8006052 <__swbuf_r+0x7a>
 800604e:	68ac      	ldr	r4, [r5, #8]
 8006050:	e7cf      	b.n	8005ff2 <__swbuf_r+0x1a>
 8006052:	4b09      	ldr	r3, [pc, #36]	; (8006078 <__swbuf_r+0xa0>)
 8006054:	429c      	cmp	r4, r3
 8006056:	bf08      	it	eq
 8006058:	68ec      	ldreq	r4, [r5, #12]
 800605a:	e7ca      	b.n	8005ff2 <__swbuf_r+0x1a>
 800605c:	4621      	mov	r1, r4
 800605e:	4628      	mov	r0, r5
 8006060:	f000 f80c 	bl	800607c <__swsetup_r>
 8006064:	2800      	cmp	r0, #0
 8006066:	d0cb      	beq.n	8006000 <__swbuf_r+0x28>
 8006068:	f04f 37ff 	mov.w	r7, #4294967295
 800606c:	e7ea      	b.n	8006044 <__swbuf_r+0x6c>
 800606e:	bf00      	nop
 8006070:	08006c7c 	.word	0x08006c7c
 8006074:	08006c9c 	.word	0x08006c9c
 8006078:	08006c5c 	.word	0x08006c5c

0800607c <__swsetup_r>:
 800607c:	4b32      	ldr	r3, [pc, #200]	; (8006148 <__swsetup_r+0xcc>)
 800607e:	b570      	push	{r4, r5, r6, lr}
 8006080:	681d      	ldr	r5, [r3, #0]
 8006082:	4606      	mov	r6, r0
 8006084:	460c      	mov	r4, r1
 8006086:	b125      	cbz	r5, 8006092 <__swsetup_r+0x16>
 8006088:	69ab      	ldr	r3, [r5, #24]
 800608a:	b913      	cbnz	r3, 8006092 <__swsetup_r+0x16>
 800608c:	4628      	mov	r0, r5
 800608e:	f000 f985 	bl	800639c <__sinit>
 8006092:	4b2e      	ldr	r3, [pc, #184]	; (800614c <__swsetup_r+0xd0>)
 8006094:	429c      	cmp	r4, r3
 8006096:	d10f      	bne.n	80060b8 <__swsetup_r+0x3c>
 8006098:	686c      	ldr	r4, [r5, #4]
 800609a:	89a3      	ldrh	r3, [r4, #12]
 800609c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80060a0:	0719      	lsls	r1, r3, #28
 80060a2:	d42c      	bmi.n	80060fe <__swsetup_r+0x82>
 80060a4:	06dd      	lsls	r5, r3, #27
 80060a6:	d411      	bmi.n	80060cc <__swsetup_r+0x50>
 80060a8:	2309      	movs	r3, #9
 80060aa:	6033      	str	r3, [r6, #0]
 80060ac:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80060b0:	81a3      	strh	r3, [r4, #12]
 80060b2:	f04f 30ff 	mov.w	r0, #4294967295
 80060b6:	e03e      	b.n	8006136 <__swsetup_r+0xba>
 80060b8:	4b25      	ldr	r3, [pc, #148]	; (8006150 <__swsetup_r+0xd4>)
 80060ba:	429c      	cmp	r4, r3
 80060bc:	d101      	bne.n	80060c2 <__swsetup_r+0x46>
 80060be:	68ac      	ldr	r4, [r5, #8]
 80060c0:	e7eb      	b.n	800609a <__swsetup_r+0x1e>
 80060c2:	4b24      	ldr	r3, [pc, #144]	; (8006154 <__swsetup_r+0xd8>)
 80060c4:	429c      	cmp	r4, r3
 80060c6:	bf08      	it	eq
 80060c8:	68ec      	ldreq	r4, [r5, #12]
 80060ca:	e7e6      	b.n	800609a <__swsetup_r+0x1e>
 80060cc:	0758      	lsls	r0, r3, #29
 80060ce:	d512      	bpl.n	80060f6 <__swsetup_r+0x7a>
 80060d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80060d2:	b141      	cbz	r1, 80060e6 <__swsetup_r+0x6a>
 80060d4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80060d8:	4299      	cmp	r1, r3
 80060da:	d002      	beq.n	80060e2 <__swsetup_r+0x66>
 80060dc:	4630      	mov	r0, r6
 80060de:	f7ff fb25 	bl	800572c <_free_r>
 80060e2:	2300      	movs	r3, #0
 80060e4:	6363      	str	r3, [r4, #52]	; 0x34
 80060e6:	89a3      	ldrh	r3, [r4, #12]
 80060e8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80060ec:	81a3      	strh	r3, [r4, #12]
 80060ee:	2300      	movs	r3, #0
 80060f0:	6063      	str	r3, [r4, #4]
 80060f2:	6923      	ldr	r3, [r4, #16]
 80060f4:	6023      	str	r3, [r4, #0]
 80060f6:	89a3      	ldrh	r3, [r4, #12]
 80060f8:	f043 0308 	orr.w	r3, r3, #8
 80060fc:	81a3      	strh	r3, [r4, #12]
 80060fe:	6923      	ldr	r3, [r4, #16]
 8006100:	b94b      	cbnz	r3, 8006116 <__swsetup_r+0x9a>
 8006102:	89a3      	ldrh	r3, [r4, #12]
 8006104:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8006108:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800610c:	d003      	beq.n	8006116 <__swsetup_r+0x9a>
 800610e:	4621      	mov	r1, r4
 8006110:	4630      	mov	r0, r6
 8006112:	f000 fa09 	bl	8006528 <__smakebuf_r>
 8006116:	89a0      	ldrh	r0, [r4, #12]
 8006118:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800611c:	f010 0301 	ands.w	r3, r0, #1
 8006120:	d00a      	beq.n	8006138 <__swsetup_r+0xbc>
 8006122:	2300      	movs	r3, #0
 8006124:	60a3      	str	r3, [r4, #8]
 8006126:	6963      	ldr	r3, [r4, #20]
 8006128:	425b      	negs	r3, r3
 800612a:	61a3      	str	r3, [r4, #24]
 800612c:	6923      	ldr	r3, [r4, #16]
 800612e:	b943      	cbnz	r3, 8006142 <__swsetup_r+0xc6>
 8006130:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8006134:	d1ba      	bne.n	80060ac <__swsetup_r+0x30>
 8006136:	bd70      	pop	{r4, r5, r6, pc}
 8006138:	0781      	lsls	r1, r0, #30
 800613a:	bf58      	it	pl
 800613c:	6963      	ldrpl	r3, [r4, #20]
 800613e:	60a3      	str	r3, [r4, #8]
 8006140:	e7f4      	b.n	800612c <__swsetup_r+0xb0>
 8006142:	2000      	movs	r0, #0
 8006144:	e7f7      	b.n	8006136 <__swsetup_r+0xba>
 8006146:	bf00      	nop
 8006148:	20000004 	.word	0x20000004
 800614c:	08006c7c 	.word	0x08006c7c
 8006150:	08006c9c 	.word	0x08006c9c
 8006154:	08006c5c 	.word	0x08006c5c

08006158 <abort>:
 8006158:	b508      	push	{r3, lr}
 800615a:	2006      	movs	r0, #6
 800615c:	f000 fa54 	bl	8006608 <raise>
 8006160:	2001      	movs	r0, #1
 8006162:	f7fb fcec 	bl	8001b3e <_exit>
	...

08006168 <__sflush_r>:
 8006168:	898a      	ldrh	r2, [r1, #12]
 800616a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800616e:	4605      	mov	r5, r0
 8006170:	0710      	lsls	r0, r2, #28
 8006172:	460c      	mov	r4, r1
 8006174:	d458      	bmi.n	8006228 <__sflush_r+0xc0>
 8006176:	684b      	ldr	r3, [r1, #4]
 8006178:	2b00      	cmp	r3, #0
 800617a:	dc05      	bgt.n	8006188 <__sflush_r+0x20>
 800617c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800617e:	2b00      	cmp	r3, #0
 8006180:	dc02      	bgt.n	8006188 <__sflush_r+0x20>
 8006182:	2000      	movs	r0, #0
 8006184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006188:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800618a:	2e00      	cmp	r6, #0
 800618c:	d0f9      	beq.n	8006182 <__sflush_r+0x1a>
 800618e:	2300      	movs	r3, #0
 8006190:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006194:	682f      	ldr	r7, [r5, #0]
 8006196:	602b      	str	r3, [r5, #0]
 8006198:	d032      	beq.n	8006200 <__sflush_r+0x98>
 800619a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800619c:	89a3      	ldrh	r3, [r4, #12]
 800619e:	075a      	lsls	r2, r3, #29
 80061a0:	d505      	bpl.n	80061ae <__sflush_r+0x46>
 80061a2:	6863      	ldr	r3, [r4, #4]
 80061a4:	1ac0      	subs	r0, r0, r3
 80061a6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80061a8:	b10b      	cbz	r3, 80061ae <__sflush_r+0x46>
 80061aa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80061ac:	1ac0      	subs	r0, r0, r3
 80061ae:	2300      	movs	r3, #0
 80061b0:	4602      	mov	r2, r0
 80061b2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80061b4:	6a21      	ldr	r1, [r4, #32]
 80061b6:	4628      	mov	r0, r5
 80061b8:	47b0      	blx	r6
 80061ba:	1c43      	adds	r3, r0, #1
 80061bc:	89a3      	ldrh	r3, [r4, #12]
 80061be:	d106      	bne.n	80061ce <__sflush_r+0x66>
 80061c0:	6829      	ldr	r1, [r5, #0]
 80061c2:	291d      	cmp	r1, #29
 80061c4:	d82c      	bhi.n	8006220 <__sflush_r+0xb8>
 80061c6:	4a2a      	ldr	r2, [pc, #168]	; (8006270 <__sflush_r+0x108>)
 80061c8:	40ca      	lsrs	r2, r1
 80061ca:	07d6      	lsls	r6, r2, #31
 80061cc:	d528      	bpl.n	8006220 <__sflush_r+0xb8>
 80061ce:	2200      	movs	r2, #0
 80061d0:	6062      	str	r2, [r4, #4]
 80061d2:	04d9      	lsls	r1, r3, #19
 80061d4:	6922      	ldr	r2, [r4, #16]
 80061d6:	6022      	str	r2, [r4, #0]
 80061d8:	d504      	bpl.n	80061e4 <__sflush_r+0x7c>
 80061da:	1c42      	adds	r2, r0, #1
 80061dc:	d101      	bne.n	80061e2 <__sflush_r+0x7a>
 80061de:	682b      	ldr	r3, [r5, #0]
 80061e0:	b903      	cbnz	r3, 80061e4 <__sflush_r+0x7c>
 80061e2:	6560      	str	r0, [r4, #84]	; 0x54
 80061e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80061e6:	602f      	str	r7, [r5, #0]
 80061e8:	2900      	cmp	r1, #0
 80061ea:	d0ca      	beq.n	8006182 <__sflush_r+0x1a>
 80061ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80061f0:	4299      	cmp	r1, r3
 80061f2:	d002      	beq.n	80061fa <__sflush_r+0x92>
 80061f4:	4628      	mov	r0, r5
 80061f6:	f7ff fa99 	bl	800572c <_free_r>
 80061fa:	2000      	movs	r0, #0
 80061fc:	6360      	str	r0, [r4, #52]	; 0x34
 80061fe:	e7c1      	b.n	8006184 <__sflush_r+0x1c>
 8006200:	6a21      	ldr	r1, [r4, #32]
 8006202:	2301      	movs	r3, #1
 8006204:	4628      	mov	r0, r5
 8006206:	47b0      	blx	r6
 8006208:	1c41      	adds	r1, r0, #1
 800620a:	d1c7      	bne.n	800619c <__sflush_r+0x34>
 800620c:	682b      	ldr	r3, [r5, #0]
 800620e:	2b00      	cmp	r3, #0
 8006210:	d0c4      	beq.n	800619c <__sflush_r+0x34>
 8006212:	2b1d      	cmp	r3, #29
 8006214:	d001      	beq.n	800621a <__sflush_r+0xb2>
 8006216:	2b16      	cmp	r3, #22
 8006218:	d101      	bne.n	800621e <__sflush_r+0xb6>
 800621a:	602f      	str	r7, [r5, #0]
 800621c:	e7b1      	b.n	8006182 <__sflush_r+0x1a>
 800621e:	89a3      	ldrh	r3, [r4, #12]
 8006220:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006224:	81a3      	strh	r3, [r4, #12]
 8006226:	e7ad      	b.n	8006184 <__sflush_r+0x1c>
 8006228:	690f      	ldr	r7, [r1, #16]
 800622a:	2f00      	cmp	r7, #0
 800622c:	d0a9      	beq.n	8006182 <__sflush_r+0x1a>
 800622e:	0793      	lsls	r3, r2, #30
 8006230:	680e      	ldr	r6, [r1, #0]
 8006232:	bf08      	it	eq
 8006234:	694b      	ldreq	r3, [r1, #20]
 8006236:	600f      	str	r7, [r1, #0]
 8006238:	bf18      	it	ne
 800623a:	2300      	movne	r3, #0
 800623c:	eba6 0807 	sub.w	r8, r6, r7
 8006240:	608b      	str	r3, [r1, #8]
 8006242:	f1b8 0f00 	cmp.w	r8, #0
 8006246:	dd9c      	ble.n	8006182 <__sflush_r+0x1a>
 8006248:	6a21      	ldr	r1, [r4, #32]
 800624a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800624c:	4643      	mov	r3, r8
 800624e:	463a      	mov	r2, r7
 8006250:	4628      	mov	r0, r5
 8006252:	47b0      	blx	r6
 8006254:	2800      	cmp	r0, #0
 8006256:	dc06      	bgt.n	8006266 <__sflush_r+0xfe>
 8006258:	89a3      	ldrh	r3, [r4, #12]
 800625a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800625e:	81a3      	strh	r3, [r4, #12]
 8006260:	f04f 30ff 	mov.w	r0, #4294967295
 8006264:	e78e      	b.n	8006184 <__sflush_r+0x1c>
 8006266:	4407      	add	r7, r0
 8006268:	eba8 0800 	sub.w	r8, r8, r0
 800626c:	e7e9      	b.n	8006242 <__sflush_r+0xda>
 800626e:	bf00      	nop
 8006270:	20400001 	.word	0x20400001

08006274 <_fflush_r>:
 8006274:	b538      	push	{r3, r4, r5, lr}
 8006276:	690b      	ldr	r3, [r1, #16]
 8006278:	4605      	mov	r5, r0
 800627a:	460c      	mov	r4, r1
 800627c:	b913      	cbnz	r3, 8006284 <_fflush_r+0x10>
 800627e:	2500      	movs	r5, #0
 8006280:	4628      	mov	r0, r5
 8006282:	bd38      	pop	{r3, r4, r5, pc}
 8006284:	b118      	cbz	r0, 800628e <_fflush_r+0x1a>
 8006286:	6983      	ldr	r3, [r0, #24]
 8006288:	b90b      	cbnz	r3, 800628e <_fflush_r+0x1a>
 800628a:	f000 f887 	bl	800639c <__sinit>
 800628e:	4b14      	ldr	r3, [pc, #80]	; (80062e0 <_fflush_r+0x6c>)
 8006290:	429c      	cmp	r4, r3
 8006292:	d11b      	bne.n	80062cc <_fflush_r+0x58>
 8006294:	686c      	ldr	r4, [r5, #4]
 8006296:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800629a:	2b00      	cmp	r3, #0
 800629c:	d0ef      	beq.n	800627e <_fflush_r+0xa>
 800629e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80062a0:	07d0      	lsls	r0, r2, #31
 80062a2:	d404      	bmi.n	80062ae <_fflush_r+0x3a>
 80062a4:	0599      	lsls	r1, r3, #22
 80062a6:	d402      	bmi.n	80062ae <_fflush_r+0x3a>
 80062a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062aa:	f000 f915 	bl	80064d8 <__retarget_lock_acquire_recursive>
 80062ae:	4628      	mov	r0, r5
 80062b0:	4621      	mov	r1, r4
 80062b2:	f7ff ff59 	bl	8006168 <__sflush_r>
 80062b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80062b8:	07da      	lsls	r2, r3, #31
 80062ba:	4605      	mov	r5, r0
 80062bc:	d4e0      	bmi.n	8006280 <_fflush_r+0xc>
 80062be:	89a3      	ldrh	r3, [r4, #12]
 80062c0:	059b      	lsls	r3, r3, #22
 80062c2:	d4dd      	bmi.n	8006280 <_fflush_r+0xc>
 80062c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062c6:	f000 f908 	bl	80064da <__retarget_lock_release_recursive>
 80062ca:	e7d9      	b.n	8006280 <_fflush_r+0xc>
 80062cc:	4b05      	ldr	r3, [pc, #20]	; (80062e4 <_fflush_r+0x70>)
 80062ce:	429c      	cmp	r4, r3
 80062d0:	d101      	bne.n	80062d6 <_fflush_r+0x62>
 80062d2:	68ac      	ldr	r4, [r5, #8]
 80062d4:	e7df      	b.n	8006296 <_fflush_r+0x22>
 80062d6:	4b04      	ldr	r3, [pc, #16]	; (80062e8 <_fflush_r+0x74>)
 80062d8:	429c      	cmp	r4, r3
 80062da:	bf08      	it	eq
 80062dc:	68ec      	ldreq	r4, [r5, #12]
 80062de:	e7da      	b.n	8006296 <_fflush_r+0x22>
 80062e0:	08006c7c 	.word	0x08006c7c
 80062e4:	08006c9c 	.word	0x08006c9c
 80062e8:	08006c5c 	.word	0x08006c5c

080062ec <std>:
 80062ec:	2300      	movs	r3, #0
 80062ee:	b510      	push	{r4, lr}
 80062f0:	4604      	mov	r4, r0
 80062f2:	e9c0 3300 	strd	r3, r3, [r0]
 80062f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80062fa:	6083      	str	r3, [r0, #8]
 80062fc:	8181      	strh	r1, [r0, #12]
 80062fe:	6643      	str	r3, [r0, #100]	; 0x64
 8006300:	81c2      	strh	r2, [r0, #14]
 8006302:	6183      	str	r3, [r0, #24]
 8006304:	4619      	mov	r1, r3
 8006306:	2208      	movs	r2, #8
 8006308:	305c      	adds	r0, #92	; 0x5c
 800630a:	f7fb fdab 	bl	8001e64 <memset>
 800630e:	4b05      	ldr	r3, [pc, #20]	; (8006324 <std+0x38>)
 8006310:	6263      	str	r3, [r4, #36]	; 0x24
 8006312:	4b05      	ldr	r3, [pc, #20]	; (8006328 <std+0x3c>)
 8006314:	62a3      	str	r3, [r4, #40]	; 0x28
 8006316:	4b05      	ldr	r3, [pc, #20]	; (800632c <std+0x40>)
 8006318:	62e3      	str	r3, [r4, #44]	; 0x2c
 800631a:	4b05      	ldr	r3, [pc, #20]	; (8006330 <std+0x44>)
 800631c:	6224      	str	r4, [r4, #32]
 800631e:	6323      	str	r3, [r4, #48]	; 0x30
 8006320:	bd10      	pop	{r4, pc}
 8006322:	bf00      	nop
 8006324:	08006641 	.word	0x08006641
 8006328:	08006663 	.word	0x08006663
 800632c:	0800669b 	.word	0x0800669b
 8006330:	080066bf 	.word	0x080066bf

08006334 <_cleanup_r>:
 8006334:	4901      	ldr	r1, [pc, #4]	; (800633c <_cleanup_r+0x8>)
 8006336:	f000 b8af 	b.w	8006498 <_fwalk_reent>
 800633a:	bf00      	nop
 800633c:	08006275 	.word	0x08006275

08006340 <__sfmoreglue>:
 8006340:	b570      	push	{r4, r5, r6, lr}
 8006342:	2268      	movs	r2, #104	; 0x68
 8006344:	1e4d      	subs	r5, r1, #1
 8006346:	4355      	muls	r5, r2
 8006348:	460e      	mov	r6, r1
 800634a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800634e:	f7ff fa59 	bl	8005804 <_malloc_r>
 8006352:	4604      	mov	r4, r0
 8006354:	b140      	cbz	r0, 8006368 <__sfmoreglue+0x28>
 8006356:	2100      	movs	r1, #0
 8006358:	e9c0 1600 	strd	r1, r6, [r0]
 800635c:	300c      	adds	r0, #12
 800635e:	60a0      	str	r0, [r4, #8]
 8006360:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006364:	f7fb fd7e 	bl	8001e64 <memset>
 8006368:	4620      	mov	r0, r4
 800636a:	bd70      	pop	{r4, r5, r6, pc}

0800636c <__sfp_lock_acquire>:
 800636c:	4801      	ldr	r0, [pc, #4]	; (8006374 <__sfp_lock_acquire+0x8>)
 800636e:	f000 b8b3 	b.w	80064d8 <__retarget_lock_acquire_recursive>
 8006372:	bf00      	nop
 8006374:	20000229 	.word	0x20000229

08006378 <__sfp_lock_release>:
 8006378:	4801      	ldr	r0, [pc, #4]	; (8006380 <__sfp_lock_release+0x8>)
 800637a:	f000 b8ae 	b.w	80064da <__retarget_lock_release_recursive>
 800637e:	bf00      	nop
 8006380:	20000229 	.word	0x20000229

08006384 <__sinit_lock_acquire>:
 8006384:	4801      	ldr	r0, [pc, #4]	; (800638c <__sinit_lock_acquire+0x8>)
 8006386:	f000 b8a7 	b.w	80064d8 <__retarget_lock_acquire_recursive>
 800638a:	bf00      	nop
 800638c:	2000022a 	.word	0x2000022a

08006390 <__sinit_lock_release>:
 8006390:	4801      	ldr	r0, [pc, #4]	; (8006398 <__sinit_lock_release+0x8>)
 8006392:	f000 b8a2 	b.w	80064da <__retarget_lock_release_recursive>
 8006396:	bf00      	nop
 8006398:	2000022a 	.word	0x2000022a

0800639c <__sinit>:
 800639c:	b510      	push	{r4, lr}
 800639e:	4604      	mov	r4, r0
 80063a0:	f7ff fff0 	bl	8006384 <__sinit_lock_acquire>
 80063a4:	69a3      	ldr	r3, [r4, #24]
 80063a6:	b11b      	cbz	r3, 80063b0 <__sinit+0x14>
 80063a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80063ac:	f7ff bff0 	b.w	8006390 <__sinit_lock_release>
 80063b0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80063b4:	6523      	str	r3, [r4, #80]	; 0x50
 80063b6:	4b13      	ldr	r3, [pc, #76]	; (8006404 <__sinit+0x68>)
 80063b8:	4a13      	ldr	r2, [pc, #76]	; (8006408 <__sinit+0x6c>)
 80063ba:	681b      	ldr	r3, [r3, #0]
 80063bc:	62a2      	str	r2, [r4, #40]	; 0x28
 80063be:	42a3      	cmp	r3, r4
 80063c0:	bf04      	itt	eq
 80063c2:	2301      	moveq	r3, #1
 80063c4:	61a3      	streq	r3, [r4, #24]
 80063c6:	4620      	mov	r0, r4
 80063c8:	f000 f820 	bl	800640c <__sfp>
 80063cc:	6060      	str	r0, [r4, #4]
 80063ce:	4620      	mov	r0, r4
 80063d0:	f000 f81c 	bl	800640c <__sfp>
 80063d4:	60a0      	str	r0, [r4, #8]
 80063d6:	4620      	mov	r0, r4
 80063d8:	f000 f818 	bl	800640c <__sfp>
 80063dc:	2200      	movs	r2, #0
 80063de:	60e0      	str	r0, [r4, #12]
 80063e0:	2104      	movs	r1, #4
 80063e2:	6860      	ldr	r0, [r4, #4]
 80063e4:	f7ff ff82 	bl	80062ec <std>
 80063e8:	68a0      	ldr	r0, [r4, #8]
 80063ea:	2201      	movs	r2, #1
 80063ec:	2109      	movs	r1, #9
 80063ee:	f7ff ff7d 	bl	80062ec <std>
 80063f2:	68e0      	ldr	r0, [r4, #12]
 80063f4:	2202      	movs	r2, #2
 80063f6:	2112      	movs	r1, #18
 80063f8:	f7ff ff78 	bl	80062ec <std>
 80063fc:	2301      	movs	r3, #1
 80063fe:	61a3      	str	r3, [r4, #24]
 8006400:	e7d2      	b.n	80063a8 <__sinit+0xc>
 8006402:	bf00      	nop
 8006404:	08006818 	.word	0x08006818
 8006408:	08006335 	.word	0x08006335

0800640c <__sfp>:
 800640c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800640e:	4607      	mov	r7, r0
 8006410:	f7ff ffac 	bl	800636c <__sfp_lock_acquire>
 8006414:	4b1e      	ldr	r3, [pc, #120]	; (8006490 <__sfp+0x84>)
 8006416:	681e      	ldr	r6, [r3, #0]
 8006418:	69b3      	ldr	r3, [r6, #24]
 800641a:	b913      	cbnz	r3, 8006422 <__sfp+0x16>
 800641c:	4630      	mov	r0, r6
 800641e:	f7ff ffbd 	bl	800639c <__sinit>
 8006422:	3648      	adds	r6, #72	; 0x48
 8006424:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006428:	3b01      	subs	r3, #1
 800642a:	d503      	bpl.n	8006434 <__sfp+0x28>
 800642c:	6833      	ldr	r3, [r6, #0]
 800642e:	b30b      	cbz	r3, 8006474 <__sfp+0x68>
 8006430:	6836      	ldr	r6, [r6, #0]
 8006432:	e7f7      	b.n	8006424 <__sfp+0x18>
 8006434:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006438:	b9d5      	cbnz	r5, 8006470 <__sfp+0x64>
 800643a:	4b16      	ldr	r3, [pc, #88]	; (8006494 <__sfp+0x88>)
 800643c:	60e3      	str	r3, [r4, #12]
 800643e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006442:	6665      	str	r5, [r4, #100]	; 0x64
 8006444:	f000 f847 	bl	80064d6 <__retarget_lock_init_recursive>
 8006448:	f7ff ff96 	bl	8006378 <__sfp_lock_release>
 800644c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006450:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006454:	6025      	str	r5, [r4, #0]
 8006456:	61a5      	str	r5, [r4, #24]
 8006458:	2208      	movs	r2, #8
 800645a:	4629      	mov	r1, r5
 800645c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006460:	f7fb fd00 	bl	8001e64 <memset>
 8006464:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006468:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800646c:	4620      	mov	r0, r4
 800646e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006470:	3468      	adds	r4, #104	; 0x68
 8006472:	e7d9      	b.n	8006428 <__sfp+0x1c>
 8006474:	2104      	movs	r1, #4
 8006476:	4638      	mov	r0, r7
 8006478:	f7ff ff62 	bl	8006340 <__sfmoreglue>
 800647c:	4604      	mov	r4, r0
 800647e:	6030      	str	r0, [r6, #0]
 8006480:	2800      	cmp	r0, #0
 8006482:	d1d5      	bne.n	8006430 <__sfp+0x24>
 8006484:	f7ff ff78 	bl	8006378 <__sfp_lock_release>
 8006488:	230c      	movs	r3, #12
 800648a:	603b      	str	r3, [r7, #0]
 800648c:	e7ee      	b.n	800646c <__sfp+0x60>
 800648e:	bf00      	nop
 8006490:	08006818 	.word	0x08006818
 8006494:	ffff0001 	.word	0xffff0001

08006498 <_fwalk_reent>:
 8006498:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800649c:	4606      	mov	r6, r0
 800649e:	4688      	mov	r8, r1
 80064a0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80064a4:	2700      	movs	r7, #0
 80064a6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80064aa:	f1b9 0901 	subs.w	r9, r9, #1
 80064ae:	d505      	bpl.n	80064bc <_fwalk_reent+0x24>
 80064b0:	6824      	ldr	r4, [r4, #0]
 80064b2:	2c00      	cmp	r4, #0
 80064b4:	d1f7      	bne.n	80064a6 <_fwalk_reent+0xe>
 80064b6:	4638      	mov	r0, r7
 80064b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80064bc:	89ab      	ldrh	r3, [r5, #12]
 80064be:	2b01      	cmp	r3, #1
 80064c0:	d907      	bls.n	80064d2 <_fwalk_reent+0x3a>
 80064c2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80064c6:	3301      	adds	r3, #1
 80064c8:	d003      	beq.n	80064d2 <_fwalk_reent+0x3a>
 80064ca:	4629      	mov	r1, r5
 80064cc:	4630      	mov	r0, r6
 80064ce:	47c0      	blx	r8
 80064d0:	4307      	orrs	r7, r0
 80064d2:	3568      	adds	r5, #104	; 0x68
 80064d4:	e7e9      	b.n	80064aa <_fwalk_reent+0x12>

080064d6 <__retarget_lock_init_recursive>:
 80064d6:	4770      	bx	lr

080064d8 <__retarget_lock_acquire_recursive>:
 80064d8:	4770      	bx	lr

080064da <__retarget_lock_release_recursive>:
 80064da:	4770      	bx	lr

080064dc <__swhatbuf_r>:
 80064dc:	b570      	push	{r4, r5, r6, lr}
 80064de:	460e      	mov	r6, r1
 80064e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80064e4:	2900      	cmp	r1, #0
 80064e6:	b096      	sub	sp, #88	; 0x58
 80064e8:	4614      	mov	r4, r2
 80064ea:	461d      	mov	r5, r3
 80064ec:	da08      	bge.n	8006500 <__swhatbuf_r+0x24>
 80064ee:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80064f2:	2200      	movs	r2, #0
 80064f4:	602a      	str	r2, [r5, #0]
 80064f6:	061a      	lsls	r2, r3, #24
 80064f8:	d410      	bmi.n	800651c <__swhatbuf_r+0x40>
 80064fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80064fe:	e00e      	b.n	800651e <__swhatbuf_r+0x42>
 8006500:	466a      	mov	r2, sp
 8006502:	f000 f903 	bl	800670c <_fstat_r>
 8006506:	2800      	cmp	r0, #0
 8006508:	dbf1      	blt.n	80064ee <__swhatbuf_r+0x12>
 800650a:	9a01      	ldr	r2, [sp, #4]
 800650c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8006510:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8006514:	425a      	negs	r2, r3
 8006516:	415a      	adcs	r2, r3
 8006518:	602a      	str	r2, [r5, #0]
 800651a:	e7ee      	b.n	80064fa <__swhatbuf_r+0x1e>
 800651c:	2340      	movs	r3, #64	; 0x40
 800651e:	2000      	movs	r0, #0
 8006520:	6023      	str	r3, [r4, #0]
 8006522:	b016      	add	sp, #88	; 0x58
 8006524:	bd70      	pop	{r4, r5, r6, pc}
	...

08006528 <__smakebuf_r>:
 8006528:	898b      	ldrh	r3, [r1, #12]
 800652a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800652c:	079d      	lsls	r5, r3, #30
 800652e:	4606      	mov	r6, r0
 8006530:	460c      	mov	r4, r1
 8006532:	d507      	bpl.n	8006544 <__smakebuf_r+0x1c>
 8006534:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006538:	6023      	str	r3, [r4, #0]
 800653a:	6123      	str	r3, [r4, #16]
 800653c:	2301      	movs	r3, #1
 800653e:	6163      	str	r3, [r4, #20]
 8006540:	b002      	add	sp, #8
 8006542:	bd70      	pop	{r4, r5, r6, pc}
 8006544:	ab01      	add	r3, sp, #4
 8006546:	466a      	mov	r2, sp
 8006548:	f7ff ffc8 	bl	80064dc <__swhatbuf_r>
 800654c:	9900      	ldr	r1, [sp, #0]
 800654e:	4605      	mov	r5, r0
 8006550:	4630      	mov	r0, r6
 8006552:	f7ff f957 	bl	8005804 <_malloc_r>
 8006556:	b948      	cbnz	r0, 800656c <__smakebuf_r+0x44>
 8006558:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800655c:	059a      	lsls	r2, r3, #22
 800655e:	d4ef      	bmi.n	8006540 <__smakebuf_r+0x18>
 8006560:	f023 0303 	bic.w	r3, r3, #3
 8006564:	f043 0302 	orr.w	r3, r3, #2
 8006568:	81a3      	strh	r3, [r4, #12]
 800656a:	e7e3      	b.n	8006534 <__smakebuf_r+0xc>
 800656c:	4b0d      	ldr	r3, [pc, #52]	; (80065a4 <__smakebuf_r+0x7c>)
 800656e:	62b3      	str	r3, [r6, #40]	; 0x28
 8006570:	89a3      	ldrh	r3, [r4, #12]
 8006572:	6020      	str	r0, [r4, #0]
 8006574:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006578:	81a3      	strh	r3, [r4, #12]
 800657a:	9b00      	ldr	r3, [sp, #0]
 800657c:	6163      	str	r3, [r4, #20]
 800657e:	9b01      	ldr	r3, [sp, #4]
 8006580:	6120      	str	r0, [r4, #16]
 8006582:	b15b      	cbz	r3, 800659c <__smakebuf_r+0x74>
 8006584:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006588:	4630      	mov	r0, r6
 800658a:	f000 f8d1 	bl	8006730 <_isatty_r>
 800658e:	b128      	cbz	r0, 800659c <__smakebuf_r+0x74>
 8006590:	89a3      	ldrh	r3, [r4, #12]
 8006592:	f023 0303 	bic.w	r3, r3, #3
 8006596:	f043 0301 	orr.w	r3, r3, #1
 800659a:	81a3      	strh	r3, [r4, #12]
 800659c:	89a0      	ldrh	r0, [r4, #12]
 800659e:	4305      	orrs	r5, r0
 80065a0:	81a5      	strh	r5, [r4, #12]
 80065a2:	e7cd      	b.n	8006540 <__smakebuf_r+0x18>
 80065a4:	08006335 	.word	0x08006335

080065a8 <_malloc_usable_size_r>:
 80065a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80065ac:	1f18      	subs	r0, r3, #4
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	bfbc      	itt	lt
 80065b2:	580b      	ldrlt	r3, [r1, r0]
 80065b4:	18c0      	addlt	r0, r0, r3
 80065b6:	4770      	bx	lr

080065b8 <_raise_r>:
 80065b8:	291f      	cmp	r1, #31
 80065ba:	b538      	push	{r3, r4, r5, lr}
 80065bc:	4604      	mov	r4, r0
 80065be:	460d      	mov	r5, r1
 80065c0:	d904      	bls.n	80065cc <_raise_r+0x14>
 80065c2:	2316      	movs	r3, #22
 80065c4:	6003      	str	r3, [r0, #0]
 80065c6:	f04f 30ff 	mov.w	r0, #4294967295
 80065ca:	bd38      	pop	{r3, r4, r5, pc}
 80065cc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80065ce:	b112      	cbz	r2, 80065d6 <_raise_r+0x1e>
 80065d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80065d4:	b94b      	cbnz	r3, 80065ea <_raise_r+0x32>
 80065d6:	4620      	mov	r0, r4
 80065d8:	f000 f830 	bl	800663c <_getpid_r>
 80065dc:	462a      	mov	r2, r5
 80065de:	4601      	mov	r1, r0
 80065e0:	4620      	mov	r0, r4
 80065e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80065e6:	f000 b817 	b.w	8006618 <_kill_r>
 80065ea:	2b01      	cmp	r3, #1
 80065ec:	d00a      	beq.n	8006604 <_raise_r+0x4c>
 80065ee:	1c59      	adds	r1, r3, #1
 80065f0:	d103      	bne.n	80065fa <_raise_r+0x42>
 80065f2:	2316      	movs	r3, #22
 80065f4:	6003      	str	r3, [r0, #0]
 80065f6:	2001      	movs	r0, #1
 80065f8:	e7e7      	b.n	80065ca <_raise_r+0x12>
 80065fa:	2400      	movs	r4, #0
 80065fc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006600:	4628      	mov	r0, r5
 8006602:	4798      	blx	r3
 8006604:	2000      	movs	r0, #0
 8006606:	e7e0      	b.n	80065ca <_raise_r+0x12>

08006608 <raise>:
 8006608:	4b02      	ldr	r3, [pc, #8]	; (8006614 <raise+0xc>)
 800660a:	4601      	mov	r1, r0
 800660c:	6818      	ldr	r0, [r3, #0]
 800660e:	f7ff bfd3 	b.w	80065b8 <_raise_r>
 8006612:	bf00      	nop
 8006614:	20000004 	.word	0x20000004

08006618 <_kill_r>:
 8006618:	b538      	push	{r3, r4, r5, lr}
 800661a:	4d07      	ldr	r5, [pc, #28]	; (8006638 <_kill_r+0x20>)
 800661c:	2300      	movs	r3, #0
 800661e:	4604      	mov	r4, r0
 8006620:	4608      	mov	r0, r1
 8006622:	4611      	mov	r1, r2
 8006624:	602b      	str	r3, [r5, #0]
 8006626:	f7fb fa7a 	bl	8001b1e <_kill>
 800662a:	1c43      	adds	r3, r0, #1
 800662c:	d102      	bne.n	8006634 <_kill_r+0x1c>
 800662e:	682b      	ldr	r3, [r5, #0]
 8006630:	b103      	cbz	r3, 8006634 <_kill_r+0x1c>
 8006632:	6023      	str	r3, [r4, #0]
 8006634:	bd38      	pop	{r3, r4, r5, pc}
 8006636:	bf00      	nop
 8006638:	20000224 	.word	0x20000224

0800663c <_getpid_r>:
 800663c:	f7fb ba67 	b.w	8001b0e <_getpid>

08006640 <__sread>:
 8006640:	b510      	push	{r4, lr}
 8006642:	460c      	mov	r4, r1
 8006644:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006648:	f000 f894 	bl	8006774 <_read_r>
 800664c:	2800      	cmp	r0, #0
 800664e:	bfab      	itete	ge
 8006650:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006652:	89a3      	ldrhlt	r3, [r4, #12]
 8006654:	181b      	addge	r3, r3, r0
 8006656:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800665a:	bfac      	ite	ge
 800665c:	6563      	strge	r3, [r4, #84]	; 0x54
 800665e:	81a3      	strhlt	r3, [r4, #12]
 8006660:	bd10      	pop	{r4, pc}

08006662 <__swrite>:
 8006662:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006666:	461f      	mov	r7, r3
 8006668:	898b      	ldrh	r3, [r1, #12]
 800666a:	05db      	lsls	r3, r3, #23
 800666c:	4605      	mov	r5, r0
 800666e:	460c      	mov	r4, r1
 8006670:	4616      	mov	r6, r2
 8006672:	d505      	bpl.n	8006680 <__swrite+0x1e>
 8006674:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006678:	2302      	movs	r3, #2
 800667a:	2200      	movs	r2, #0
 800667c:	f000 f868 	bl	8006750 <_lseek_r>
 8006680:	89a3      	ldrh	r3, [r4, #12]
 8006682:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006686:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800668a:	81a3      	strh	r3, [r4, #12]
 800668c:	4632      	mov	r2, r6
 800668e:	463b      	mov	r3, r7
 8006690:	4628      	mov	r0, r5
 8006692:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006696:	f000 b817 	b.w	80066c8 <_write_r>

0800669a <__sseek>:
 800669a:	b510      	push	{r4, lr}
 800669c:	460c      	mov	r4, r1
 800669e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066a2:	f000 f855 	bl	8006750 <_lseek_r>
 80066a6:	1c43      	adds	r3, r0, #1
 80066a8:	89a3      	ldrh	r3, [r4, #12]
 80066aa:	bf15      	itete	ne
 80066ac:	6560      	strne	r0, [r4, #84]	; 0x54
 80066ae:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80066b2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80066b6:	81a3      	strheq	r3, [r4, #12]
 80066b8:	bf18      	it	ne
 80066ba:	81a3      	strhne	r3, [r4, #12]
 80066bc:	bd10      	pop	{r4, pc}

080066be <__sclose>:
 80066be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066c2:	f000 b813 	b.w	80066ec <_close_r>
	...

080066c8 <_write_r>:
 80066c8:	b538      	push	{r3, r4, r5, lr}
 80066ca:	4d07      	ldr	r5, [pc, #28]	; (80066e8 <_write_r+0x20>)
 80066cc:	4604      	mov	r4, r0
 80066ce:	4608      	mov	r0, r1
 80066d0:	4611      	mov	r1, r2
 80066d2:	2200      	movs	r2, #0
 80066d4:	602a      	str	r2, [r5, #0]
 80066d6:	461a      	mov	r2, r3
 80066d8:	f7fb fa58 	bl	8001b8c <_write>
 80066dc:	1c43      	adds	r3, r0, #1
 80066de:	d102      	bne.n	80066e6 <_write_r+0x1e>
 80066e0:	682b      	ldr	r3, [r5, #0]
 80066e2:	b103      	cbz	r3, 80066e6 <_write_r+0x1e>
 80066e4:	6023      	str	r3, [r4, #0]
 80066e6:	bd38      	pop	{r3, r4, r5, pc}
 80066e8:	20000224 	.word	0x20000224

080066ec <_close_r>:
 80066ec:	b538      	push	{r3, r4, r5, lr}
 80066ee:	4d06      	ldr	r5, [pc, #24]	; (8006708 <_close_r+0x1c>)
 80066f0:	2300      	movs	r3, #0
 80066f2:	4604      	mov	r4, r0
 80066f4:	4608      	mov	r0, r1
 80066f6:	602b      	str	r3, [r5, #0]
 80066f8:	f7fb fa64 	bl	8001bc4 <_close>
 80066fc:	1c43      	adds	r3, r0, #1
 80066fe:	d102      	bne.n	8006706 <_close_r+0x1a>
 8006700:	682b      	ldr	r3, [r5, #0]
 8006702:	b103      	cbz	r3, 8006706 <_close_r+0x1a>
 8006704:	6023      	str	r3, [r4, #0]
 8006706:	bd38      	pop	{r3, r4, r5, pc}
 8006708:	20000224 	.word	0x20000224

0800670c <_fstat_r>:
 800670c:	b538      	push	{r3, r4, r5, lr}
 800670e:	4d07      	ldr	r5, [pc, #28]	; (800672c <_fstat_r+0x20>)
 8006710:	2300      	movs	r3, #0
 8006712:	4604      	mov	r4, r0
 8006714:	4608      	mov	r0, r1
 8006716:	4611      	mov	r1, r2
 8006718:	602b      	str	r3, [r5, #0]
 800671a:	f7fb fa5f 	bl	8001bdc <_fstat>
 800671e:	1c43      	adds	r3, r0, #1
 8006720:	d102      	bne.n	8006728 <_fstat_r+0x1c>
 8006722:	682b      	ldr	r3, [r5, #0]
 8006724:	b103      	cbz	r3, 8006728 <_fstat_r+0x1c>
 8006726:	6023      	str	r3, [r4, #0]
 8006728:	bd38      	pop	{r3, r4, r5, pc}
 800672a:	bf00      	nop
 800672c:	20000224 	.word	0x20000224

08006730 <_isatty_r>:
 8006730:	b538      	push	{r3, r4, r5, lr}
 8006732:	4d06      	ldr	r5, [pc, #24]	; (800674c <_isatty_r+0x1c>)
 8006734:	2300      	movs	r3, #0
 8006736:	4604      	mov	r4, r0
 8006738:	4608      	mov	r0, r1
 800673a:	602b      	str	r3, [r5, #0]
 800673c:	f7fb fa5e 	bl	8001bfc <_isatty>
 8006740:	1c43      	adds	r3, r0, #1
 8006742:	d102      	bne.n	800674a <_isatty_r+0x1a>
 8006744:	682b      	ldr	r3, [r5, #0]
 8006746:	b103      	cbz	r3, 800674a <_isatty_r+0x1a>
 8006748:	6023      	str	r3, [r4, #0]
 800674a:	bd38      	pop	{r3, r4, r5, pc}
 800674c:	20000224 	.word	0x20000224

08006750 <_lseek_r>:
 8006750:	b538      	push	{r3, r4, r5, lr}
 8006752:	4d07      	ldr	r5, [pc, #28]	; (8006770 <_lseek_r+0x20>)
 8006754:	4604      	mov	r4, r0
 8006756:	4608      	mov	r0, r1
 8006758:	4611      	mov	r1, r2
 800675a:	2200      	movs	r2, #0
 800675c:	602a      	str	r2, [r5, #0]
 800675e:	461a      	mov	r2, r3
 8006760:	f7fb fa57 	bl	8001c12 <_lseek>
 8006764:	1c43      	adds	r3, r0, #1
 8006766:	d102      	bne.n	800676e <_lseek_r+0x1e>
 8006768:	682b      	ldr	r3, [r5, #0]
 800676a:	b103      	cbz	r3, 800676e <_lseek_r+0x1e>
 800676c:	6023      	str	r3, [r4, #0]
 800676e:	bd38      	pop	{r3, r4, r5, pc}
 8006770:	20000224 	.word	0x20000224

08006774 <_read_r>:
 8006774:	b538      	push	{r3, r4, r5, lr}
 8006776:	4d07      	ldr	r5, [pc, #28]	; (8006794 <_read_r+0x20>)
 8006778:	4604      	mov	r4, r0
 800677a:	4608      	mov	r0, r1
 800677c:	4611      	mov	r1, r2
 800677e:	2200      	movs	r2, #0
 8006780:	602a      	str	r2, [r5, #0]
 8006782:	461a      	mov	r2, r3
 8006784:	f7fb f9e5 	bl	8001b52 <_read>
 8006788:	1c43      	adds	r3, r0, #1
 800678a:	d102      	bne.n	8006792 <_read_r+0x1e>
 800678c:	682b      	ldr	r3, [r5, #0]
 800678e:	b103      	cbz	r3, 8006792 <_read_r+0x1e>
 8006790:	6023      	str	r3, [r4, #0]
 8006792:	bd38      	pop	{r3, r4, r5, pc}
 8006794:	20000224 	.word	0x20000224

08006798 <_init>:
 8006798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800679a:	bf00      	nop
 800679c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800679e:	bc08      	pop	{r3}
 80067a0:	469e      	mov	lr, r3
 80067a2:	4770      	bx	lr

080067a4 <_fini>:
 80067a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067a6:	bf00      	nop
 80067a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80067aa:	bc08      	pop	{r3}
 80067ac:	469e      	mov	lr, r3
 80067ae:	4770      	bx	lr
